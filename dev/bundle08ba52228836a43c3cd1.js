/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@popperjs/core/lib/createPopper.js":
/*!*********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/createPopper.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createPopper": () => (/* binding */ createPopper),
/* harmony export */   "detectOverflow": () => (/* reexport safe */ _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_13__["default"]),
/* harmony export */   "popperGenerator": () => (/* binding */ popperGenerator)
/* harmony export */ });
/* harmony import */ var _dom_utils_getCompositeRect_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dom-utils/getCompositeRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js");
/* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dom-utils/getLayoutRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js");
/* harmony import */ var _dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-utils/listScrollParents.js */ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js");
/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dom-utils/getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _utils_orderModifiers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/orderModifiers.js */ "./node_modules/@popperjs/core/lib/utils/orderModifiers.js");
/* harmony import */ var _utils_debounce_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/debounce.js */ "./node_modules/@popperjs/core/lib/utils/debounce.js");
/* harmony import */ var _utils_validateModifiers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/validateModifiers.js */ "./node_modules/@popperjs/core/lib/utils/validateModifiers.js");
/* harmony import */ var _utils_uniqueBy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/uniqueBy.js */ "./node_modules/@popperjs/core/lib/utils/uniqueBy.js");
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _utils_mergeByName_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/mergeByName.js */ "./node_modules/@popperjs/core/lib/utils/mergeByName.js");
/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./enums.js */ "./node_modules/@popperjs/core/lib/enums.js");














var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(setOptionsAction) {
        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: (0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(reference) ? (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__["default"])(reference) : reference.contextElement ? (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__["default"])(reference.contextElement) : [],
          popper: (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__["default"])(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = (0,_utils_orderModifiers_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_utils_mergeByName_js__WEBPACK_IMPORTED_MODULE_3__["default"])([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        }); // Validate the provided modifiers so that the consumer will get warned
        // if one of the modifiers is invalid for any reason

        if (true) {
          var modifiers = (0,_utils_uniqueBy_js__WEBPACK_IMPORTED_MODULE_4__["default"])([].concat(orderedModifiers, state.options.modifiers), function (_ref) {
            var name = _ref.name;
            return name;
          });
          (0,_utils_validateModifiers_js__WEBPACK_IMPORTED_MODULE_5__["default"])(modifiers);

          if ((0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state.options.placement) === _enums_js__WEBPACK_IMPORTED_MODULE_7__.auto) {
            var flipModifier = state.orderedModifiers.find(function (_ref2) {
              var name = _ref2.name;
              return name === 'flip';
            });

            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', 'present and enabled to work.'].join(' '));
            }
          }

          var _getComputedStyle = (0,_dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"])(popper),
              marginTop = _getComputedStyle.marginTop,
              marginRight = _getComputedStyle.marginRight,
              marginBottom = _getComputedStyle.marginBottom,
              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can
          // cause bugs with positioning, so we'll warn the consumer


          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));
          }
        }

        runModifierEffects();
        return instance.update();
      },
      // Sync update â€“ it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          if (true) {
            console.error(INVALID_ELEMENT_ERROR);
          }

          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: (0,_dom_utils_getCompositeRect_js__WEBPACK_IMPORTED_MODULE_9__["default"])(reference, (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__["default"])(popper), state.options.strategy === 'fixed'),
          popper: (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_11__["default"])(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (true) {
            __debug_loops__ += 1;

            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }

          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update â€“ it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: (0,_utils_debounce_js__WEBPACK_IMPORTED_MODULE_12__["default"])(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      if (true) {
        console.error(INVALID_ELEMENT_ERROR);
      }

      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref3) {
        var name = _ref3.name,
            _ref3$options = _ref3.options,
            options = _ref3$options === void 0 ? {} : _ref3$options,
            effect = _ref3.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}
var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/contains.js":
/*!***************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/contains.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ contains)
/* harmony export */ });
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getBoundingClientRect)
/* harmony export */ });
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");


function getBoundingClientRect(element, includeScale) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  var rect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;

  if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) && includeScale) {
    var offsetHeight = element.offsetHeight;
    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale
    // Fallback to 1 in case both values are `0`

    if (offsetWidth > 0) {
      scaleX = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_1__.round)(rect.width) / offsetWidth || 1;
    }

    if (offsetHeight > 0) {
      scaleY = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_1__.round)(rect.height) / offsetHeight || 1;
    }
  }

  return {
    width: rect.width / scaleX,
    height: rect.height / scaleY,
    top: rect.top / scaleY,
    right: rect.right / scaleX,
    bottom: rect.bottom / scaleY,
    left: rect.left / scaleX,
    x: rect.left / scaleX,
    y: rect.top / scaleY
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getClippingRect)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _getViewportRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getViewportRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js");
/* harmony import */ var _getDocumentRect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getDocumentRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js");
/* harmony import */ var _listScrollParents_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./listScrollParents.js */ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js");
/* harmony import */ var _getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
/* harmony import */ var _contains_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./contains.js */ "./node_modules/@popperjs/core/lib/dom-utils/contains.js");
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/rectToClientRect.js */ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");















function getInnerBoundingClientRect(element) {
  var rect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === _enums_js__WEBPACK_IMPORTED_MODULE_1__.viewport ? (0,_utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_getViewportRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element)) : (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clippingParent) ? getInnerBoundingClientRect(clippingParent) : (0,_utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_getDocumentRect_js__WEBPACK_IMPORTED_MODULE_5__["default"])((0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_6__["default"])(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = (0,_listScrollParents_js__WEBPACK_IMPORTED_MODULE_7__["default"])((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_8__["default"])(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf((0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_9__["default"])(element).position) >= 0;
  var clipperElement = canEscapeClipping && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isHTMLElement)(element) ? (0,_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__["default"])(element) : element;

  if (!(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clippingParent) && (0,_contains_js__WEBPACK_IMPORTED_MODULE_11__["default"])(clippingParent, clipperElement) && (0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_12__["default"])(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.max)(rect.top, accRect.top);
    accRect.right = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.min)(rect.right, accRect.right);
    accRect.bottom = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.min)(rect.bottom, accRect.bottom);
    accRect.left = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.max)(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getCompositeRect)
/* harmony export */ });
/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
/* harmony import */ var _getNodeScroll_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getNodeScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js");
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");









function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(rect.width) / element.offsetWidth || 1;
  var scaleY = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var isOffsetParentAnElement = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent);
  var offsetParentIsScaled = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent) && isElementScaled(offsetParent);
  var documentElement = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(offsetParent);
  var rect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])(elementOrVirtualElement, offsetParentIsScaled);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__["default"])(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(documentElement)) {
      scroll = (0,_getNodeScroll_js__WEBPACK_IMPORTED_MODULE_6__["default"])(offsetParent);
    }

    if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent)) {
      offsets = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_7__["default"])(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getComputedStyle)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");

function getComputedStyle(element) {
  return (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element).getComputedStyle(element);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getDocumentElement)
/* harmony export */ });
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return (((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getDocumentRect)
/* harmony export */ });
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js");
/* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWindowScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");




 // Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
  var winScroll = (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element);
  var y = -winScroll.scrollTop;

  if ((0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_4__["default"])(body || html).direction === 'rtl') {
    x += (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getHTMLElementScroll)
/* harmony export */ });
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getLayoutRect)
/* harmony export */ });
/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
 // Returns the layout rect of an element relative to its offsetParent. Layout
// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js":
/*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getNodeName)
/* harmony export */ });
function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getNodeScroll)
/* harmony export */ });
/* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindowScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _getHTMLElementScroll_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getHTMLElementScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js");




function getNodeScroll(node) {
  if (node === (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node) || !(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(node)) {
    return (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__["default"])(node);
  } else {
    return (0,_getHTMLElementScroll_js__WEBPACK_IMPORTED_MODULE_3__["default"])(node);
  }
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getOffsetParent)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _isTableElement_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isTableElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js");
/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");







function getTrueOffsetParent(element) {
  if (!(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || // https://github.com/popperjs/popper-core/issues/837
  (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
  var isIE = navigator.userAgent.indexOf('Trident') !== -1;

  if (isIE && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = (0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element);

  if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(currentNode)) {
    currentNode = currentNode.host;
  }

  while ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(currentNode) && ['html', 'body'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_3__["default"])(currentNode)) < 0) {
    var css = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && (0,_isTableElement_js__WEBPACK_IMPORTED_MODULE_5__["default"])(offsetParent) && (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_3__["default"])(offsetParent) === 'html' || (0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_3__["default"])(offsetParent) === 'body' && (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getParentNode)
/* harmony export */ });
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");



function getParentNode(element) {
  if ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isShadowRoot)(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element) // fallback

  );
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getScrollParent)
/* harmony export */ });
/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
/* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");




function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(node) && (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(node)) {
    return node;
  }

  return getScrollParent((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__["default"])(node));
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getViewportRect)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js");



function getViewportRect(element) {
  var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
  var html = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
  // can be obscured underneath it.
  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
  // if it isn't open, so if this isn't available, the popper will be detected
  // to overflow the bottom of the screen too early.

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
    // errors due to floating point numbers, so we need to check precision.
    // Safari returns a number <= 0, usually < -1 when pinch-zoomed
    // Feature detection fails in mobile emulation mode in Chrome.
    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
    // 0.001
    // Fallback here: "Not Safari" userAgent

    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element),
    y: y
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js":
/*!****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getWindow)
/* harmony export */ });
function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getWindowScroll)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");

function getWindowScroll(node) {
  var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getWindowScrollBarX)
/* harmony export */ });
/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindowScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");



function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__["default"])((0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element)).left + (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element).scrollLeft;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isElement": () => (/* binding */ isElement),
/* harmony export */   "isHTMLElement": () => (/* binding */ isHTMLElement),
/* harmony export */   "isShadowRoot": () => (/* binding */ isShadowRoot)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");


function isElement(node) {
  var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isScrollParent)
/* harmony export */ });
/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isTableElement)
/* harmony export */ });
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element)) >= 0;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js":
/*!************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ listScrollParents)
/* harmony export */ });
/* harmony import */ var _getScrollParent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js");
/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");




/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = (0,_getScrollParent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__["default"])(target)));
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/enums.js":
/*!**************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/enums.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "afterMain": () => (/* binding */ afterMain),
/* harmony export */   "afterRead": () => (/* binding */ afterRead),
/* harmony export */   "afterWrite": () => (/* binding */ afterWrite),
/* harmony export */   "auto": () => (/* binding */ auto),
/* harmony export */   "basePlacements": () => (/* binding */ basePlacements),
/* harmony export */   "beforeMain": () => (/* binding */ beforeMain),
/* harmony export */   "beforeRead": () => (/* binding */ beforeRead),
/* harmony export */   "beforeWrite": () => (/* binding */ beforeWrite),
/* harmony export */   "bottom": () => (/* binding */ bottom),
/* harmony export */   "clippingParents": () => (/* binding */ clippingParents),
/* harmony export */   "end": () => (/* binding */ end),
/* harmony export */   "left": () => (/* binding */ left),
/* harmony export */   "main": () => (/* binding */ main),
/* harmony export */   "modifierPhases": () => (/* binding */ modifierPhases),
/* harmony export */   "placements": () => (/* binding */ placements),
/* harmony export */   "popper": () => (/* binding */ popper),
/* harmony export */   "read": () => (/* binding */ read),
/* harmony export */   "reference": () => (/* binding */ reference),
/* harmony export */   "right": () => (/* binding */ right),
/* harmony export */   "start": () => (/* binding */ start),
/* harmony export */   "top": () => (/* binding */ top),
/* harmony export */   "variationPlacements": () => (/* binding */ variationPlacements),
/* harmony export */   "viewport": () => (/* binding */ viewport),
/* harmony export */   "write": () => (/* binding */ write)
/* harmony export */ });
var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "afterMain": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.afterMain),
/* harmony export */   "afterRead": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.afterRead),
/* harmony export */   "afterWrite": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.afterWrite),
/* harmony export */   "applyStyles": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.applyStyles),
/* harmony export */   "arrow": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.arrow),
/* harmony export */   "auto": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.auto),
/* harmony export */   "basePlacements": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements),
/* harmony export */   "beforeMain": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.beforeMain),
/* harmony export */   "beforeRead": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.beforeRead),
/* harmony export */   "beforeWrite": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.beforeWrite),
/* harmony export */   "bottom": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom),
/* harmony export */   "clippingParents": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.clippingParents),
/* harmony export */   "computeStyles": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.computeStyles),
/* harmony export */   "createPopper": () => (/* reexport safe */ _popper_js__WEBPACK_IMPORTED_MODULE_4__.createPopper),
/* harmony export */   "createPopperBase": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_2__.createPopper),
/* harmony export */   "createPopperLite": () => (/* reexport safe */ _popper_lite_js__WEBPACK_IMPORTED_MODULE_5__.createPopper),
/* harmony export */   "detectOverflow": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "end": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.end),
/* harmony export */   "eventListeners": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.eventListeners),
/* harmony export */   "flip": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.flip),
/* harmony export */   "hide": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.hide),
/* harmony export */   "left": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.left),
/* harmony export */   "main": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.main),
/* harmony export */   "modifierPhases": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.modifierPhases),
/* harmony export */   "offset": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.offset),
/* harmony export */   "placements": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.placements),
/* harmony export */   "popper": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper),
/* harmony export */   "popperGenerator": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_2__.popperGenerator),
/* harmony export */   "popperOffsets": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.popperOffsets),
/* harmony export */   "preventOverflow": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.preventOverflow),
/* harmony export */   "read": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.read),
/* harmony export */   "reference": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.reference),
/* harmony export */   "right": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.right),
/* harmony export */   "start": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.start),
/* harmony export */   "top": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.top),
/* harmony export */   "variationPlacements": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements),
/* harmony export */   "viewport": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.viewport),
/* harmony export */   "write": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.write)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/index.js */ "./node_modules/@popperjs/core/lib/modifiers/index.js");
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/createPopper.js");
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _popper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./popper.js */ "./node_modules/@popperjs/core/lib/popper.js");
/* harmony import */ var _popper_lite_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./popper-lite.js */ "./node_modules/@popperjs/core/lib/popper-lite.js");

 // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js":
/*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom-utils/getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");

 // This modifier takes the styles prepared by the `computeStyles` modifier
// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!(0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || !(0,_dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!(0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || !(0,_dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect,
  requires: ['computeStyles']
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/arrow.js":
/*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/arrow.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getLayoutRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js");
/* harmony import */ var _dom_utils_contains_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../dom-utils/contains.js */ "./node_modules/@popperjs/core/lib/dom-utils/contains.js");
/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getMainAxisFromPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js");
/* harmony import */ var _utils_within_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/within.js */ "./node_modules/@popperjs/core/lib/utils/within.js");
/* harmony import */ var _utils_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/mergePaddingObject.js */ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js");
/* harmony import */ var _utils_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/expandToHashMap.js */ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");









 // eslint-disable-next-line import/no-unused-modules

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return (0,_utils_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(typeof padding !== 'number' ? padding : (0,_utils_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(padding, _enums_js__WEBPACK_IMPORTED_MODULE_2__.basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(state.placement);
  var axis = (0,_utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(basePlacement);
  var isVertical = [_enums_js__WEBPACK_IMPORTED_MODULE_2__.left, _enums_js__WEBPACK_IMPORTED_MODULE_2__.right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_5__["default"])(arrowElement);
  var minProp = axis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.top : _enums_js__WEBPACK_IMPORTED_MODULE_2__.left;
  var maxProp = axis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_2__.right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_6__["default"])(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_7__.within)(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (true) {
    if (!(0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_8__.isHTMLElement)(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));
    }
  }

  if (!(0,_dom_utils_contains_js__WEBPACK_IMPORTED_MODULE_9__["default"])(state.elements.popper, arrowElement)) {
    if (true) {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', 'element.'].join(' '));
    }

    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "mapToStyles": () => (/* binding */ mapToStyles)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom-utils/getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom-utils/getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");







 // eslint-disable-next-line import/no-unused-modules

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref) {
  var x = _ref.x,
      y = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(x * dpr) / dpr || 0,
    y: (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(y * dpr) / dpr || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      variation = _ref2.variation,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets,
      isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x,
      x = _offsets$x === void 0 ? 0 : _offsets$x,
      _offsets$y = offsets.y,
      y = _offsets$y === void 0 ? 0 : _offsets$y;

  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = _enums_js__WEBPACK_IMPORTED_MODULE_1__.left;
  var sideY = _enums_js__WEBPACK_IMPORTED_MODULE_1__.top;
  var win = window;

  if (adaptive) {
    var offsetParent = (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__["default"])(popper)) {
      offsetParent = (0,_dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(popper);

      if ((0,_dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_5__["default"])(offsetParent).position !== 'static' && position === 'absolute') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.top || (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.left || placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.right) && variation === _enums_js__WEBPACK_IMPORTED_MODULE_1__.end) {
      sideY = _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]
      offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.left || (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.top || placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom) && variation === _enums_js__WEBPACK_IMPORTED_MODULE_1__.end) {
      sideX = _enums_js__WEBPACK_IMPORTED_MODULE_1__.right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]
      offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref4.x;
  y = _ref4.y;

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref5) {
  var state = _ref5.state,
      options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;

  if (true) {
    var transitionProperty = (0,_dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_5__["default"])(state.elements.popper).transitionProperty || '';

    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {
      return transitionProperty.indexOf(property) >= 0;
    })) {
      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: "transform", "top", "right", "bottom", "left".', '\n\n', 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\n\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));
    }
  }

  var commonStyles = {
    placement: (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state.placement),
    variation: (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_7__["default"])(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration,
    isFixed: state.options.strategy === 'fixed'
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom-utils/getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
 // eslint-disable-next-line import/no-unused-modules

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/flip.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/flip.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/getOppositePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js");
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getOppositeVariationPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js");
/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _utils_computeAutoPlacement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/computeAutoPlacement.js */ "./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");






 // eslint-disable-next-line import/no-unused-modules

function getExpandedFallbackPlacements(placement) {
  if ((0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.auto) {
    return [];
  }

  var oppositePlacement = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(placement);
  return [(0,_utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(placement), oppositePlacement, (0,_utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [(0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat((0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.auto ? (0,_utils_computeAutoPlacement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement);

    var isStartVariation = (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_5__["default"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.start;
    var isVertical = [_enums_js__WEBPACK_IMPORTED_MODULE_1__.top, _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? _enums_js__WEBPACK_IMPORTED_MODULE_1__.right : _enums_js__WEBPACK_IMPORTED_MODULE_1__.left : isStartVariation ? _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_1__.top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(mainVariationSide);
    }

    var altVariationSide = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases â€“ research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/hide.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/hide.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");



function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [_enums_js__WEBPACK_IMPORTED_MODULE_0__.top, _enums_js__WEBPACK_IMPORTED_MODULE_0__.right, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom, _enums_js__WEBPACK_IMPORTED_MODULE_0__.left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "applyStyles": () => (/* reexport safe */ _applyStyles_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "arrow": () => (/* reexport safe */ _arrow_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "computeStyles": () => (/* reexport safe */ _computeStyles_js__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   "eventListeners": () => (/* reexport safe */ _eventListeners_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "flip": () => (/* reexport safe */ _flip_js__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   "hide": () => (/* reexport safe */ _hide_js__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   "offset": () => (/* reexport safe */ _offset_js__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   "popperOffsets": () => (/* reexport safe */ _popperOffsets_js__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   "preventOverflow": () => (/* reexport safe */ _preventOverflow_js__WEBPACK_IMPORTED_MODULE_8__["default"])
/* harmony export */ });
/* harmony import */ var _applyStyles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./applyStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js");
/* harmony import */ var _arrow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arrow.js */ "./node_modules/@popperjs/core/lib/modifiers/arrow.js");
/* harmony import */ var _computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./computeStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js");
/* harmony import */ var _eventListeners_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventListeners.js */ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js");
/* harmony import */ var _flip_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flip.js */ "./node_modules/@popperjs/core/lib/modifiers/flip.js");
/* harmony import */ var _hide_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hide.js */ "./node_modules/@popperjs/core/lib/modifiers/hide.js");
/* harmony import */ var _offset_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./offset.js */ "./node_modules/@popperjs/core/lib/modifiers/offset.js");
/* harmony import */ var _popperOffsets_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./popperOffsets.js */ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js");
/* harmony import */ var _preventOverflow_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./preventOverflow.js */ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js");










/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/offset.js":
/*!*************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/offset.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "distanceAndSkiddingToXY": () => (/* binding */ distanceAndSkiddingToXY)
/* harmony export */ });
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");

 // eslint-disable-next-line import/no-unused-modules

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement);
  var invertDistance = [_enums_js__WEBPACK_IMPORTED_MODULE_1__.left, _enums_js__WEBPACK_IMPORTED_MODULE_1__.top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [_enums_js__WEBPACK_IMPORTED_MODULE_1__.left, _enums_js__WEBPACK_IMPORTED_MODULE_1__.right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = _enums_js__WEBPACK_IMPORTED_MODULE_1__.placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_computeOffsets_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/computeOffsets.js */ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js");


function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = (0,_utils_computeOffsets_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getMainAxisFromPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js");
/* harmony import */ var _utils_getAltAxis_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getAltAxis.js */ "./node_modules/@popperjs/core/lib/utils/getAltAxis.js");
/* harmony import */ var _utils_within_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/within.js */ "./node_modules/@popperjs/core/lib/utils/within.js");
/* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getLayoutRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js");
/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
/* harmony import */ var _utils_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/getFreshSideObject.js */ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");












function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(state.placement);
  var variation = (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_2__["default"])(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = (0,_utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(basePlacement);
  var altAxis = (0,_utils_getAltAxis_js__WEBPACK_IMPORTED_MODULE_4__["default"])(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis) {
    var _offsetModifierState$;

    var mainSide = mainAxis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.top : _enums_js__WEBPACK_IMPORTED_MODULE_5__.left;
    var altSide = mainAxis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_5__.right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min = offset + overflow[mainSide];
    var max = offset - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === _enums_js__WEBPACK_IMPORTED_MODULE_5__.start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === _enums_js__WEBPACK_IMPORTED_MODULE_5__.start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__["default"])(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : (0,_utils_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_7__["default"])();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_9__["default"])(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset + maxOffset - offsetModifierValue;
    var preventedOffset = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(tether ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_10__.min)(min, tetherMin) : min, offset, tether ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_10__.max)(max, tetherMax) : max);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }

  if (checkAltAxis) {
    var _offsetModifierState$2;

    var _mainSide = mainAxis === 'x' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.top : _enums_js__WEBPACK_IMPORTED_MODULE_5__.left;

    var _altSide = mainAxis === 'x' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_5__.right;

    var _offset = popperOffsets[altAxis];

    var _len = altAxis === 'y' ? 'height' : 'width';

    var _min = _offset + overflow[_mainSide];

    var _max = _offset - overflow[_altSide];

    var isOriginSide = [_enums_js__WEBPACK_IMPORTED_MODULE_5__.top, _enums_js__WEBPACK_IMPORTED_MODULE_5__.left].indexOf(basePlacement) !== -1;

    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;

    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;

    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;

    var _preventedOffset = tether && isOriginSide ? (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.withinMaxClamp)(_tetherMin, _offset, _tetherMax) : (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);

    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/popper-lite.js":
/*!********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/popper-lite.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createPopper": () => (/* binding */ createPopper),
/* harmony export */   "defaultModifiers": () => (/* binding */ defaultModifiers),
/* harmony export */   "detectOverflow": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   "popperGenerator": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_4__.popperGenerator)
/* harmony export */ });
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/createPopper.js");
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modifiers/eventListeners.js */ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js");
/* harmony import */ var _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/popperOffsets.js */ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js");
/* harmony import */ var _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modifiers/computeStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js");
/* harmony import */ var _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modifiers/applyStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js");





var defaultModifiers = [_modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__["default"], _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__["default"], _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__["default"], _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__["default"]];
var createPopper = /*#__PURE__*/(0,_createPopper_js__WEBPACK_IMPORTED_MODULE_4__.popperGenerator)({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/popper.js":
/*!***************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/popper.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "applyStyles": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.applyStyles),
/* harmony export */   "arrow": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.arrow),
/* harmony export */   "computeStyles": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.computeStyles),
/* harmony export */   "createPopper": () => (/* binding */ createPopper),
/* harmony export */   "createPopperLite": () => (/* reexport safe */ _popper_lite_js__WEBPACK_IMPORTED_MODULE_11__.createPopper),
/* harmony export */   "defaultModifiers": () => (/* binding */ defaultModifiers),
/* harmony export */   "detectOverflow": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_10__["default"]),
/* harmony export */   "eventListeners": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.eventListeners),
/* harmony export */   "flip": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.flip),
/* harmony export */   "hide": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.hide),
/* harmony export */   "offset": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.offset),
/* harmony export */   "popperGenerator": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_9__.popperGenerator),
/* harmony export */   "popperOffsets": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.popperOffsets),
/* harmony export */   "preventOverflow": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.preventOverflow)
/* harmony export */ });
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/createPopper.js");
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modifiers/eventListeners.js */ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js");
/* harmony import */ var _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/popperOffsets.js */ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js");
/* harmony import */ var _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modifiers/computeStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js");
/* harmony import */ var _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modifiers/applyStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js");
/* harmony import */ var _modifiers_offset_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modifiers/offset.js */ "./node_modules/@popperjs/core/lib/modifiers/offset.js");
/* harmony import */ var _modifiers_flip_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modifiers/flip.js */ "./node_modules/@popperjs/core/lib/modifiers/flip.js");
/* harmony import */ var _modifiers_preventOverflow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modifiers/preventOverflow.js */ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js");
/* harmony import */ var _modifiers_arrow_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modifiers/arrow.js */ "./node_modules/@popperjs/core/lib/modifiers/arrow.js");
/* harmony import */ var _modifiers_hide_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modifiers/hide.js */ "./node_modules/@popperjs/core/lib/modifiers/hide.js");
/* harmony import */ var _popper_lite_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./popper-lite.js */ "./node_modules/@popperjs/core/lib/popper-lite.js");
/* harmony import */ var _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modifiers/index.js */ "./node_modules/@popperjs/core/lib/modifiers/index.js");










var defaultModifiers = [_modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__["default"], _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__["default"], _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__["default"], _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__["default"], _modifiers_offset_js__WEBPACK_IMPORTED_MODULE_4__["default"], _modifiers_flip_js__WEBPACK_IMPORTED_MODULE_5__["default"], _modifiers_preventOverflow_js__WEBPACK_IMPORTED_MODULE_6__["default"], _modifiers_arrow_js__WEBPACK_IMPORTED_MODULE_7__["default"], _modifiers_hide_js__WEBPACK_IMPORTED_MODULE_8__["default"]];
var createPopper = /*#__PURE__*/(0,_createPopper_js__WEBPACK_IMPORTED_MODULE_9__.popperGenerator)({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ computeAutoPlacement)
/* harmony export */ });
/* harmony import */ var _getVariation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _detectOverflow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");




function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.placements : _options$allowedAutoP;
  var variation = (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(placement);
  var placements = variation ? flipVariations ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements : _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements.filter(function (placement) {
    return (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(placement) === variation;
  }) : _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements;
  var allowedPlacements = placements.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements;

    if (true) {
      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(' '));
    }
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = (0,_detectOverflow_js__WEBPACK_IMPORTED_MODULE_2__["default"])(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[(0,_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/computeOffsets.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ computeOffsets)
/* harmony export */ });
/* harmony import */ var _getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _getVariation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
/* harmony import */ var _getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getMainAxisFromPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");




function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? (0,_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement) : null;
  var variation = placement ? (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? (0,_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;

      default:
    }
  }

  return offsets;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/debounce.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/debounce.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ debounce)
/* harmony export */ });
function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/detectOverflow.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ detectOverflow)
/* harmony export */ });
/* harmony import */ var _dom_utils_getClippingRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom-utils/getClippingRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js");
/* harmony import */ var _dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _dom_utils_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
/* harmony import */ var _computeOffsets_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./computeOffsets.js */ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js");
/* harmony import */ var _rectToClientRect_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rectToClientRect.js */ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mergePaddingObject.js */ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js");
/* harmony import */ var _expandToHashMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./expandToHashMap.js */ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js");








 // eslint-disable-next-line import/no-unused-modules

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = (0,_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(typeof padding !== 'number' ? padding : (0,_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_2__["default"])(padding, _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements));
  var altContext = elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.reference : _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = (0,_dom_utils_getClippingRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])((0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(element) ? element : element.contextElement || (0,_dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_5__["default"])(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = (0,_dom_utils_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state.elements.reference);
  var popperOffsets = (0,_computeOffsets_js__WEBPACK_IMPORTED_MODULE_7__["default"])({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = (0,_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_8__["default"])(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [_enums_js__WEBPACK_IMPORTED_MODULE_0__.right, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [_enums_js__WEBPACK_IMPORTED_MODULE_0__.top, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js":
/*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ expandToHashMap)
/* harmony export */ });
function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/format.js":
/*!*********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/format.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ format)
/* harmony export */ });
function format(str) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return [].concat(args).reduce(function (p, c) {
    return p.replace(/%s/, c);
  }, str);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getAltAxis.js":
/*!*************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getAltAxis.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getAltAxis)
/* harmony export */ });
function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getBasePlacement)
/* harmony export */ });

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getFreshSideObject)
/* harmony export */ });
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getMainAxisFromPlacement)
/* harmony export */ });
function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getOppositePlacement)
/* harmony export */ });
var hash = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getOppositeVariationPlacement)
/* harmony export */ });
var hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getVariation.js":
/*!***************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getVariation.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getVariation)
/* harmony export */ });
function getVariation(placement) {
  return placement.split('-')[1];
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/math.js":
/*!*******************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/math.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "max": () => (/* binding */ max),
/* harmony export */   "min": () => (/* binding */ min),
/* harmony export */   "round": () => (/* binding */ round)
/* harmony export */ });
var max = Math.max;
var min = Math.min;
var round = Math.round;

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/mergeByName.js":
/*!**************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/mergeByName.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ mergeByName)
/* harmony export */ });
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ mergePaddingObject)
/* harmony export */ });
/* harmony import */ var _getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getFreshSideObject.js */ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js");

function mergePaddingObject(paddingObject) {
  return Object.assign({}, (0,_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(), paddingObject);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/orderModifiers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/orderModifiers.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ orderModifiers)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
 // source: https://stackoverflow.com/questions/49875255

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return _enums_js__WEBPACK_IMPORTED_MODULE_0__.modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ rectToClientRect)
/* harmony export */ });
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/uniqueBy.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/uniqueBy.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ uniqueBy)
/* harmony export */ });
function uniqueBy(arr, fn) {
  var identifiers = new Set();
  return arr.filter(function (item) {
    var identifier = fn(item);

    if (!identifiers.has(identifier)) {
      identifiers.add(identifier);
      return true;
    }
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/validateModifiers.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/validateModifiers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ validateModifiers)
/* harmony export */ });
/* harmony import */ var _format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./format.js */ "./node_modules/@popperjs/core/lib/utils/format.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");


var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
var VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];
function validateModifiers(modifiers) {
  modifiers.forEach(function (modifier) {
    [].concat(Object.keys(modifier), VALID_PROPERTIES) // IE11-compatible replacement for `new Set(iterable)`
    .filter(function (value, index, self) {
      return self.indexOf(value) === index;
    }).forEach(function (key) {
      switch (key) {
        case 'name':
          if (typeof modifier.name !== 'string') {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', "\"" + String(modifier.name) + "\""));
          }

          break;

        case 'enabled':
          if (typeof modifier.enabled !== 'boolean') {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', "\"" + String(modifier.enabled) + "\""));
          }

          break;

        case 'phase':
          if (_enums_js__WEBPACK_IMPORTED_MODULE_1__.modifierPhases.indexOf(modifier.phase) < 0) {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + _enums_js__WEBPACK_IMPORTED_MODULE_1__.modifierPhases.join(', '), "\"" + String(modifier.phase) + "\""));
          }

          break;

        case 'fn':
          if (typeof modifier.fn !== 'function') {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'effect':
          if (modifier.effect != null && typeof modifier.effect !== 'function') {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'requires':
          if (modifier.requires != null && !Array.isArray(modifier.requires)) {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', "\"" + String(modifier.requires) + "\""));
          }

          break;

        case 'requiresIfExists':
          if (!Array.isArray(modifier.requiresIfExists)) {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', "\"" + String(modifier.requiresIfExists) + "\""));
          }

          break;

        case 'options':
        case 'data':
          break;

        default:
          console.error("PopperJS: an invalid property has been provided to the \"" + modifier.name + "\" modifier, valid properties are " + VALID_PROPERTIES.map(function (s) {
            return "\"" + s + "\"";
          }).join(', ') + "; but \"" + key + "\" was provided.");
      }

      modifier.requires && modifier.requires.forEach(function (requirement) {
        if (modifiers.find(function (mod) {
          return mod.name === requirement;
        }) == null) {
          console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
        }
      });
    });
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/within.js":
/*!*********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/within.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "within": () => (/* binding */ within),
/* harmony export */   "withinMaxClamp": () => (/* binding */ withinMaxClamp)
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");

function within(min, value, max) {
  return (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.max)(min, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.min)(value, max));
}
function withinMaxClamp(min, value, max) {
  var v = within(min, value, max);
  return v > max ? max : v;
}

/***/ }),

/***/ "./node_modules/audiobuffer-to-wav/index.js":
/*!**************************************************!*\
  !*** ./node_modules/audiobuffer-to-wav/index.js ***!
  \**************************************************/
/***/ ((module) => {

module.exports = audioBufferToWav
function audioBufferToWav (buffer, opt) {
  opt = opt || {}

  var numChannels = buffer.numberOfChannels
  var sampleRate = buffer.sampleRate
  var format = opt.float32 ? 3 : 1
  var bitDepth = format === 3 ? 32 : 16

  var result
  if (numChannels === 2) {
    result = interleave(buffer.getChannelData(0), buffer.getChannelData(1))
  } else {
    result = buffer.getChannelData(0)
  }

  return encodeWAV(result, format, sampleRate, numChannels, bitDepth)
}

function encodeWAV (samples, format, sampleRate, numChannels, bitDepth) {
  var bytesPerSample = bitDepth / 8
  var blockAlign = numChannels * bytesPerSample

  var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample)
  var view = new DataView(buffer)

  /* RIFF identifier */
  writeString(view, 0, 'RIFF')
  /* RIFF chunk length */
  view.setUint32(4, 36 + samples.length * bytesPerSample, true)
  /* RIFF type */
  writeString(view, 8, 'WAVE')
  /* format chunk identifier */
  writeString(view, 12, 'fmt ')
  /* format chunk length */
  view.setUint32(16, 16, true)
  /* sample format (raw) */
  view.setUint16(20, format, true)
  /* channel count */
  view.setUint16(22, numChannels, true)
  /* sample rate */
  view.setUint32(24, sampleRate, true)
  /* byte rate (sample rate * block align) */
  view.setUint32(28, sampleRate * blockAlign, true)
  /* block align (channel count * bytes per sample) */
  view.setUint16(32, blockAlign, true)
  /* bits per sample */
  view.setUint16(34, bitDepth, true)
  /* data chunk identifier */
  writeString(view, 36, 'data')
  /* data chunk length */
  view.setUint32(40, samples.length * bytesPerSample, true)
  if (format === 1) { // Raw PCM
    floatTo16BitPCM(view, 44, samples)
  } else {
    writeFloat32(view, 44, samples)
  }

  return buffer
}

function interleave (inputL, inputR) {
  var length = inputL.length + inputR.length
  var result = new Float32Array(length)

  var index = 0
  var inputIndex = 0

  while (index < length) {
    result[index++] = inputL[inputIndex]
    result[index++] = inputR[inputIndex]
    inputIndex++
  }
  return result
}

function writeFloat32 (output, offset, input) {
  for (var i = 0; i < input.length; i++, offset += 4) {
    output.setFloat32(offset, input[i], true)
  }
}

function floatTo16BitPCM (output, offset, input) {
  for (var i = 0; i < input.length; i++, offset += 2) {
    var s = Math.max(-1, Math.min(1, input[i]))
    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true)
  }
}

function writeString (view, offset, string) {
  for (var i = 0; i < string.length; i++) {
    view.setUint8(offset + i, string.charCodeAt(i))
  }
}


/***/ }),

/***/ "./src/easyspeech/easyspeech.js":
/*!**************************************!*\
  !*** ./src/easyspeech/easyspeech.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var _excluded = ["logger", "text", "voice", "pitch", "rate", "volume", "force"];

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @module EasySpeech
 * @typicalname EasySpeech
 */

/**
 * Cross browser Speech Synthesis with easy API.
 * This project was created, because it's always a struggle to get the synthesis
 * part of `Web Speech API` running on most major browsers.
 *
 * Setup is very straight forward (see example).
 *
 * @example
 * import EasySpeech from 'easy-speech'
 *
 * const example = async () => {
 *   await EasySpeech.init() // required
 *   await EasySpeech.speak({ 'Hello, world' })
 * }
 *
 * @see https://wicg.github.io/speech-api/#tts-section
 * @see https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis
 * @type {Object}
 */
var EasySpeech = {};
/**
  * To support multiple environments (browser, node) we define scope, based
  * on what's available with window as priority, since Browsers are main target.
  * @private
  */

var scope = globalThis;
/**
  * @private
  * @type {{
  *  status: String,
     initialized: Boolean,
     speechSynthesis: null|SpeechSynthesis,
     speechSynthesisUtterance: null|SpeechSynthesisUtterance,
     speechSynthesisVoice: null|SpeechSynthesisVoice,
     speechSynthesisEvent: null|SpeechSynthesisEvent,
     speechSynthesisErrorEvent: null|SpeechSynthesisErrorEvent,
     voices: null|Array<SpeechSynthesisVoice>,
     defaults: {
       pitch: Number,
       rate: Number,
       volume: Number,
       voice: null|SpeechSynthesisVoice
     },
     handlers: {}
  * }}
  */

var internal = {
  status: 'created'
};
var patches = {};
/*******************************************************************************
  *
  * AVAILABLE WITHOUT INIT
  *
  ******************************************************************************/

/**
  * Enable module-internal debugging by passing your own callback function.
  * Debug will automatically pass through all updates to `status`
  *
  * @example
  * import EasySpeech from 'easy-speech'
  * import Log from '/path/to/my/Log'
  *
  * EasySpeech.debug(arg => Log.debug('EasySpeech:', arg))
  *
  * @param {Function} fn A function, which always receives one argument, that
  *  represents a current debug message
  */

EasySpeech.debug = function (fn) {
  debug = typeof fn === 'function' ? fn : function () {};
};

var debug = function debug() {};
/**
  * Detects all possible occurrences of the main Web Speech API components
  * in the global scope.
  *
  * The returning object will have the following structure (see example).
  *
  * @example
  * EasySpeech.detect()
  *
  * {
  *     speechSynthesis: SpeechSynthesis|undefined,
  *     speechSynthesisUtterance: SpeechSynthesisUtterance|undefined,
  *     speechSynthesisVoice: SpeechSynthesisVoice|undefined,
  *     speechSynthesisEvent: SpeechSynthesisEvent|undefined,
  *     speechSynthesisErrorEvent: SpeechSynthesisErrorEvent|undefined,
  *     onvoiceschanged: Boolean,
  *     onboundary: Boolean,
  *     onend: Boolean,
  *     onerror: Boolean,
  *     onmark: Boolean,
  *     onpause: Boolean,
  *     onresume: Boolean,
  *     onstart: Boolean
  * }
  *
  * @returns {object} An object containing all possible features and their status
  */


EasySpeech.detect = function () {
  return detectFeatures();
};
/** @private **/


var detectFeatures = function detectFeatures() {
  var features = {};
  ['speechSynthesis', 'speechSynthesisUtterance', 'speechSynthesisVoice', 'speechSynthesisEvent', 'speechSynthesisErrorEvent'].forEach(function (feature) {
    features[feature] = detect(feature);
  });
  features.onvoiceschanged = hasProperty(features.speechSynthesis, 'onvoiceschanged');
  var hasUtterance = hasProperty(features.speechSynthesisUtterance, 'prototype');
  utteranceEvents.forEach(function (event) {
    var name = "on".concat(event);
    features[name] = hasUtterance && hasProperty(features.speechSynthesisUtterance.prototype, name);
  }); // not published to the outside

  patches.isAndroid = isAndroid();
  patches.isFirefox = isFirefox();
  patches.isSafari = isSafari();
  debug("is android: ".concat(!!patches.isAndroid));
  debug("is firefox: ".concat(!!patches.isFirefox));
  debug("is safari: ".concat(!!patches.isSafari));
  return features;
};
/** @private **/


var hasProperty = function hasProperty() {
  var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var prop = arguments.length > 1 ? arguments[1] : undefined;
  return Object.hasOwnProperty.call(target, prop) || prop in target || !!target[prop];
};
/** @private **/


var isAndroid = function isAndroid() {
  var ua = (scope.navigator || {}).userAgent || '';
  return /android/i.test(ua);
};
/** @private **/


var isFirefox = function isFirefox() {
  return typeof scope.InstallTrigger !== 'undefined';
};

var isSafari = function isSafari() {
  return typeof scope.GestureEvent !== 'undefined';
};
/**
  * Common prefixes for browsers that tend to implement their custom names for
  * certain parts of their API.
  * @private
  **/


var prefixes = ['webKit', 'moz', 'ms', 'o'];
/**
  * Make the first character of a String uppercase
  * @private
  **/

var capital = function capital(s) {
  return "".concat(s.charAt(0).toUpperCase()).concat(s.slice(1));
};
/**
  * Find a feature in global scope by checking for various combinations and
  * variations of the base-name
  * @param {String} baseName name of the component to look for, must begin with
  *   lowercase char
  * @return {Object|undefined} The component from global scope, if found
  * @private
  **/


var detect = function detect(baseName) {
  var capitalBaseName = capital(baseName);
  var baseNameWithPrefixes = prefixes.map(function (p) {
    return "".concat(p).concat(capitalBaseName);
  });
  var found = [baseName, capitalBaseName].concat(baseNameWithPrefixes).find(inGlobalScope);
  return scope[found];
};
/**
  * Returns, if a given name exists in global scope
  * @private
  * @param name
  * @return {boolean}
  */


var inGlobalScope = function inGlobalScope(name) {
  return scope[name];
};
/**
  * Returns a shallow copy of the current internal status. Depending of the
  * current state this might return an object with only a single field `status`
  * or a complete Object, including detected features, `defaults`, `handlers`
  * and supported `voices`.
  *
  * @example
  * import EasySpeech from 'easy-speech'
  *
  * // uninitialized
  * EasySpeech.status() // { status: 'created' }
  *
  * // after EasySpeech.init
  * EasySpeech.status()
  *
  * {
  *   status: 'init: complete',
  *   initialized: true,
  *   speechSynthesis: speechSynthesis,
  *   speechSynthesisUtterance: SpeechSynthesisUtterance,
  *   speechSynthesisVoice: SpeechSynthesisVoice,
  *   speechSynthesisEvent: SpeechSynthesisEvent,
  *   speechSynthesisErrorEvent: SpeechSynthesisErrorEvent,
  *   voices: [...],
  *   defaults: {
  *     pitch: 1,
  *     rate: 1,
  *     volume: 1,
  *     voice: null
  *   },
  *   handlers: {}
  * }
  *
  * @return {Object} the internal status
  */


EasySpeech.status = function () {
  return _objectSpread({}, internal);
};
/**
  * Updates the internal status
  * @private
  * @param {String} s the current status to set
  */


var status = function status(s) {
  debug(s);
  internal.status = s;
};
/**
  * This is the function you need to run, before being able to speak.
  * It includes:
  * - feature detection
  * - feature assignment (into internal state)
  * - voices loading
  * - state update
  * - inform caller about success
  *
  * It will load voices by a variety of strategies:
  *
  * - detect and that SpeechSynthesis is basically supported, if not -> fail
  * - load voices directly
  * - if not loaded but `onvoiceschanged` is available: use `onvoiceschanged`
  * - if `onvoiceschanged` is not available: fallback to timeout
  * - if `onvoiceschanged` is fired but no voices available: fallback to timeout
  * - timeout reloads voices in a given `interval` until a `maxTimeout` is reached
  * - if voices are loaded until then -> complete
  * - if no voices found -> fail
  *
  * Note: if once initialized you can't re-init (will skip and resolve to
  * `false`) unless you run `EasySpeech.reset()`.
  *
  * @return {Promise<Boolean>}
  * @fulfil {Boolean} true, if initialized, false, if skipped (because already
  *   initialized)
  * @reject {Error} - The error `message` property will always begin with
  *   `EasySpeech: ` and contain one of the following:
  *
  *   - `browser misses features` - The browser will not be able to use speech
  *      synthesis at all as it misses crucial features
  *   - `browser has no voices (timeout)` - No voice could be loaded with neither
  *      of the given strategies; chances are high the browser does not have
  *      any voices embedded (example: Chromium on *buntu os')
  */


EasySpeech.init = function () {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$maxTimeout = _ref.maxTimeout,
      maxTimeout = _ref$maxTimeout === void 0 ? 5000 : _ref$maxTimeout,
      _ref$interval = _ref.interval,
      interval = _ref$interval === void 0 ? 250 : _ref$interval;

  return new Promise(function (resolve, reject) {
    if (internal.initialized) {
      return resolve(false);
    }

    EasySpeech.reset();
    status('init: start'); // there may be the case, that the browser needs to load using a timer
    // so we declare it at the top to make sure the interval is always cleared
    // when we exit the Promise via fail / complete

    var timer;
    var voicesChangedListener;
    var completeCalled = false;

    var fail = function fail(errorMessage) {
      status("init: failed (".concat(errorMessage, ")"));
      clearInterval(timer);
      internal.initialized = false;
      return reject(new Error("EasySpeech: ".concat(errorMessage)));
    };

    var complete = function complete() {
      // avoid race-conditions between listeners and timeout
      if (completeCalled) {
        return;
      }

      status('init: complete'); // set flags immediately

      completeCalled = true;
      internal.initialized = true; // cleanup events and timer

      clearInterval(timer);
      speechSynthesis.onvoiceschanged = null;

      if (voicesChangedListener) {
        speechSynthesis.removeEventListener('voiceschanged', voicesChangedListener);
      } // all done


      return resolve(true);
    }; // before initializing we force-detect all required browser features


    var features = detectFeatures();
    var hasAllFeatures = !!features.speechSynthesis && !!features.speechSynthesisUtterance;

    if (!hasAllFeatures) {
      return fail('browser misses features');
    } // assign all detected features to our internal definitions


    Object.keys(features).forEach(function (feature) {
      internal[feature] = features[feature];
    }); // start initializing

    var speechSynthesis = internal.speechSynthesis;

    var voicesLoaded = function voicesLoaded() {
      var voices = speechSynthesis.getVoices() || [];

      if (voices.length > 0) {
        internal.voices = voices;
        status("voices loaded: ".concat(voices.length)); // if we find a default voice, set it as default

        internal.defaultVoice = voices.find(function (v) {
          return v["default"];
        }); // otherwise let's stick to the first one we can find by locale

        if (!internal.defaultVoice) {
          var language = (scope.navigator || {}).language || '';
          var lang = language.split('-')[0];
          internal.defaultVoice = voices.find(function (v) {
            return v.lang && (v.lang.indexOf("".concat(lang, "-")) > -1 || v.lang.indexOf("".concat(lang, "_")) > -1);
          });
        } // otherwise let's use the first element in the array


        if (!internal.defaultVoice) {
          internal.defaultVoice = voices[0];
        }

        return true;
      }

      return false;
    };

    status('init: voices'); // best case: detect if voices can be loaded directly

    if (voicesLoaded()) {
      return complete();
    } // last possible fallback method: run a timer until max. timeout and reload


    var loadViaTimeout = function loadViaTimeout() {
      status('init: voices (timer)');
      var timeout = 0;
      timer = setInterval(function () {
        if (voicesLoaded()) {
          return complete();
        }

        if (timeout > maxTimeout) {
          return fail('browser has no voices (timeout)');
        }

        timeout += interval;
      }, interval);
    }; // detect if voices can be loaded after onveoiceschanged,
    // but only if the browser supports this event


    if (features.onvoiceschanged) {
      status('init: voices (onvoiceschanged)');

      speechSynthesis.onvoiceschanged = function () {
        if (voicesLoaded()) {
          return complete();
        } // xxx: some browsers (like chrome on android still have not all
        // voices loaded at this point, whichs is why we need to enter
        // the timeout-based method here.


        return loadViaTimeout();
      }; // xxx: there is an edge-case where browser provide onvoiceschanged,
      // but they never load the voices, so init would never complete
      // in such case we need to fail after maxTimeout


      setTimeout(function () {
        if (voicesLoaded()) {
          return complete();
        }

        return fail('browser has no voices (timeout)');
      }, maxTimeout);
    } else {
      // this is a very problematic case, since we don't really know, whether
      // this event will fire at all, so we need to setup both a listener AND
      // run the timeout and make sure on of them "wins"
      // affected browsers may be: MacOS Safari
      if (hasProperty(speechSynthesis, 'addEventListener')) {
        status('init: voices (addEventListener)');

        voicesChangedListener = function voicesChangedListener() {
          if (voicesLoaded()) {
            return complete();
          }
        };

        speechSynthesis.addEventListener('voiceschanged', voicesChangedListener);
      } // for all browser not supporting onveoiceschanged we start a timer
      // until we reach a certain timeout and try to get the voices


      loadViaTimeout();
    }
  });
};
/**
  * Placed as first line in functions that require `EasySpeech.init` before they
  * can run.
  * @param {boolean=} force set to true to force-skip check
  * @private
  */


var ensureInit = function ensureInit() {
  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      force = _ref2.force;

  if (!force && !internal.initialized) {
    throw new Error('EasySpeech: not initialized. Run EasySpeech.init() first');
  }
};
/*******************************************************************************
  *
  * AVAILABLE ONLY AFTER INIT
  *
  ******************************************************************************/

/**
  * Returns all available voices.
  *
  * @condition `EasySpeech.init` must have been called and resolved to `true`
  * @return {Array<SpeechSynthesisVoice>}
  */


EasySpeech.voices = function () {
  ensureInit();
  return internal.voices;
};
/**
  * Attaches global/default handlers to every utterance instance. The handlers
  * will run in parallel to any additional handlers, attached when calling
  * `EasySpeech.speak`
  *
  * @condition `EasySpeech.init` must have been called and resolved to `true`
  *
  * @param {Object} handlers
  * @param {function=} handlers.boundary - optional, event handler
  * @param {function=} handlers.end - optional, event handler
  * @param {function=} handlers.error - optional, event handler
  * @param {function=} handlers.mark - optional, event handler
  * @param {function=} handlers.pause - optional, event handler
  * @param {function=} handlers.resume - optional, event handler
  * @param {function=} handlers.start - optional, event handler
  *
  * @return {Object} a shallow copy of the Object, containing all global handlers
  */


EasySpeech.on = function (handlers) {
  ensureInit();
  utteranceEvents.forEach(function (name) {
    var handler = handlers[name];

    if (validate.handler(handler)) {
      internal.handlers[name] = handler;
    }
  });
  return _objectSpread({}, internal.handlers);
};
/**
  * We use these keys to search for these events in handler objects and defaults
  * @private
  */


var utteranceEvents = ['boundary', 'end', 'error', 'mark', 'pause', 'resume', 'start'];
/**
  * Internal validation of passed parameters
  * @private
  */

var validate = {
  isNumber: function isNumber(n) {
    return typeof n === 'number' && !Number.isNaN(n);
  },
  pitch: function pitch(p) {
    return validate.isNumber(p) && p >= 0 && p <= 2;
  },
  volume: function volume(v) {
    return validate.isNumber(v) && v >= 0 && v <= 1;
  },
  rate: function rate(r) {
    return validate.isNumber(r) && r >= 0.1 && r <= 10;
  },
  text: function text(t) {
    return typeof t === 'string';
  },
  handler: function handler(h) {
    return typeof h === 'function';
  },
  // we prefer duck typing here, mostly because there are cases where
  // SpeechSynthesisVoice is not defined on global scope but is supported
  // when using getVoices().
  voice: function voice(v) {
    return v && v.lang && v.name && v.voiceURI;
  }
};
/**
  * Sets defaults for utterances. Invalid values will be ignored without error
  * or warning.
  *
  * @see https://wicg.github.io/speech-api/#utterance-attributes
  * @param {object=} options - Optional object containing values to set values
  * @param {object=} options.voice - Optional `SpeechSynthesisVoice` instance or
  *  `SpeechSynthesisVoice`-like Object
  * @param {number=} options.pitch - Optional pitch value >= 0 and <= 2
  * @param {number=} options.rate - Optional rate value >= 0.1 and <= 10
  * @param {number=} options.volume - Optional volume value >= 0 and <= 1
  *
  * @return {object} a shallow copy of the current defaults
  */

EasySpeech.defaults = function (options) {
  ensureInit();

  if (options) {
    internal.defaults = internal.defaults || {};
    ['voice', 'pitch', 'rate', 'volume'].forEach(function (name) {
      var value = options[name];
      var isValid = validate[name];

      if (isValid(value)) {
        internal.defaults[name] = value;
      }
    });
  }

  return _objectSpread({}, internal.defaults);
};
/**
  * Determines the current voice and makes sure, there is always a voice returned
  * @private
  * @param voice
  * @return {*|SpeechSynthesisVoice|{}}
  */


var getCurrentVoice = function getCurrentVoice(voice) {
  var _internal$defaults, _internal$voices;

  return voice || ((_internal$defaults = internal.defaults) === null || _internal$defaults === void 0 ? void 0 : _internal$defaults.voice) || internal.defaultVoice || ((_internal$voices = internal.voices) === null || _internal$voices === void 0 ? void 0 : _internal$voices[0]);
};
/**
  * Creates a new `SpeechSynthesisUtterance` instance
  * @private
  * @param text
  */


var createUtterance = function createUtterance(text) {
  var UtteranceClass = internal.speechSynthesisUtterance;
  return new UtteranceClass(text);
};
/**
  * Speaks a voice by given parameters, constructs utterance by best possible
  * combinations of parameters and defaults.
  *
  * If the given utterance parameters are missing or invalid, defaults will be
  * used as fallback.
  *
  * @example
  * const voice = EasySpeech.voices()[10] // get a voice you like
  *
  * EasySpeech.speak({
  *   text: 'Hello, world',
  *   voice: voice,
  *   pitch: 1.2,  // a little bit higher
  *   rate: 1.7, // a little bit faster
  *   boundary: event => console.debug('word boundary reached', event.charIndex),
  *   error: e => notify(e)
  * })
  *
  * @param {object} options - required options
  * @param {string} text - required text to speak
  * @param {object=} voice - optional `SpeechSynthesisVoice` instance or
  *   structural similar object (if `SpeechSynthesisUtterance` is not supported)
  * @param {number=} options.pitch - Optional pitch value >= 0 and <= 2
  * @param {number=} options.rate - Optional rate value >= 0.1 and <= 10
  * @param {number=} options.volume - Optional volume value >= 0 and <= 1
  * @param {boolean=} options.force - Optional set to true to force speaking, no matter the internal state
  * @param {object=} handlers - optional additional local handlers, can be
  *   directly added as top-level properties of the options
  * @param {function=} handlers.boundary - optional, event handler
  * @param {function=} handlers.end - optional, event handler
  * @param {function=} handlers.error - optional, event handler
  * @param {function=} handlers.mark - optional, event handler
  * @param {function=} handlers.pause - optional, event handler
  * @param {function=} handlers.resume - optional, event handler
  * @param {function=} handlers.start - optional, event handler
  *
  *
  * @return {Promise<SpeechSynthesisEvent|SpeechSynthesisErrorEvent>}
  * @fulfill {SpeechSynthesisEvent} Resolves to the `end` event
  * @reject {SpeechSynthesisEvent} rejects using the `error` event
  */


EasySpeech.speak = function (_ref3) {
  var logger = _ref3.logger,
      text = _ref3.text,
      voice = _ref3.voice,
      pitch = _ref3.pitch,
      rate = _ref3.rate,
      volume = _ref3.volume,
      force = _ref3.force,
      handlers = _objectWithoutProperties(_ref3, _excluded);

  // console.log(`logger:${logger}`)
  logger('inside speak');
  ensureInit({
    force: force
  });

  if (!validate.text(text)) {
    throw new Error('EasySpeech: at least some valid text is required to speak');
  }

  var getValue = function getValue(options) {
    var _internal$defaults2;

    var _Object$entries$ = _slicedToArray(Object.entries(options)[0], 2),
        name = _Object$entries$[0],
        value = _Object$entries$[1];

    if (validate[name](value)) {
      return value;
    }

    return (_internal$defaults2 = internal.defaults) === null || _internal$defaults2 === void 0 ? void 0 : _internal$defaults2[name];
  };

  return new Promise(function (resolve, reject) {
    status('init speak');
    var utterance = createUtterance(text);
    var currentVoice = getCurrentVoice(voice);
    logger("currentVoice:".concat(currentVoice ? currentVoice.name : 'no current voice')); // XXX: if we force-speak, we may not get a current voice!
    // This may occur when the browser won't load voices but
    // provides SpeechSynth and SpeechSynthUtterance.
    // We then might at least try to speak something with defaults

    if (currentVoice) {
      utterance.voice = currentVoice;
      utterance.lang = currentVoice.lang;
      utterance.voiceURI = currentVoice.voiceURI;
    }

    utterance.text = text;
    utterance.pitch = getValue({
      pitch: pitch
    });
    utterance.rate = getValue({
      rate: rate
    });
    utterance.volume = getValue({
      volume: volume
    });
    debugUtterance(utterance);
    utteranceEvents.forEach(function (name) {
      var _internal$handlers;

      var fn = handlers[name];

      if (validate.handler(fn)) {
        utterance.addEventListener(name, fn);
      }

      if ((_internal$handlers = internal.handlers) !== null && _internal$handlers !== void 0 && _internal$handlers[name]) {
        utterance.addEventListener(name, internal.handlers[name]);
      }
    }); // always attached are start, end and error listeners
    // XXX: chrome won't play longer tts texts in one piece and stops after a few
    // words. We need to add an intervall here in order prevent this. See:
    // https://stackoverflow.com/questions/21947730/chrome-speech-synthesis-with-longer-texts
    //
    // XXX: this apparently works only on chrome desktop, while it breaks chrome
    // mobile (android), so we need to detect chrome desktop
    //
    // XXX: resumeInfinity breaks on firefox macOs so we need to avoid it there
    // as well. Since we don't need it in FF anyway, we can safely skip there
    //
    // XXX: resumeInfinity is also incompatible with older safari ios versions
    // so we skip it on safari, too.

    utterance.addEventListener('start', function () {
      patches.paused = false;
      patches.speaking = true;

      if (!patches.isFirefox && !patches.isSafari && patches.isAndroid !== true) {
        resumeInfinity(utterance);
      }
    });
    utterance.addEventListener('end', function (endEvent) {
      status('speak complete');
      patches.paused = false;
      patches.speaking = false;
      clearTimeout(timeoutResumeInfinity);
      resolve(endEvent);
    });
    utterance.addEventListener('error', function () {
      var errorEvent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      status("speak failed: ".concat(errorEvent.message));
      patches.paused = false;
      patches.speaking = false;
      clearTimeout(timeoutResumeInfinity);
      reject(errorEvent);
    }); // make sure we have no mem-leak

    clearTimeout(timeoutResumeInfinity);
    internal.speechSynthesis.cancel();
    setTimeout(function () {
      internal.speechSynthesis.speak(utterance);
    }, 10);
  });
};
/** @private **/


var debugUtterance = function debugUtterance(_ref4) {
  var voice = _ref4.voice,
      pitch = _ref4.pitch,
      rate = _ref4.rate,
      volume = _ref4.volume;
  debug("utterance: voice=".concat(voice === null || voice === void 0 ? void 0 : voice.name, " volume=").concat(volume, " rate=").concat(rate, " pitch=").concat(pitch));
};
/**
  * Timer variable to clear interval
  * @private
  */


var timeoutResumeInfinity;
/**
  * Fixes long texts in some browsers
  * @private
  * @param target
  */

function resumeInfinity(target) {
  // prevent memory-leak in case utterance is deleted, while this is ongoing
  if (!target && timeoutResumeInfinity) {
    debug('force-clear timeout');
    return scope.clearTimeout(timeoutResumeInfinity);
  } // only execute on speaking utterances, otherwise paused
  // utterances will get resumed, thus breaking user experience
  // include internal patching, since some systems have problems with
  // pause/resume and updateing the internal state on speechSynthesis


  var _internal$speechSynth = internal.speechSynthesis,
      paused = _internal$speechSynth.paused,
      speaking = _internal$speechSynth.speaking;
  var isSpeaking = speaking || patches.speaking;
  var isPaused = paused || patches.paused;
  debug("resumeInfinity isSpeaking=".concat(isSpeaking, " isPaused=").concat(isPaused));

  if (isSpeaking && !isPaused) {
    internal.speechSynthesis.pause();
    internal.speechSynthesis.resume();
  }

  timeoutResumeInfinity = scope.setTimeout(function () {
    resumeInfinity(target);
  }, 5000);
}
/**
  * Cancels the current speaking, if any running
  */


EasySpeech.cancel = function () {
  ensureInit();
  status('cancelling');
  internal.speechSynthesis.cancel();
  patches.paused = false;
  patches.speaking = false;
};
/**
  * Resumes to speak, if any paused
  */


EasySpeech.resume = function () {
  ensureInit();
  status('resuming');
  patches.paused = false;
  patches.speaking = true;
  internal.speechSynthesis.resume();
};
/**
  * Pauses the current speaking, if any running
  */


EasySpeech.pause = function () {
  ensureInit();
  status('pausing'); // exec pause on Android causes speech to end but not to fire end-event
  // se we simply do it manually instead of pausing

  if (patches.isAndroid) {
    debug('patch pause on Android with cancel');
    return internal.speechSynthesis.cancel();
  }

  internal.speechSynthesis.pause(); // in some cases, pause does not update the internal state,
  // so we need to update it manually using an own state

  patches.paused = true;
  patches.speaking = false;
};
/**
  * Resets the internal state to a default-uninitialized state
  */


EasySpeech.reset = function () {
  Object.assign(internal, {
    status: 'reset',
    initialized: false,
    speechSynthesis: null,
    speechSynthesisUtterance: null,
    speechSynthesisVoice: null,
    speechSynthesisEvent: null,
    speechSynthesisErrorEvent: null,
    voices: null,
    defaultVoice: null,
    defaults: {
      pitch: 1,
      rate: 1,
      volume: 1,
      voice: null
    },
    handlers: {}
  });
};
/**
  * EasySpeech is the default export; you can import it with whichever name you
  * like
  *
  * @example
  * import EasySpeech from 'easy-speech'
  * @example
  * import Easy from 'easy-speech'
  */


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EasySpeech);

/***/ }),

/***/ "./src/morse-pro/morse-pro-cw-wave.js":
/*!********************************************!*\
  !*** ./src/morse-pro/morse-pro-cw-wave.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MorseCWWave)
/* harmony export */ });
/* harmony import */ var _morse_pro_cw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./morse-pro-cw */ "./src/morse-pro/morse-pro-cw.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/*!
This code is Â© Copyright Stephen C. Phillips, 2018.
Email: steve@scphillips.com
*/

/*
Licensed under the EUPL, Version 1.2 or â€“ as soon they will be approved by the European Commission - subsequent versions of the EUPL (the "Licence");
You may not use this work except in compliance with the Licence.
You may obtain a copy of the Licence at: https://joinup.ec.europa.eu/community/eupl/
Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the Licence for the specific language governing permissions and limitations under the Licence.
*/

/**
 * Class to create sine-wave samples of standard CW Morse.
 *
 * @example
 * import MorseCWWave from 'morse-pro-cw-wave';
 * var morseCWWave = new MorseCWWave();
 * morseCWWave.translate("abc");
 * var sample = morseCWWave.getSample();
 */

var MorseCWWave = /*#__PURE__*/function (_MorseCW) {
  _inherits(MorseCWWave, _MorseCW);

  var _super = _createSuper(MorseCWWave);

  /**
   * @param {any} [frequency=550] - frequency of wave in Hz
   * @param {number} [sampleRate=8000] - sample rate for the waveform in Hz
   */
  function MorseCWWave(useProsigns, wpm, fwpm) {
    var _this;

    var frequency = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 550;
    var sampleRate = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 8000;

    _classCallCheck(this, MorseCWWave);

    _this = _super.call(this, useProsigns, wpm, fwpm);
    /** @type {number} */

    _this.singleFrequency = typeof frequency.dit == "undefined";
    _this.frequency = frequency; // frequency of wave in Hz

    /** @type {number} */

    _this.sampleRate = sampleRate; // sample rate for the waveform in Hz

    return _this;
  }
  /**
   * Get a sample waveform, not using Web Audio API (synchronous).
   * @param {number} [endPadding=0] - how much silence in ms to add to the end of the waveform.
   * @return {number[]} an array of floats in range [-1, 1] representing the wave-form.
   */


  _createClass(MorseCWWave, [{
    key: "getSample",
    value: function getSample() {
      var endPadding = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var prePadding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      return MorseCWWave.getSampleGeneral(this.getTimings(true), this.frequency, this.sampleRate, endPadding, prePadding);
    }
    /**
     * Get a sample waveform, not using Web Audio API (synchronous).
     * @param {number[]} timings - millisecond timings, +ve numbers representing sound, -ve for no sound (+ve/-ve can be in any order)
     * @param {number} frequency - frequency of sound in Hz.
     * @param {number} sampleRate - sample rate in Hz.
     * @param {number} [endPadding=0] - how much silence in ms to add to the end of the waveform.
     * @return {number[]} an array of floats in range [-1, 1] representing the wave-form.
     */

  }, {
    key: "getWAASample",
    value:
    /**
     * Get a sample waveform using Web Audio API (asynchronous).
     * @param {number} [endPadding=0] - how much silence in ms to add to the end of the waveform.
     * @return {Promise(number[])} a Promise resolving to an array of floats in range [-1, 1] representing the wave-form.
     */
    function getWAASample() {
      var endPadding = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      // add minimum of 5ms silence to the end to ensure the filtered signal can finish cleanly
      endPadding = Math.max(5, endPadding);
      var timings = this.getTimings();
      timings.push(-endPadding);
      var offlineAudioContextClass = window.OfflineAudioContext || window.webkitOfflineAudioContext;

      if (offlineAudioContextClass === undefined) {
        throw new Error("No OfflineAudioContext class defined");
      } // buffer length is the Morse duration + 5ms to let the lowpass filter end cleanly


      var offlineCtx = new offlineAudioContextClass(1, this.sampleRate * (this.getDuration() + endPadding) / 1000, this.sampleRate);
      var gainNode = offlineCtx.createGain(); // empirically, the lowpass filter outputs waveform of magnitude 1.23, so need to scale it down to avoid clipping

      gainNode.gain.setValueAtTime(0.813, 0);
      var lowPassNode = offlineCtx.createBiquadFilter();
      lowPassNode.type = "lowpass";
      lowPassNode.frequency.setValueAtTime(this.frequency * 1.1, 0); // TODO: remove this magic number and make the filter configurable?

      gainNode.connect(lowPassNode);
      lowPassNode.connect(offlineCtx.destination);
      var t = 0;
      var oscillator;
      var duration;

      for (var i = 0; i < timings.length; i++) {
        duration = Math.abs(timings[i]) / 1000;

        if (timings[i] > 0) {
          // -ve timings are silence
          oscillator = offlineCtx.createOscillator();
          oscillator.type = 'sine';
          oscillator.frequency.setValueAtTime(this.frequency, t);
          oscillator.start(t);
          oscillator.stop(t + duration);
          oscillator.connect(gainNode);
        }

        t += duration;
      }

      return offlineCtx.startRendering().then(function (renderedBuffer) {
        return renderedBuffer.getChannelData(0);
      });
    }
  }], [{
    key: "getSampleGeneral",
    value: function getSampleGeneral(timings, frequency, sampleRate) {
      var endPadding = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
      var prePadding = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
      var sample = [];

      if (timings.length === 0) {
        return [];
      }

      if (prePadding > 0) {
        timings.unshift({
          "time": -1 * prePadding,
          "type": ""
        });
      }

      var noDetails = typeof timings[0].time == "undefined"; // add minimum of 5ms silence to the end to ensure the filtered signal can finish cleanly

      var silenceLength = -Math.max(5, endPadding);
      timings.push(noDetails ? silenceLength : {
        "time": silenceLength,
        "type": ""
      });
      /*
          Compute filtered signal
      */

      var firstLength = noDetails ? timings[0] : timings[0].time;
      var on = firstLength > 0 ? 1 : 0;
      var x0,
          x1 = 0,
          x2 = 0;
      var y0,
          y1 = 0,
          y2 = 0;
      var gain = 0.813; // empirically, the lowpass filter outputs waveform of magnitude 1.23, so need to scale it down to avoid clipping

      for (var t = 0; t < timings.length; t += 1) {
        var duration = sampleRate * Math.abs(noDetails ? timings[t] : timings[t].time) / 1000;

        for (var i = 0; i < duration; i += 1) {
          var ditFrequency = typeof frequency.dit == "undefined" ? frequency : frequency.dit;
          var dahFrequency = typeof frequency.dah == "undefined" ? frequency : frequency.dah;
          var ditStep = Math.PI * 2 * ditFrequency / sampleRate;
          var dahStep = Math.PI * 2 * dahFrequency / sampleRate;
          var stepToUse = ditStep;
          var freqToUse = ditFrequency;

          if (!noDetails && timings[t].type == "dah") {
            stepToUse = dahStep;
            freqToUse = dahFrequency;
          }

          x0 = on * Math.sin(i * stepToUse); // the input signal

          /*
          Compute lowpass biquad filter coefficients using method from Chromium
          */
          // set lowpass frequency cutoff to 1.5 x wave frequency

          var lowpassFreq = freqToUse * 1.5 / sampleRate;
          var q = Math.SQRT1_2;
          var sin = Math.sin(2 * Math.PI * lowpassFreq);
          var cos = Math.cos(2 * Math.PI * lowpassFreq);
          var alpha = sin / (2 * Math.pow(10, q / 20));
          var a0 = 1 + alpha;
          var b0 = (1 - cos) * 0.5 / a0;
          var b1 = (1 - cos) / a0;
          var b2 = (1 - cos) * 0.5 / a0;
          var a1 = -2 * cos / a0;
          var a2 = (1 - alpha) / a0;
          y0 = b0 * x0 + b1 * x1 + b2 * x2 - a1 * y1 - a2 * y2;
          sample.push(y0 * gain);
          x2 = x1;
          x1 = x0;
          y2 = y1;
          y1 = y0;
        }

        on = 1 - on;
      }

      return sample;
    }
  }]);

  return MorseCWWave;
}(_morse_pro_cw__WEBPACK_IMPORTED_MODULE_0__["default"]);



/***/ }),

/***/ "./src/morse-pro/morse-pro-cw.js":
/*!***************************************!*\
  !*** ./src/morse-pro/morse-pro-cw.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MorseCW)
/* harmony export */ });
/* harmony import */ var _morse_pro_wpm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./morse-pro-wpm */ "./src/morse-pro/morse-pro-wpm.js");
/* harmony import */ var _morse_pro_message__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./morse-pro-message */ "./src/morse-pro/morse-pro-message.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/*!
This code is Â© Copyright Stephen C. Phillips, 2018.
Email: steve@scphillips.com
*/

/*
Licensed under the EUPL, Version 1.2 or â€“ as soon they will be approved by the European Commission - subsequent versions of the EUPL (the "Licence");
You may not use this work except in compliance with the Licence.
You may obtain a copy of the Licence at: https://joinup.ec.europa.eu/community/eupl/
Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the Licence for the specific language governing permissions and limitations under the Licence.
*/


/**
 * Class to create the on/off timings needed by e.g. sound generators. Timings are in milliseconds; "off" timings are negative.
 *
 * @example
 * import MorseCW from 'morse-pro-cw';
 * var morseCW = new MorseCW();
 * morseCW.translate("abc");
 * var timings = morseCW.getTimings();
 */

var MorseCW = /*#__PURE__*/function (_MorseMessage) {
  _inherits(MorseCW, _MorseMessage);

  var _super = _createSuper(MorseCW);

  /**
   * @param {boolean} [prosigns=true] - whether or not to include prosigns in the translations
   * @param {number} [wpm=20] - the speed in words per minute using PARIS as the standard word
   * @param {number} [fwpm=wpm] - the Farnsworth speed in words per minute (defaults to wpm)
   */
  function MorseCW() {
    var _this;

    var useProsigns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
    var wpm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;
    var fwpm = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : wpm;

    _classCallCheck(this, MorseCW);

    _this = _super.call(this, useProsigns);
    /** @type {number} */

    _this.wpm = wpm;
    /** @type {number} */

    _this.fwpm = fwpm;
    return _this;
  }
  /** 
   * Set the WPM speed. Ensures that Farnsworth WPM is no faster than WPM.
   * @type {number} */


  _createClass(MorseCW, [{
    key: "wpm",
    get:
    /** @type {number} */
    function get() {
      return this._wpm;
    }
    /**
     * Set the Farnsworth WPM speed. Ensures that WPM is no slower than Farnsworth WPM.
     *  @type {number} */
    ,
    set: function set(wpm) {
      this._wpm = wpm;

      if (wpm < this._fwpm) {
        this._fwpm = wpm;
      }
    }
  }, {
    key: "fwpm",
    get:
    /** @type {number} */
    function get() {
      return this._fwpm;
    }
    /** 
     * Get the length of the space between words in ms.
     * @type {number} */
    ,
    set: function set(fwpm) {
      this._fwpm = fwpm;

      if (fwpm > this._wpm) {
        this._wpm = fwpm;
      }
    }
  }, {
    key: "wordSpace",
    get: function get() {
      return _morse_pro_wpm__WEBPACK_IMPORTED_MODULE_0__.wordSpace(this._wpm, this._fwpm);
    }
    /**
     * Return an array of millisecond timings.
     * With the Farnsworth method, the morse characters are played at one
     * speed and the spaces between characters at a slower speed.
     * @return {number[]}
     */

  }, {
    key: "getTimings",
    value: function getTimings(withDetails) {
      return MorseCW.getTimingsGeneral(_morse_pro_wpm__WEBPACK_IMPORTED_MODULE_0__.ditLength(this._wpm), _morse_pro_wpm__WEBPACK_IMPORTED_MODULE_0__.dahLength(this._wpm), _morse_pro_wpm__WEBPACK_IMPORTED_MODULE_0__.ditSpace(this._wpm), _morse_pro_wpm__WEBPACK_IMPORTED_MODULE_0__.charSpace(this._wpm, this._fwpm), _morse_pro_wpm__WEBPACK_IMPORTED_MODULE_0__.wordSpace(this._wpm, this._fwpm), this.morse, withDetails);
    }
    /**
     * Return an array of millisecond timings.
     * Each sound and space has a duration. The durations of the spaces are distinguished by being negative.
     * @param {number} dit - the length of a dit in milliseconds
     * @param {number} dah - the length of a dah in milliseconds (normally 3 * dit)
     * @param {number} ditSpace - the length of an intra-character space in milliseconds (1 * dit)
     * @param {number} charSpace - the length of an inter-character space in milliseconds (normally 3 * dit)
     * @param {number} wordSpace - the length of an inter-word space in milliseconds (normally 7 * dit)
     * @param {string} morse - the (canonical) morse code string (matching [.-/ ]*)
     * @return {number[]}
     */

  }, {
    key: "getDuration",
    value:
    /**
     * Get the total duration of the message in ms
     8 @return {number}
     */
    function getDuration() {
      var times = this.getTimings();
      var t = 0;

      for (var i = 0; i < times.length; i++) {
        t += Math.abs(times[i]);
      }

      return t;
    }
  }], [{
    key: "getTimingsGeneral",
    value: function getTimingsGeneral(dit, dah, ditSpace, charSpace, wordSpace, morse, withDetails) {
      //console.log("Morse: " + morse);
      morse = morse.replace(/ \/ /g, '/'); // this means that a space is only used for inter-character

      morse = morse.replace(/([\.\-])(?=[\.\-])/g, "$1+"); // put a + in between all dits and dahs

      var times = [];

      for (var i = 0; i < morse.length; i++) {
        switch (morse[i]) {
          case '.':
            times.push(dit);
            break;

          case '-':
            times.push(dah);
            break;

          case '+':
            times.push(-ditSpace);
            break;

          case " ":
            times.push(-charSpace);
            break;

          case "/":
            times.push(-wordSpace);
            break;
        }
      } //console.log("Timings: " + times);


      return !withDetails ? times : times.map(function (x) {
        var type = "";

        switch (x) {
          case dit:
            type = "dit";
            break;

          case dah:
            type = "dah";
            break;
        }

        ;
        return {
          "time": x,
          "type": type
        };
      });
    }
  }]);

  return MorseCW;
}(_morse_pro_message__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/morse-pro/morse-pro-message.js":
/*!********************************************!*\
  !*** ./src/morse-pro/morse-pro-message.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MorseMessage)
/* harmony export */ });
/* harmony import */ var _morse_pro__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./morse-pro */ "./src/morse-pro/morse-pro.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/*!
This code is Â© Copyright Stephen C. Phillips, 2018.
Email: steve@scphillips.com
*/

/*
Licensed under the EUPL, Version 1.2 or â€“ as soon they will be approved by the European Commission - subsequent versions of the EUPL (the "Licence");
You may not use this work except in compliance with the Licence.
You may obtain a copy of the Licence at: https://joinup.ec.europa.eu/community/eupl/
Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the Licence for the specific language governing permissions and limitations under the Licence.
*/

/**
 * Class for conveniently translating to and from Morse code.
 * Deals with error handling.
 * Works out if the input is Morse code or not.
 *
 * @example
 * import MorseMessage from 'morse-pro-message';
 * var morseMessage = new MorseMessage();
 * var input;
 * var output;
 * try {
 *     output = morseMessage.translate("abc");
 * catch (ex) {
 *     // input will have errors surrounded by paired '#' signs
 *     // output will be best attempt at translation, with untranslatables replaced with '#'
 *     morseMessage.clearError();  // remove all the '#'
 * }
 * if (morseMessage.inputWasMorse) {
 *     // do something
 * }
 */

var MorseMessage = /*#__PURE__*/function () {
  /**
   * @param {boolean} [prosigns=true] - whether or not to include prosigns in the translations
   */
  function MorseMessage() {
    var useProsigns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

    _classCallCheck(this, MorseMessage);

    this.useProsigns = useProsigns;
    this.input = "";
    this.output = "";
    this.morse = "";
    this.message = "";
    this.inputWasMorse = undefined;
    this.hasError = undefined;
  }
  /**
   * @param {string} input - alphanumeric text or morse code to translate
   * @param {boolean} isMorse - whether the input is Morse code or not (if not set then the looksLikeMorse method will be used)
   */


  _createClass(MorseMessage, [{
    key: "translate",
    value: function translate(input, isMorse) {
      var translation;

      if (typeof isMorse === "undefined") {
        // make a guess: could be wrong if someone wants to translate "." into Morse for instance
        isMorse = _morse_pro__WEBPACK_IMPORTED_MODULE_0__.looksLikeMorse(input);
      }

      if (isMorse) {
        this.inputWasMorse = true;
        translation = _morse_pro__WEBPACK_IMPORTED_MODULE_0__.morse2text(input, this.useProsigns);
      } else {
        this.inputWasMorse = false;
        translation = _morse_pro__WEBPACK_IMPORTED_MODULE_0__.text2morse(input, this.useProsigns);
      }

      this.morse = translation.morse;
      this.message = translation.message;

      if (this.inputWasMorse) {
        this.input = this.morse;
        this.output = this.message;
      } else {
        this.input = this.message;
        this.output = this.morse;
      }

      this.hasError = translation.hasError;

      if (this.hasError) {
        throw new Error("Error in input");
      }

      return this.output;
    }
    /**
     * Clear all the errors from the morse and message. Useful if you want to play the sound even though it didn't translate.
     */

  }, {
    key: "clearError",
    value: function clearError() {
      if (this.inputWasMorse) {
        this.morse = this.morse.replace(/#/g, ""); // leave in the bad Morse
      } else {
        this.message = this.message.replace(/#[^#]*?#/g, "");
        this.morse = this.morse.replace(/#/g, "");
      }

      this.hasError = false;
    }
  }]);

  return MorseMessage;
}();



/***/ }),

/***/ "./src/morse-pro/morse-pro-util-riffwave.js":
/*!**************************************************!*\
  !*** ./src/morse-pro/morse-pro-util-riffwave.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getData": () => (/* binding */ getData),
/* harmony export */   "getMIMEType": () => (/* binding */ getMIMEType)
/* harmony export */ });
/*
* RIFFWAVE adapted from RIFFWAVE.js v0.03 - Audio encoder for HTML5 <audio> elements.
* Copyleft 2011 by Pedro Ladaria <pedro.ladaria at Gmail dot com>
* Public Domain
*/

/*
* Adaptation by Stephen C. Phillips, 2013-2017.
* Email: steve@scphillips.com
* Public Domain
*/

/**
 * Utility to create RIFF WAVE file data.
 *
 * @example
 * import MorseCWWave from 'morse-pro-cw-wave';
 * import * as RiffWave from 'morse-pro-util-riffwave';
 * var morseCWWave = new MorseCWWave();
 * morseCWWave.translate("abc");
 * var wav = RiffWave.getData(morseCWWave.getSample());  // returns byte array of WAV file
  */
var u32ToArray = function u32ToArray(i) {
  return [i & 0xFF, i >> 8 & 0xFF, i >> 16 & 0xFF, i >> 24 & 0xFF];
};

var u16ToArray = function u16ToArray(i) {
  return [i & 0xFF, i >> 8 & 0xFF];
};

var split16bitArray = function split16bitArray(data) {
  var r = [];
  var j = 0;
  var len = data.length;

  for (var i = 0; i < len; i++) {
    r[j++] = data[i] & 0xFF;
    r[j++] = data[i] >> 8 & 0xFF;
  }

  return r;
};

var fToU8 = function fToU8(data) {
  var r = [];

  for (var i = 0; i < data.length; i++) {
    r[i] = Math.max(Math.min(128 + Math.round(127 * data[i]), 255), 0);
  }

  return r;
};
/**
 * Convert PCM data to WAV file data.
 * @param {number[]} data - waveform data, expected to be in (and clamped to) range [-1,1]
 * @param {number} [sampleRate=8000] - the sample rate of the waveform in Hz
 * @param {number} [bitsPerSample=8] - number of bits to store each data point (8 or 16)
 * @return {number[]} - array of bytes representing the WAV file
 */


function getData(data) {
  var sampleRate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8000;
  var bitsPerSample = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;
  data = fToU8(data);
  var header = {
    // OFFS SIZE NOTES
    chunkId: [0x52, 0x49, 0x46, 0x46],
    // 0    4    "RIFF" = 0x52494646
    chunkSize: 0,
    // 4    4    36+SubChunk2Size = 4+(8+SubChunk1Size)+(8+SubChunk2Size)
    format: [0x57, 0x41, 0x56, 0x45],
    // 8    4    "WAVE" = 0x57415645
    subChunk1Id: [0x66, 0x6d, 0x74, 0x20],
    // 12   4    "fmt " = 0x666d7420
    subChunk1Size: 16,
    // 16   4    16 for PCM
    audioFormat: 1,
    // 20   2    PCM = 1
    numChannels: 1,
    // 22   2    Mono = 1, Stereo = 2...
    sampleRate: sampleRate,
    // 24   4    8000, 44100...
    byteRate: 0,
    // 28   4    SampleRate*NumChannels*BitsPerSample/8
    blockAlign: 0,
    // 32   2    NumChannels*BitsPerSample/8
    bitsPerSample: bitsPerSample,
    // 34   2    8 bits = 8, 16 bits = 16
    subChunk2Id: [0x64, 0x61, 0x74, 0x61],
    // 36   4    "data" = 0x64617461
    subChunk2Size: 0 // 40   4    data size = NumSamples*NumChannels*BitsPerSample/8

  };
  header.blockAlign = header.numChannels * header.bitsPerSample >> 3;
  header.byteRate = header.blockAlign * header.sampleRate;
  header.subChunk2Size = data.length * (header.bitsPerSample >> 3);
  header.chunkSize = 36 + header.subChunk2Size;
  return header.chunkId.concat(u32ToArray(header.chunkSize), header.format, header.subChunk1Id, u32ToArray(header.subChunk1Size), u16ToArray(header.audioFormat), u16ToArray(header.numChannels), u32ToArray(header.sampleRate), u32ToArray(header.byteRate), u16ToArray(header.blockAlign), u16ToArray(header.bitsPerSample), header.subChunk2Id, u32ToArray(header.subChunk2Size), header.bitsPerSample == 16 ? split16bitArray(data) : data);
}
function getMIMEType() {
  return "audio/wav";
}

/***/ }),

/***/ "./src/morse-pro/morse-pro-wpm.js":
/*!****************************************!*\
  !*** ./src/morse-pro/morse-pro-wpm.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "charSpace": () => (/* binding */ charSpace),
/* harmony export */   "dahLength": () => (/* binding */ dahLength),
/* harmony export */   "ditLength": () => (/* binding */ ditLength),
/* harmony export */   "ditSpace": () => (/* binding */ ditSpace),
/* harmony export */   "fditLength": () => (/* binding */ fditLength),
/* harmony export */   "fwpm": () => (/* binding */ fwpm),
/* harmony export */   "ratio": () => (/* binding */ ratio),
/* harmony export */   "wordSpace": () => (/* binding */ wordSpace),
/* harmony export */   "wpm": () => (/* binding */ wpm)
/* harmony export */ });
/*!
This code is Â© Copyright Stephen C. Phillips, 2018.
Email: steve@scphillips.com
*/

/*
Licensed under the EUPL, Version 1.2 or â€“ as soon they will be approved by the European Commission - subsequent versions of the EUPL (the "Licence");
You may not use this work except in compliance with the Licence.
You may obtain a copy of the Licence at: https://joinup.ec.europa.eu/community/eupl/
Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the Licence for the specific language governing permissions and limitations under the Licence.
*/

/**
 * Useful constants and functions for computing the speed of Morse code.
 */
var DITS_PER_WORD = 50;
/** dits in "PARIS " */

var SPACES_IN_PARIS = 19;
/** 5x 3-dit inter-character spaces + 1x 7-dit space */

var MS_IN_MINUTE = 60000;
/** number of milliseconds in 1 minute */

/** Get the dit length in ms
 * @param {number} wpm - speed in words per minute
 * @return {integer}
 */

function ditLength(wpm) {
  return Math.round(_ditLength(wpm));
}

function _ditLength(wpm) {
  return MS_IN_MINUTE / DITS_PER_WORD / wpm;
}
/**
 * Get the dah length in ms
 * @param {number} wpm - speed in words per minute
 * @return {integer}
 */


function dahLength(wpm) {
  return Math.round(3 * _ditLength(wpm));
}
/**
 * Get the dit space in ms
 * @param {number} wpm - speed in words per minute
 * @return {integer}
 */

function ditSpace(wpm) {
  return ditLength(wpm);
}
/**
 * Get the character-space in ms
 * @param {number} wpm - speed in words per minute
 * @param {number} [fwpm = wpm] - Farnsworth speed in words per minute
 * @return {integer}
 */

function charSpace(wpm) {
  var fwpm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : wpm;
  return Math.round(3 * _fditLength(wpm, fwpm));
}
/**
 * Get the word-space in ms
 * @param {number} wpm - speed in words per minute
 * @param {number} [fwpm = wpm] - Farnsworth speed in words per minute
 * @return {integer}
 */

function wordSpace(wpm) {
  var fwpm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : wpm;
  return Math.round(7 * _fditLength(wpm, fwpm));
}
/**
 * Get the WPM for a given dit length in ms
 * @return {number}
 */

function wpm(ditLen) {
  return MS_IN_MINUTE / DITS_PER_WORD / ditLen;
}
/**
 * Get the Farnsworth dit length in ms for a given WPM and Farnsworth WPM. Note, actual dit-spaces should not be slowed down
 * @return {integer}
 */

function fditLength(wpm, fwpm) {
  return Math.round(_fditLength(wpm, fwpm));
}

function _fditLength(wpm, fwpm) {
  return _ditLength(wpm) * ratio(wpm, fwpm);
}
/**
 * Get the dit length ratio for a given WPM and Farnsworth WPM
 * @param {number} wpm - speed in words per minute
 * @param {number} fwpm - Farnsworth speed in words per minute
 * @return {number}
 */


function ratio(wpm, fwpm) {
  // "PARIS " is 31 units for the characters and 19 units for the inter-character spaces and inter-word space
  // One unit takes 1 * 60 / (50 * wpm)
  // The 31 units should take 31 * 60 / (50 * wpm) seconds at wpm
  // "PARIS " should take 50 * 60 / (50 * fwpm) to transmit at fwpm, or 60 / fwpm  seconds at fwpm
  // Keeping the time for the characters constant,
  // The spaces need to take: (60 / fwpm) - [31 * 60 / (50 * wpm)] seconds in total
  // The spaces are 4 inter-character spaces of 3 units and 1 inter-word space of 7 units. Their ratio must be maintained.
  // A space unit is: [(60 / fwpm) - [31 * 60 / (50 * wpm)]] / 19 seconds
  // Comparing that to 60 / (50 * wpm) gives a ratio of (50.wpm - 31.fwpm) / 19.fwpm
  return (DITS_PER_WORD * wpm - (DITS_PER_WORD - SPACES_IN_PARIS) * fwpm) / (SPACES_IN_PARIS * fwpm);
}
/** Get the Farnsworth WPM for a given WPM and ratio */

function fwpm(wpm, r) {
  return DITS_PER_WORD * wpm / (SPACES_IN_PARIS * r + (DITS_PER_WORD - SPACES_IN_PARIS));
}

/***/ }),

/***/ "./src/morse-pro/morse-pro.js":
/*!************************************!*\
  !*** ./src/morse-pro/morse-pro.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "looksLikeMorse": () => (/* binding */ looksLikeMorse),
/* harmony export */   "morse2text": () => (/* binding */ morse2text),
/* harmony export */   "text2ditdah": () => (/* binding */ text2ditdah),
/* harmony export */   "text2morse": () => (/* binding */ text2morse)
/* harmony export */ });
/*!
This code is Â© Copyright Stephen C. Phillips, 2018.
Email: steve@scphillips.com
*/

/*
Licensed under the EUPL, Version 1.2 or â€“ as soon they will be approved by the European Commission - subsequent versions of the EUPL (the "Licence");
You may not use this work except in compliance with the Licence.
You may obtain a copy of the Licence at: https://joinup.ec.europa.eu/community/eupl/
Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the Licence for the specific language governing permissions and limitations under the Licence.
*/

/**
 * Basic methods to translate Morse code.
 */
if (typeof String.prototype.trim === "undefined") {
  String.prototype.trim = function () {
    return String(this).replace(/^\s+|\s+$/g, '');
  };
}

var text2morseH = {
  'A': ".-",
  'B': "-...",
  'C': "-.-.",
  'D': "-..",
  'E': ".",
  'F': "..-.",
  'G': "--.",
  'H': "....",
  'I': "..",
  'J': ".---",
  'K': "-.-",
  'L': ".-..",
  'M': "--",
  'N': "-.",
  'O': "---",
  'P': ".--.",
  'Q': "--.-",
  'R': ".-.",
  'S': "...",
  'T': "-",
  'U': "..-",
  'V': "...-",
  'W': ".--",
  'X': "-..-",
  'Y': "-.--",
  'Z': "--..",
  '1': ".----",
  '2': "..---",
  '3': "...--",
  '4': "....-",
  '5': ".....",
  '6': "-....",
  '7': "--...",
  '8': "---..",
  '9': "----.",
  '0': "-----",
  '.': ".-.-.-",
  ',': "--..--",
  ':': "---...",
  '?': "..--..",
  '\'': ".----.",
  '-': "-....-",
  '/': "-..-.",
  '(': "-.--.",
  ')': "-.--.-",
  '"': ".-..-.",
  '@': ".--.-.",
  '=': "-...-",
  '&': ".-...",
  '+': ".-.-.",
  '!': "-.-.--",
  ' ': "/" //Not morse but helps translation

};
var morse2textH = {};
var prosign2morseH = {
  '<AA>': '.-.-',
  '<AR>': '.-.-.',
  '<AS>': '.-...',
  '<BK>': '-...-.-',
  '<BT>': '-...-',
  // also <TV>
  '<CL>': '-.-..-..',
  '<CT>': '-.-.-',
  '<DO>': '-..---',
  '<KN>': '-.--.',
  '<SK>': '...-.-',
  // also <VA>
  '<VA>': '...-.-',
  '<SN>': '...-.',
  // also <VE>
  '<VE>': '...-.',
  '<SOS>': '...---...'
};
var morsepro2textH = {};
var text2morseproH = {};

for (var text in text2morseH) {
  text2morseproH[text] = text2morseH[text];
  morse2textH[text2morseH[text]] = text;
  morsepro2textH[text2morseH[text]] = text;
}

for (var sign in prosign2morseH) {
  text2morseproH[sign] = prosign2morseH[sign];
  morsepro2textH[prosign2morseH[sign]] = sign;
}

var tidyText = function tidyText(text) {
  text = text.toUpperCase();
  text = text.trim();
  text = text.replace(/\s+/g, ' ');
  return text;
};
/**
 * Translate text to morse in '..- .. / --' form.
 * If something in the text is untranslatable then it is surrounded by hash-signs ('#') and a hash is placed in the morse.
 * @param {string} text - alphanumeric message
 * @param {boolean} useProsigns - true if prosigns are to be used (default is true)
 * @return {{message: string, morse: string, hasError: boolean}}
 */


function text2morse(text) {
  var useProsigns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  text = tidyText(text);
  var ret = {
    morse: "",
    message: "",
    hasError: false
  };

  if (text === "") {
    return ret;
  }

  var tokens = [];
  var prosign;
  var token_length;

  while (text.length > 0) {
    token_length = 1;

    if (useProsigns) {
      prosign = text.match(/^<...?>/); // array of matches

      if (prosign) {
        token_length = prosign[0].length;
      }
    }

    tokens.push(text.slice(0, token_length));
    text = text.slice(token_length, text.length);
  }

  var dict;

  if (useProsigns) {
    dict = text2morseproH;
  } else {
    dict = text2morseH;
  }

  var i, c, t;

  for (i = 0; i < tokens.length; i++) {
    t = tokens[i];
    c = dict[t];

    if (c === undefined) {
      ret.message += "#" + t + "#";
      ret.morse += "# ";
      ret.hasError = true;
    } else {
      ret.message += t;
      ret.morse += c + " ";
    }
  }

  ret.morse = ret.morse.slice(0, ret.morse.length - 1);
  return ret;
}
/**
 * Translate text to morse in 'Di-di-dah dah' form.
 * @param {string} text - alphanumeric message
 * @param {boolean} useProsigns - true if prosigns are to be used (default is true)
 * @return {string}
 */

function text2ditdah(text, useProsigns) {
  // TODO: deal with errors in the translation
  var ditdah = text2morse(text, useProsigns).morse + ' '; // get the dots and dashes

  ditdah = ditdah.replace(/\./g, 'di~').replace(/\-/g, 'dah~'); // do the basic job

  ditdah = ditdah.replace(/~/g, '-'); // replace placeholder with dash

  ditdah = ditdah.replace(/\- /g, ' '); // remove trailing dashes

  ditdah = ditdah.replace(/di /g, 'dit '); // use 'dit' at end of letter

  ditdah = ditdah.replace(/ \/ /g, ', '); // do punctuation

  ditdah = ditdah.replace(/^d/, 'D'); // do capitalisation

  ditdah = ditdah.replace(/ $/, ''); // remove the space we added

  ditdah = ditdah.replace(/([th])$/, '$1.'); // add full-stop if there is anything there

  return ditdah;
}
/**
 * Canonicalise morse text.
 * Canonical form matches [.-/ ]*, has single spaces between characters, has words separated by ' / ', and has no spaces at the start or end.
 * A single '/' may be returned by this function.
 * @param {string} morse - Morse code matching [.-_/| ]*
 * @return {string} Morse code in canonical form matching [.-/ ]*
 */

var tidyMorse = function tidyMorse(morse) {
  morse = morse.replace(/\|/g, "/"); // unify the word separator

  morse = morse.replace(/\//g, " / "); // make sure word separators are spaced out

  morse = morse.replace(/\s+/g, " "); // squash multiple spaces into single spaces

  morse = morse.replace(/(\/ )+\//g, "/"); // squash multiple word separators

  morse = morse.replace(/_/g, "-"); // unify the dash character

  morse = morse.replace(/^\s+/, ""); // remove initial whitespace

  morse = morse.replace(/\s+$/, ""); // remove trailing whitespace

  return morse;
};
/**
 * Translate morse to text. Canonicalise the morse first.
 * If something in the morse is untranslatable then it is surrounded by hash-signs ('#') and a hash is placed in the text.
 * @param {string} morse - morse message using [.-_/| ] characters
 * @param {boolean} useProsigns - true if prosigns are to be used (default is true)
 * @return {{message: string, morse: string, hasError: boolean}}
 */


function morse2text(morse) {
  var useProsigns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  morse = tidyMorse(morse);
  var ret = {
    morse: "",
    message: "",
    hasError: false
  };

  if (morse === "") {
    return ret;
  }

  var tokens = morse.split(" ");
  var dict;

  if (useProsigns) {
    dict = morsepro2textH;
  } else {
    dict = morse2textH;
  }

  var c, t;

  for (var i = 0; i < tokens.length; i++) {
    t = tokens[i];
    c = dict[t];

    if (c === undefined) {
      ret.morse += "#" + t + "# ";
      ret.message += "#";
      ret.hasError = true;
    } else {
      ret.morse += t + " ";
      ret.message += c;
    }
  }

  ret.morse = ret.morse.slice(0, ret.morse.length - 1);
  return ret;
}
/**
 * Determine whether a string is most likely morse code.
 * @param {string} input - the text
 * @return {boolean} - true if the string only has Morse characters in after executing tidyMorse
 */

function looksLikeMorse(input) {
  input = tidyMorse(input);
  return input.match(/^[/.-][ /.-]*$/) !== null;
}

/***/ }),

/***/ "./src/morse/morseLessonFinder.js":
/*!****************************************!*\
  !*** ./src/morse/morseLessonFinder.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseLessonFileFinder": () => (/* binding */ MorseLessonFileFinder)
/* harmony export */ });
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*
This file is auto generated during build from morseLessonFinderTemplate.js
by the prebuildLessons.js script
*/
var MorseLessonFileFinder = /*#__PURE__*/_createClass(function MorseLessonFileFinder() {
  _classCallCheck(this, MorseLessonFileFinder);
});

_defineProperty(MorseLessonFileFinder, "getMorseLessonFile", function (fileName, afterFound) {
  switch (fileName) {
    // BEGINA
    case 'B1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_B1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/B1.json */ "./src/wordfiles/B1.json", 19)).then(function (_ref) {
        var x = _ref["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'B1B2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_B1B2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/B1B2.json */ "./src/wordfiles/B1B2.json", 19)).then(function (_ref2) {
        var x = _ref2["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'B2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_B2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/B2.json */ "./src/wordfiles/B2.json", 19)).then(function (_ref3) {
        var x = _ref3["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'HOF10.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_HOF10_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/HOF10.txt */ "./src/wordfiles/HOF10.txt", 17)).then(function (_ref4) {
        var x = _ref4["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'HOF11.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_HOF11_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/HOF11.txt */ "./src/wordfiles/HOF11.txt", 17)).then(function (_ref5) {
        var x = _ref5["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'HOF8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_HOF8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/HOF8.txt */ "./src/wordfiles/HOF8.txt", 17)).then(function (_ref6) {
        var x = _ref6["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'HOF9.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_HOF9_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/HOF9.txt */ "./src/wordfiles/HOF9.txt", 17)).then(function (_ref7) {
        var x = _ref7["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1HOF1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1HOF1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1HOF1.json */ "./src/wordfiles/IB1HOF1.json", 19)).then(function (_ref8) {
        var x = _ref8["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1HOF2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1HOF2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1HOF2.json */ "./src/wordfiles/IB1HOF2.json", 19)).then(function (_ref9) {
        var x = _ref9["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1HOF3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1HOF3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1HOF3.json */ "./src/wordfiles/IB1HOF3.json", 19)).then(function (_ref10) {
        var x = _ref10["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1HOF4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1HOF4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1HOF4.json */ "./src/wordfiles/IB1HOF4.json", 19)).then(function (_ref11) {
        var x = _ref11["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1HOF5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1HOF5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1HOF5.json */ "./src/wordfiles/IB1HOF5.json", 19)).then(function (_ref12) {
        var x = _ref12["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1HOF6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1HOF6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1HOF6.json */ "./src/wordfiles/IB1HOF6.json", 19)).then(function (_ref13) {
        var x = _ref13["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1HOF7.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1HOF7_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1HOF7.json */ "./src/wordfiles/IB1HOF7.json", 19)).then(function (_ref14) {
        var x = _ref14["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1LCD1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1LCD1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1LCD1.json */ "./src/wordfiles/IB1LCD1.json", 19)).then(function (_ref15) {
        var x = _ref15["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1LCD2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1LCD2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1LCD2.json */ "./src/wordfiles/IB1LCD2.json", 19)).then(function (_ref16) {
        var x = _ref16["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1LCD3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1LCD3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1LCD3.json */ "./src/wordfiles/IB1LCD3.json", 19)).then(function (_ref17) {
        var x = _ref17["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1LCD4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1LCD4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1LCD4.json */ "./src/wordfiles/IB1LCD4.json", 19)).then(function (_ref18) {
        var x = _ref18["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1LCD5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1LCD5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1LCD5.json */ "./src/wordfiles/IB1LCD5.json", 19)).then(function (_ref19) {
        var x = _ref19["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1LCD6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1LCD6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1LCD6.json */ "./src/wordfiles/IB1LCD6.json", 19)).then(function (_ref20) {
        var x = _ref20["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1LCD7.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1LCD7_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1LCD7.json */ "./src/wordfiles/IB1LCD7.json", 19)).then(function (_ref21) {
        var x = _ref21["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1PGS1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1PGS1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1PGS1.json */ "./src/wordfiles/IB1PGS1.json", 19)).then(function (_ref22) {
        var x = _ref22["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1PGS2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1PGS2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1PGS2.json */ "./src/wordfiles/IB1PGS2.json", 19)).then(function (_ref23) {
        var x = _ref23["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1PGS3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1PGS3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1PGS3.json */ "./src/wordfiles/IB1PGS3.json", 19)).then(function (_ref24) {
        var x = _ref24["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1PGS4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1PGS4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1PGS4.json */ "./src/wordfiles/IB1PGS4.json", 19)).then(function (_ref25) {
        var x = _ref25["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1PGS5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1PGS5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1PGS5.json */ "./src/wordfiles/IB1PGS5.json", 19)).then(function (_ref26) {
        var x = _ref26["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1PGS6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1PGS6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1PGS6.json */ "./src/wordfiles/IB1PGS6.json", 19)).then(function (_ref27) {
        var x = _ref27["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1PGS7.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1PGS7_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1PGS7.json */ "./src/wordfiles/IB1PGS7.json", 19)).then(function (_ref28) {
        var x = _ref28["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1REA1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1REA1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1REA1.json */ "./src/wordfiles/IB1REA1.json", 19)).then(function (_ref29) {
        var x = _ref29["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1REA2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1REA2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1REA2.json */ "./src/wordfiles/IB1REA2.json", 19)).then(function (_ref30) {
        var x = _ref30["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1REA3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1REA3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1REA3.json */ "./src/wordfiles/IB1REA3.json", 19)).then(function (_ref31) {
        var x = _ref31["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1REA4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1REA4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1REA4.json */ "./src/wordfiles/IB1REA4.json", 19)).then(function (_ref32) {
        var x = _ref32["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1REA5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1REA5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1REA5.json */ "./src/wordfiles/IB1REA5.json", 19)).then(function (_ref33) {
        var x = _ref33["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1REA6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1REA6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1REA6.json */ "./src/wordfiles/IB1REA6.json", 19)).then(function (_ref34) {
        var x = _ref34["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1REA7.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1REA7_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1REA7.json */ "./src/wordfiles/IB1REA7.json", 19)).then(function (_ref35) {
        var x = _ref35["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1TIN1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1TIN1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1TIN1.json */ "./src/wordfiles/IB1TIN1.json", 19)).then(function (_ref36) {
        var x = _ref36["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1TIN2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1TIN2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1TIN2.json */ "./src/wordfiles/IB1TIN2.json", 19)).then(function (_ref37) {
        var x = _ref37["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1TIN3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1TIN3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1TIN3.json */ "./src/wordfiles/IB1TIN3.json", 19)).then(function (_ref38) {
        var x = _ref38["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1TIN4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1TIN4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1TIN4.json */ "./src/wordfiles/IB1TIN4.json", 19)).then(function (_ref39) {
        var x = _ref39["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1TIN5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1TIN5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1TIN5.json */ "./src/wordfiles/IB1TIN5.json", 19)).then(function (_ref40) {
        var x = _ref40["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1TIN6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1TIN6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1TIN6.json */ "./src/wordfiles/IB1TIN6.json", 19)).then(function (_ref41) {
        var x = _ref41["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1TIN7.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1TIN7_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1TIN7.json */ "./src/wordfiles/IB1TIN7.json", 19)).then(function (_ref42) {
        var x = _ref42["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1UWB1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1UWB1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1UWB1.json */ "./src/wordfiles/IB1UWB1.json", 19)).then(function (_ref43) {
        var x = _ref43["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1UWB2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1UWB2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1UWB2.json */ "./src/wordfiles/IB1UWB2.json", 19)).then(function (_ref44) {
        var x = _ref44["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1UWB3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1UWB3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1UWB3.json */ "./src/wordfiles/IB1UWB3.json", 19)).then(function (_ref45) {
        var x = _ref45["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1UWB4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1UWB4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1UWB4.json */ "./src/wordfiles/IB1UWB4.json", 19)).then(function (_ref46) {
        var x = _ref46["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1UWB5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1UWB5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1UWB5.json */ "./src/wordfiles/IB1UWB5.json", 19)).then(function (_ref47) {
        var x = _ref47["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1UWB6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1UWB6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1UWB6.json */ "./src/wordfiles/IB1UWB6.json", 19)).then(function (_ref48) {
        var x = _ref48["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB1UWB7.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB1UWB7_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB1UWB7.json */ "./src/wordfiles/IB1UWB7.json", 19)).then(function (_ref49) {
        var x = _ref49["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2161.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2161_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2161.json */ "./src/wordfiles/IB2161.json", 19)).then(function (_ref50) {
        var x = _ref50["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB21610.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB21610_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB21610.json */ "./src/wordfiles/IB21610.json", 19)).then(function (_ref51) {
        var x = _ref51["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2162.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2162_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2162.json */ "./src/wordfiles/IB2162.json", 19)).then(function (_ref52) {
        var x = _ref52["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2163.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2163_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2163.json */ "./src/wordfiles/IB2163.json", 19)).then(function (_ref53) {
        var x = _ref53["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2164.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2164_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2164.json */ "./src/wordfiles/IB2164.json", 19)).then(function (_ref54) {
        var x = _ref54["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2165.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2165_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2165.json */ "./src/wordfiles/IB2165.json", 19)).then(function (_ref55) {
        var x = _ref55["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2166.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2166_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2166.txt */ "./src/wordfiles/IB2166.txt", 17)).then(function (_ref56) {
        var x = _ref56["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2167.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2167_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2167.txt */ "./src/wordfiles/IB2167.txt", 17)).then(function (_ref57) {
        var x = _ref57["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2168.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2168_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2168.txt */ "./src/wordfiles/IB2168.txt", 17)).then(function (_ref58) {
        var x = _ref58["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2169.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2169_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2169.txt */ "./src/wordfiles/IB2169.txt", 17)).then(function (_ref59) {
        var x = _ref59["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB228BK1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB228BK1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB228BK1.json */ "./src/wordfiles/IB228BK1.json", 19)).then(function (_ref60) {
        var x = _ref60["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB228BK10.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB228BK10_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB228BK10.json */ "./src/wordfiles/IB228BK10.json", 19)).then(function (_ref61) {
        var x = _ref61["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB228BK2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB228BK2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB228BK2.json */ "./src/wordfiles/IB228BK2.json", 19)).then(function (_ref62) {
        var x = _ref62["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB228BK3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB228BK3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB228BK3.json */ "./src/wordfiles/IB228BK3.json", 19)).then(function (_ref63) {
        var x = _ref63["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB228BK4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB228BK4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB228BK4.json */ "./src/wordfiles/IB228BK4.json", 19)).then(function (_ref64) {
        var x = _ref64["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB228BK5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB228BK5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB228BK5.json */ "./src/wordfiles/IB228BK5.json", 19)).then(function (_ref65) {
        var x = _ref65["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB228BK6.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB228BK6_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB228BK6.txt */ "./src/wordfiles/IB228BK6.txt", 17)).then(function (_ref66) {
        var x = _ref66["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB228BK7.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB228BK7_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB228BK7.txt */ "./src/wordfiles/IB228BK7.txt", 17)).then(function (_ref67) {
        var x = _ref67["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB228BK8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB228BK8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB228BK8.txt */ "./src/wordfiles/IB228BK8.txt", 17)).then(function (_ref68) {
        var x = _ref68["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB228BK9.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB228BK9_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB228BK9.txt */ "./src/wordfiles/IB228BK9.txt", 17)).then(function (_ref69) {
        var x = _ref69["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2401.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2401_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2401.json */ "./src/wordfiles/IB2401.json", 19)).then(function (_ref70) {
        var x = _ref70["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2402.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2402_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2402.json */ "./src/wordfiles/IB2402.json", 19)).then(function (_ref71) {
        var x = _ref71["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2403.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2403_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2403.json */ "./src/wordfiles/IB2403.json", 19)).then(function (_ref72) {
        var x = _ref72["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2404.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2404_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2404.txt */ "./src/wordfiles/IB2404.txt", 17)).then(function (_ref73) {
        var x = _ref73["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2405.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2405_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2405.txt */ "./src/wordfiles/IB2405.txt", 17)).then(function (_ref74) {
        var x = _ref74["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2406.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2406_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2406.txt */ "./src/wordfiles/IB2406.txt", 17)).then(function (_ref75) {
        var x = _ref75["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2407.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2407_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2407.txt */ "./src/wordfiles/IB2407.txt", 17)).then(function (_ref76) {
        var x = _ref76["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2408.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2408_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2408.json */ "./src/wordfiles/IB2408.json", 19)).then(function (_ref77) {
        var x = _ref77["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2591.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2591_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2591.json */ "./src/wordfiles/IB2591.json", 19)).then(function (_ref78) {
        var x = _ref78["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB25910.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB25910_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB25910.json */ "./src/wordfiles/IB25910.json", 19)).then(function (_ref79) {
        var x = _ref79["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2592.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2592_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2592.json */ "./src/wordfiles/IB2592.json", 19)).then(function (_ref80) {
        var x = _ref80["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2593.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2593_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2593.json */ "./src/wordfiles/IB2593.json", 19)).then(function (_ref81) {
        var x = _ref81["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2594.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2594_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2594.json */ "./src/wordfiles/IB2594.json", 19)).then(function (_ref82) {
        var x = _ref82["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2595.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2595_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2595.json */ "./src/wordfiles/IB2595.json", 19)).then(function (_ref83) {
        var x = _ref83["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2596.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2596_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2596.txt */ "./src/wordfiles/IB2596.txt", 17)).then(function (_ref84) {
        var x = _ref84["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2597.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2597_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2597.txt */ "./src/wordfiles/IB2597.txt", 17)).then(function (_ref85) {
        var x = _ref85["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2598.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2598_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2598.txt */ "./src/wordfiles/IB2598.txt", 17)).then(function (_ref86) {
        var x = _ref86["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2599.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2599_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2599.txt */ "./src/wordfiles/IB2599.txt", 17)).then(function (_ref87) {
        var x = _ref87["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2731.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2731_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2731.json */ "./src/wordfiles/IB2731.json", 19)).then(function (_ref88) {
        var x = _ref88["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB27310.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB27310_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB27310.json */ "./src/wordfiles/IB27310.json", 19)).then(function (_ref89) {
        var x = _ref89["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2732.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2732_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2732.json */ "./src/wordfiles/IB2732.json", 19)).then(function (_ref90) {
        var x = _ref90["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2733.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2733_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2733.json */ "./src/wordfiles/IB2733.json", 19)).then(function (_ref91) {
        var x = _ref91["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2734.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2734_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2734.json */ "./src/wordfiles/IB2734.json", 19)).then(function (_ref92) {
        var x = _ref92["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2735.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2735_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2735.json */ "./src/wordfiles/IB2735.json", 19)).then(function (_ref93) {
        var x = _ref93["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2736.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2736_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2736.txt */ "./src/wordfiles/IB2736.txt", 17)).then(function (_ref94) {
        var x = _ref94["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2737.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2737_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2737.txt */ "./src/wordfiles/IB2737.txt", 17)).then(function (_ref95) {
        var x = _ref95["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2738.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2738_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2738.txt */ "./src/wordfiles/IB2738.txt", 17)).then(function (_ref96) {
        var x = _ref96["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2739.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2739_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2739.txt */ "./src/wordfiles/IB2739.txt", 17)).then(function (_ref97) {
        var x = _ref97["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ARSKBT1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ARSKBT1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ARSKBT1.json */ "./src/wordfiles/IB2ARSKBT1.json", 19)).then(function (_ref98) {
        var x = _ref98["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ARSKBT2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ARSKBT2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ARSKBT2.json */ "./src/wordfiles/IB2ARSKBT2.json", 19)).then(function (_ref99) {
        var x = _ref99["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ARSKBT3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ARSKBT3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ARSKBT3.json */ "./src/wordfiles/IB2ARSKBT3.json", 19)).then(function (_ref100) {
        var x = _ref100["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ARSKBT4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ARSKBT4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ARSKBT4.json */ "./src/wordfiles/IB2ARSKBT4.json", 19)).then(function (_ref101) {
        var x = _ref101["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ARSKBT5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ARSKBT5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ARSKBT5.json */ "./src/wordfiles/IB2ARSKBT5.json", 19)).then(function (_ref102) {
        var x = _ref102["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ARSKBT6.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ARSKBT6_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ARSKBT6.txt */ "./src/wordfiles/IB2ARSKBT6.txt", 17)).then(function (_ref103) {
        var x = _ref103["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ARSKBT7.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ARSKBT7_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ARSKBT7.txt */ "./src/wordfiles/IB2ARSKBT7.txt", 17)).then(function (_ref104) {
        var x = _ref104["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ARSKBT8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ARSKBT8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ARSKBT8.txt */ "./src/wordfiles/IB2ARSKBT8.txt", 17)).then(function (_ref105) {
        var x = _ref105["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ARSKBT9.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ARSKBT9_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ARSKBT9.json */ "./src/wordfiles/IB2ARSKBT9.json", 19)).then(function (_ref106) {
        var x = _ref106["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2C1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2C1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2C1.json */ "./src/wordfiles/IB2C1.json", 19)).then(function (_ref107) {
        var x = _ref107["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2C2.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2C2_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2C2.txt */ "./src/wordfiles/IB2C2.txt", 17)).then(function (_ref108) {
        var x = _ref108["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2C3.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2C3_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2C3.txt */ "./src/wordfiles/IB2C3.txt", 17)).then(function (_ref109) {
        var x = _ref109["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2C4.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2C4_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2C4.txt */ "./src/wordfiles/IB2C4.txt", 17)).then(function (_ref110) {
        var x = _ref110["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2C5.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2C5_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2C5.txt */ "./src/wordfiles/IB2C5.txt", 17)).then(function (_ref111) {
        var x = _ref111["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2C6.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2C6_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2C6.txt */ "./src/wordfiles/IB2C6.txt", 17)).then(function (_ref112) {
        var x = _ref112["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2C7.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2C7_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2C7.txt */ "./src/wordfiles/IB2C7.txt", 17)).then(function (_ref113) {
        var x = _ref113["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2C8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2C8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2C8.txt */ "./src/wordfiles/IB2C8.txt", 17)).then(function (_ref114) {
        var x = _ref114["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2KMY1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2KMY1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2KMY1.json */ "./src/wordfiles/IB2KMY1.json", 19)).then(function (_ref115) {
        var x = _ref115["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2KMY2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2KMY2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2KMY2.json */ "./src/wordfiles/IB2KMY2.json", 19)).then(function (_ref116) {
        var x = _ref116["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2KMY3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2KMY3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2KMY3.json */ "./src/wordfiles/IB2KMY3.json", 19)).then(function (_ref117) {
        var x = _ref117["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2KMY4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2KMY4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2KMY4.json */ "./src/wordfiles/IB2KMY4.json", 19)).then(function (_ref118) {
        var x = _ref118["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2KMY5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2KMY5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2KMY5.json */ "./src/wordfiles/IB2KMY5.json", 19)).then(function (_ref119) {
        var x = _ref119["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2KMY6.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2KMY6_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2KMY6.txt */ "./src/wordfiles/IB2KMY6.txt", 17)).then(function (_ref120) {
        var x = _ref120["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2KMY7.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2KMY7_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2KMY7.txt */ "./src/wordfiles/IB2KMY7.txt", 17)).then(function (_ref121) {
        var x = _ref121["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2KMY8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2KMY8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2KMY8.txt */ "./src/wordfiles/IB2KMY8.txt", 17)).then(function (_ref122) {
        var x = _ref122["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2KMY9.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2KMY9_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2KMY9.json */ "./src/wordfiles/IB2KMY9.json", 19)).then(function (_ref123) {
        var x = _ref123["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2QXV1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2QXV1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2QXV1.json */ "./src/wordfiles/IB2QXV1.json", 19)).then(function (_ref124) {
        var x = _ref124["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2QXV2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2QXV2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2QXV2.json */ "./src/wordfiles/IB2QXV2.json", 19)).then(function (_ref125) {
        var x = _ref125["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2QXV3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2QXV3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2QXV3.json */ "./src/wordfiles/IB2QXV3.json", 19)).then(function (_ref126) {
        var x = _ref126["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2QXV4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2QXV4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2QXV4.json */ "./src/wordfiles/IB2QXV4.json", 19)).then(function (_ref127) {
        var x = _ref127["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2QXV5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2QXV5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2QXV5.json */ "./src/wordfiles/IB2QXV5.json", 19)).then(function (_ref128) {
        var x = _ref128["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2QXV6.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2QXV6_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2QXV6.txt */ "./src/wordfiles/IB2QXV6.txt", 17)).then(function (_ref129) {
        var x = _ref129["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2QXV7.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2QXV7_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2QXV7.txt */ "./src/wordfiles/IB2QXV7.txt", 17)).then(function (_ref130) {
        var x = _ref130["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2QXV8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2QXV8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2QXV8.txt */ "./src/wordfiles/IB2QXV8.txt", 17)).then(function (_ref131) {
        var x = _ref131["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2QXV9.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2QXV9_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2QXV9.json */ "./src/wordfiles/IB2QXV9.json", 19)).then(function (_ref132) {
        var x = _ref132["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ZJ1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ZJ1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ZJ1.json */ "./src/wordfiles/IB2ZJ1.json", 19)).then(function (_ref133) {
        var x = _ref133["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ZJ2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ZJ2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ZJ2.json */ "./src/wordfiles/IB2ZJ2.json", 19)).then(function (_ref134) {
        var x = _ref134["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ZJ3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ZJ3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ZJ3.json */ "./src/wordfiles/IB2ZJ3.json", 19)).then(function (_ref135) {
        var x = _ref135["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ZJ4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ZJ4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ZJ4.json */ "./src/wordfiles/IB2ZJ4.json", 19)).then(function (_ref136) {
        var x = _ref136["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ZJ5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ZJ5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ZJ5.json */ "./src/wordfiles/IB2ZJ5.json", 19)).then(function (_ref137) {
        var x = _ref137["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ZJ6.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ZJ6_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ZJ6.txt */ "./src/wordfiles/IB2ZJ6.txt", 17)).then(function (_ref138) {
        var x = _ref138["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ZJ7.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ZJ7_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ZJ7.txt */ "./src/wordfiles/IB2ZJ7.txt", 17)).then(function (_ref139) {
        var x = _ref139["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ZJ8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ZJ8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ZJ8.txt */ "./src/wordfiles/IB2ZJ8.txt", 17)).then(function (_ref140) {
        var x = _ref140["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'IB2ZJ9.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_IB2ZJ9_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/IB2ZJ9.json */ "./src/wordfiles/IB2ZJ9.json", 19)).then(function (_ref141) {
        var x = _ref141["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR1.json */ "./src/wordfiles/ICR1.json", 19)).then(function (_ref142) {
        var x = _ref142["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR1.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR1_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR1.txt */ "./src/wordfiles/ICR1.txt", 17)).then(function (_ref143) {
        var x = _ref143["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR10.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR10_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR10.txt */ "./src/wordfiles/ICR10.txt", 17)).then(function (_ref144) {
        var x = _ref144["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR11.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR11_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR11.txt */ "./src/wordfiles/ICR11.txt", 17)).then(function (_ref145) {
        var x = _ref145["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR12.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR12_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR12.txt */ "./src/wordfiles/ICR12.txt", 17)).then(function (_ref146) {
        var x = _ref146["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR2.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR2_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR2.txt */ "./src/wordfiles/ICR2.txt", 17)).then(function (_ref147) {
        var x = _ref147["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR3.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR3_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR3.txt */ "./src/wordfiles/ICR3.txt", 17)).then(function (_ref148) {
        var x = _ref148["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR4.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR4_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR4.txt */ "./src/wordfiles/ICR4.txt", 17)).then(function (_ref149) {
        var x = _ref149["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR5.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR5_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR5.txt */ "./src/wordfiles/ICR5.txt", 17)).then(function (_ref150) {
        var x = _ref150["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR6.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR6_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR6.txt */ "./src/wordfiles/ICR6.txt", 17)).then(function (_ref151) {
        var x = _ref151["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR7.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR7_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR7.txt */ "./src/wordfiles/ICR7.txt", 17)).then(function (_ref152) {
        var x = _ref152["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR8.txt */ "./src/wordfiles/ICR8.txt", 17)).then(function (_ref153) {
        var x = _ref153["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'ICR9.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_ICR9_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/ICR9.txt */ "./src/wordfiles/ICR9.txt", 17)).then(function (_ref154) {
        var x = _ref154["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'LCD10.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_LCD10_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/LCD10.txt */ "./src/wordfiles/LCD10.txt", 17)).then(function (_ref155) {
        var x = _ref155["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'LCD11.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_LCD11_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/LCD11.txt */ "./src/wordfiles/LCD11.txt", 17)).then(function (_ref156) {
        var x = _ref156["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'LCD8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_LCD8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/LCD8.txt */ "./src/wordfiles/LCD8.txt", 17)).then(function (_ref157) {
        var x = _ref157["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'LCD9.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_LCD9_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/LCD9.txt */ "./src/wordfiles/LCD9.txt", 17)).then(function (_ref158) {
        var x = _ref158["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'PGS10.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_PGS10_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/PGS10.txt */ "./src/wordfiles/PGS10.txt", 17)).then(function (_ref159) {
        var x = _ref159["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'PGS11.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_PGS11_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/PGS11.txt */ "./src/wordfiles/PGS11.txt", 17)).then(function (_ref160) {
        var x = _ref160["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'PGS8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_PGS8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/PGS8.txt */ "./src/wordfiles/PGS8.txt", 17)).then(function (_ref161) {
        var x = _ref161["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'PGS9.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_PGS9_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/PGS9.txt */ "./src/wordfiles/PGS9.txt", 17)).then(function (_ref162) {
        var x = _ref162["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'REA10.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_REA10_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/REA10.txt */ "./src/wordfiles/REA10.txt", 17)).then(function (_ref163) {
        var x = _ref163["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'REA11.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_REA11_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/REA11.txt */ "./src/wordfiles/REA11.txt", 17)).then(function (_ref164) {
        var x = _ref164["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'REA8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_REA8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/REA8.txt */ "./src/wordfiles/REA8.txt", 17)).then(function (_ref165) {
        var x = _ref165["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'REA9.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_REA9_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/REA9.txt */ "./src/wordfiles/REA9.txt", 17)).then(function (_ref166) {
        var x = _ref166["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1HOF1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1HOF1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1HOF1.json */ "./src/wordfiles/SB1HOF1.json", 19)).then(function (_ref167) {
        var x = _ref167["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1HOF2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1HOF2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1HOF2.json */ "./src/wordfiles/SB1HOF2.json", 19)).then(function (_ref168) {
        var x = _ref168["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1HOF3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1HOF3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1HOF3.json */ "./src/wordfiles/SB1HOF3.json", 19)).then(function (_ref169) {
        var x = _ref169["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1HOF4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1HOF4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1HOF4.json */ "./src/wordfiles/SB1HOF4.json", 19)).then(function (_ref170) {
        var x = _ref170["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1HOF5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1HOF5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1HOF5.json */ "./src/wordfiles/SB1HOF5.json", 19)).then(function (_ref171) {
        var x = _ref171["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1HOF6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1HOF6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1HOF6.json */ "./src/wordfiles/SB1HOF6.json", 19)).then(function (_ref172) {
        var x = _ref172["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1LCD1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1LCD1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1LCD1.json */ "./src/wordfiles/SB1LCD1.json", 19)).then(function (_ref173) {
        var x = _ref173["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1LCD2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1LCD2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1LCD2.json */ "./src/wordfiles/SB1LCD2.json", 19)).then(function (_ref174) {
        var x = _ref174["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1LCD3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1LCD3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1LCD3.json */ "./src/wordfiles/SB1LCD3.json", 19)).then(function (_ref175) {
        var x = _ref175["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1LCD4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1LCD4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1LCD4.json */ "./src/wordfiles/SB1LCD4.json", 19)).then(function (_ref176) {
        var x = _ref176["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1LCD5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1LCD5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1LCD5.json */ "./src/wordfiles/SB1LCD5.json", 19)).then(function (_ref177) {
        var x = _ref177["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1LCD6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1LCD6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1LCD6.json */ "./src/wordfiles/SB1LCD6.json", 19)).then(function (_ref178) {
        var x = _ref178["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1PGS1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1PGS1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1PGS1.json */ "./src/wordfiles/SB1PGS1.json", 19)).then(function (_ref179) {
        var x = _ref179["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1PGS2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1PGS2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1PGS2.json */ "./src/wordfiles/SB1PGS2.json", 19)).then(function (_ref180) {
        var x = _ref180["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1PGS3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1PGS3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1PGS3.json */ "./src/wordfiles/SB1PGS3.json", 19)).then(function (_ref181) {
        var x = _ref181["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1PGS4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1PGS4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1PGS4.json */ "./src/wordfiles/SB1PGS4.json", 19)).then(function (_ref182) {
        var x = _ref182["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1PGS5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1PGS5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1PGS5.json */ "./src/wordfiles/SB1PGS5.json", 19)).then(function (_ref183) {
        var x = _ref183["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1PGS6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1PGS6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1PGS6.json */ "./src/wordfiles/SB1PGS6.json", 19)).then(function (_ref184) {
        var x = _ref184["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1REA1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1REA1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1REA1.json */ "./src/wordfiles/SB1REA1.json", 19)).then(function (_ref185) {
        var x = _ref185["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1REA2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1REA2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1REA2.json */ "./src/wordfiles/SB1REA2.json", 19)).then(function (_ref186) {
        var x = _ref186["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1REA3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1REA3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1REA3.json */ "./src/wordfiles/SB1REA3.json", 19)).then(function (_ref187) {
        var x = _ref187["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1REA4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1REA4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1REA4.json */ "./src/wordfiles/SB1REA4.json", 19)).then(function (_ref188) {
        var x = _ref188["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1REA5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1REA5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1REA5.json */ "./src/wordfiles/SB1REA5.json", 19)).then(function (_ref189) {
        var x = _ref189["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1REA6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1REA6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1REA6.json */ "./src/wordfiles/SB1REA6.json", 19)).then(function (_ref190) {
        var x = _ref190["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1TIN1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1TIN1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1TIN1.json */ "./src/wordfiles/SB1TIN1.json", 19)).then(function (_ref191) {
        var x = _ref191["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1TIN2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1TIN2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1TIN2.json */ "./src/wordfiles/SB1TIN2.json", 19)).then(function (_ref192) {
        var x = _ref192["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1TIN3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1TIN3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1TIN3.json */ "./src/wordfiles/SB1TIN3.json", 19)).then(function (_ref193) {
        var x = _ref193["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1TIN4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1TIN4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1TIN4.json */ "./src/wordfiles/SB1TIN4.json", 19)).then(function (_ref194) {
        var x = _ref194["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1TIN5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1TIN5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1TIN5.json */ "./src/wordfiles/SB1TIN5.json", 19)).then(function (_ref195) {
        var x = _ref195["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1TIN6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1TIN6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1TIN6.json */ "./src/wordfiles/SB1TIN6.json", 19)).then(function (_ref196) {
        var x = _ref196["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1UWB1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1UWB1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1UWB1.json */ "./src/wordfiles/SB1UWB1.json", 19)).then(function (_ref197) {
        var x = _ref197["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1UWB2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1UWB2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1UWB2.json */ "./src/wordfiles/SB1UWB2.json", 19)).then(function (_ref198) {
        var x = _ref198["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1UWB3.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1UWB3_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1UWB3.json */ "./src/wordfiles/SB1UWB3.json", 19)).then(function (_ref199) {
        var x = _ref199["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1UWB4.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1UWB4_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1UWB4.json */ "./src/wordfiles/SB1UWB4.json", 19)).then(function (_ref200) {
        var x = _ref200["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1UWB5.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1UWB5_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1UWB5.json */ "./src/wordfiles/SB1UWB5.json", 19)).then(function (_ref201) {
        var x = _ref201["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB1UWB6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB1UWB6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB1UWB6.json */ "./src/wordfiles/SB1UWB6.json", 19)).then(function (_ref202) {
        var x = _ref202["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB21610.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB21610_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB21610.json */ "./src/wordfiles/SB21610.json", 19)).then(function (_ref203) {
        var x = _ref203["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB21611.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB21611_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB21611.json */ "./src/wordfiles/SB21611.json", 19)).then(function (_ref204) {
        var x = _ref204["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB21612.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB21612_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB21612.json */ "./src/wordfiles/SB21612.json", 19)).then(function (_ref205) {
        var x = _ref205["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB21613.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB21613_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB21613.json */ "./src/wordfiles/SB21613.json", 19)).then(function (_ref206) {
        var x = _ref206["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB21614.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB21614_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB21614.json */ "./src/wordfiles/SB21614.json", 19)).then(function (_ref207) {
        var x = _ref207["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2162.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2162_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2162.json */ "./src/wordfiles/SB2162.json", 19)).then(function (_ref208) {
        var x = _ref208["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2163.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2163_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2163.txt */ "./src/wordfiles/SB2163.txt", 17)).then(function (_ref209) {
        var x = _ref209["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2164.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2164_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2164.txt */ "./src/wordfiles/SB2164.txt", 17)).then(function (_ref210) {
        var x = _ref210["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2165.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2165_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2165.txt */ "./src/wordfiles/SB2165.txt", 17)).then(function (_ref211) {
        var x = _ref211["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2166.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2166_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2166.txt */ "./src/wordfiles/SB2166.txt", 17)).then(function (_ref212) {
        var x = _ref212["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2167.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2167_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2167.json */ "./src/wordfiles/SB2167.json", 19)).then(function (_ref213) {
        var x = _ref213["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2168.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2168_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2168.json */ "./src/wordfiles/SB2168.json", 19)).then(function (_ref214) {
        var x = _ref214["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2169.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2169_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2169.json */ "./src/wordfiles/SB2169.json", 19)).then(function (_ref215) {
        var x = _ref215["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK10.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK10_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK10.json */ "./src/wordfiles/SB228BK10.json", 19)).then(function (_ref216) {
        var x = _ref216["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK11.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK11_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK11.json */ "./src/wordfiles/SB228BK11.json", 19)).then(function (_ref217) {
        var x = _ref217["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK12.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK12_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK12.json */ "./src/wordfiles/SB228BK12.json", 19)).then(function (_ref218) {
        var x = _ref218["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK13.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK13_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK13.json */ "./src/wordfiles/SB228BK13.json", 19)).then(function (_ref219) {
        var x = _ref219["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK14.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK14_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK14.json */ "./src/wordfiles/SB228BK14.json", 19)).then(function (_ref220) {
        var x = _ref220["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK2.json */ "./src/wordfiles/SB228BK2.json", 19)).then(function (_ref221) {
        var x = _ref221["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK3.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK3_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK3.txt */ "./src/wordfiles/SB228BK3.txt", 17)).then(function (_ref222) {
        var x = _ref222["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK4.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK4_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK4.txt */ "./src/wordfiles/SB228BK4.txt", 17)).then(function (_ref223) {
        var x = _ref223["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK5.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK5_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK5.txt */ "./src/wordfiles/SB228BK5.txt", 17)).then(function (_ref224) {
        var x = _ref224["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK6.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK6_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK6.txt */ "./src/wordfiles/SB228BK6.txt", 17)).then(function (_ref225) {
        var x = _ref225["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK7.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK7_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK7.json */ "./src/wordfiles/SB228BK7.json", 19)).then(function (_ref226) {
        var x = _ref226["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK8.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK8_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK8.json */ "./src/wordfiles/SB228BK8.json", 19)).then(function (_ref227) {
        var x = _ref227["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB228BK9.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB228BK9_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB228BK9.json */ "./src/wordfiles/SB228BK9.json", 19)).then(function (_ref228) {
        var x = _ref228["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB24010.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB24010_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB24010.json */ "./src/wordfiles/SB24010.json", 19)).then(function (_ref229) {
        var x = _ref229["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB24011.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB24011_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB24011.json */ "./src/wordfiles/SB24011.json", 19)).then(function (_ref230) {
        var x = _ref230["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB24012.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB24012_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB24012.json */ "./src/wordfiles/SB24012.json", 19)).then(function (_ref231) {
        var x = _ref231["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB24013.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB24013_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB24013.json */ "./src/wordfiles/SB24013.json", 19)).then(function (_ref232) {
        var x = _ref232["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB24014.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB24014_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB24014.json */ "./src/wordfiles/SB24014.json", 19)).then(function (_ref233) {
        var x = _ref233["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2402.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2402_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2402.json */ "./src/wordfiles/SB2402.json", 19)).then(function (_ref234) {
        var x = _ref234["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2403.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2403_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2403.txt */ "./src/wordfiles/SB2403.txt", 17)).then(function (_ref235) {
        var x = _ref235["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2404.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2404_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2404.txt */ "./src/wordfiles/SB2404.txt", 17)).then(function (_ref236) {
        var x = _ref236["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2405.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2405_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2405.txt */ "./src/wordfiles/SB2405.txt", 17)).then(function (_ref237) {
        var x = _ref237["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2406.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2406_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2406.txt */ "./src/wordfiles/SB2406.txt", 17)).then(function (_ref238) {
        var x = _ref238["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2407.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2407_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2407.json */ "./src/wordfiles/SB2407.json", 19)).then(function (_ref239) {
        var x = _ref239["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2408.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2408_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2408.json */ "./src/wordfiles/SB2408.json", 19)).then(function (_ref240) {
        var x = _ref240["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2409.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2409_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2409.json */ "./src/wordfiles/SB2409.json", 19)).then(function (_ref241) {
        var x = _ref241["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB25910.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB25910_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB25910.json */ "./src/wordfiles/SB25910.json", 19)).then(function (_ref242) {
        var x = _ref242["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB25911.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB25911_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB25911.json */ "./src/wordfiles/SB25911.json", 19)).then(function (_ref243) {
        var x = _ref243["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB25912.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB25912_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB25912.json */ "./src/wordfiles/SB25912.json", 19)).then(function (_ref244) {
        var x = _ref244["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB25913.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB25913_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB25913.json */ "./src/wordfiles/SB25913.json", 19)).then(function (_ref245) {
        var x = _ref245["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB25914.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB25914_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB25914.json */ "./src/wordfiles/SB25914.json", 19)).then(function (_ref246) {
        var x = _ref246["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2592.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2592_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2592.json */ "./src/wordfiles/SB2592.json", 19)).then(function (_ref247) {
        var x = _ref247["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2593.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2593_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2593.txt */ "./src/wordfiles/SB2593.txt", 17)).then(function (_ref248) {
        var x = _ref248["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2594.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2594_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2594.txt */ "./src/wordfiles/SB2594.txt", 17)).then(function (_ref249) {
        var x = _ref249["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2595.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2595_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2595.txt */ "./src/wordfiles/SB2595.txt", 17)).then(function (_ref250) {
        var x = _ref250["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2596.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2596_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2596.txt */ "./src/wordfiles/SB2596.txt", 17)).then(function (_ref251) {
        var x = _ref251["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2597.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2597_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2597.json */ "./src/wordfiles/SB2597.json", 19)).then(function (_ref252) {
        var x = _ref252["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2598.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2598_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2598.json */ "./src/wordfiles/SB2598.json", 19)).then(function (_ref253) {
        var x = _ref253["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2599.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2599_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2599.json */ "./src/wordfiles/SB2599.json", 19)).then(function (_ref254) {
        var x = _ref254["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB27310.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB27310_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB27310.json */ "./src/wordfiles/SB27310.json", 19)).then(function (_ref255) {
        var x = _ref255["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB27311.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB27311_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB27311.json */ "./src/wordfiles/SB27311.json", 19)).then(function (_ref256) {
        var x = _ref256["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB27312.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB27312_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB27312.json */ "./src/wordfiles/SB27312.json", 19)).then(function (_ref257) {
        var x = _ref257["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB27313.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB27313_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB27313.json */ "./src/wordfiles/SB27313.json", 19)).then(function (_ref258) {
        var x = _ref258["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB27314.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB27314_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB27314.json */ "./src/wordfiles/SB27314.json", 19)).then(function (_ref259) {
        var x = _ref259["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2732.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2732_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2732.json */ "./src/wordfiles/SB2732.json", 19)).then(function (_ref260) {
        var x = _ref260["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2733.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2733_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2733.txt */ "./src/wordfiles/SB2733.txt", 17)).then(function (_ref261) {
        var x = _ref261["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2734.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2734_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2734.txt */ "./src/wordfiles/SB2734.txt", 17)).then(function (_ref262) {
        var x = _ref262["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2735.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2735_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2735.txt */ "./src/wordfiles/SB2735.txt", 17)).then(function (_ref263) {
        var x = _ref263["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2736.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2736_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2736.txt */ "./src/wordfiles/SB2736.txt", 17)).then(function (_ref264) {
        var x = _ref264["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2737.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2737_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2737.json */ "./src/wordfiles/SB2737.json", 19)).then(function (_ref265) {
        var x = _ref265["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2738.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2738_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2738.json */ "./src/wordfiles/SB2738.json", 19)).then(function (_ref266) {
        var x = _ref266["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2739.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2739_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2739.json */ "./src/wordfiles/SB2739.json", 19)).then(function (_ref267) {
        var x = _ref267["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ARSKBT10.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ARSKBT10_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ARSKBT10.json */ "./src/wordfiles/SB2ARSKBT10.json", 19)).then(function (_ref268) {
        var x = _ref268["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ARSKBT11.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ARSKBT11_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ARSKBT11.json */ "./src/wordfiles/SB2ARSKBT11.json", 19)).then(function (_ref269) {
        var x = _ref269["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ARSKBT12.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ARSKBT12_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ARSKBT12.json */ "./src/wordfiles/SB2ARSKBT12.json", 19)).then(function (_ref270) {
        var x = _ref270["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ARSKBT13.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ARSKBT13_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ARSKBT13.json */ "./src/wordfiles/SB2ARSKBT13.json", 19)).then(function (_ref271) {
        var x = _ref271["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ARSKBT2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ARSKBT2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ARSKBT2.json */ "./src/wordfiles/SB2ARSKBT2.json", 19)).then(function (_ref272) {
        var x = _ref272["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ARSKBT3.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ARSKBT3_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ARSKBT3.txt */ "./src/wordfiles/SB2ARSKBT3.txt", 17)).then(function (_ref273) {
        var x = _ref273["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ARSKBT4.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ARSKBT4_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ARSKBT4.txt */ "./src/wordfiles/SB2ARSKBT4.txt", 17)).then(function (_ref274) {
        var x = _ref274["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ARSKBT5.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ARSKBT5_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ARSKBT5.txt */ "./src/wordfiles/SB2ARSKBT5.txt", 17)).then(function (_ref275) {
        var x = _ref275["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ARSKBT6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ARSKBT6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ARSKBT6.json */ "./src/wordfiles/SB2ARSKBT6.json", 19)).then(function (_ref276) {
        var x = _ref276["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ARSKBT7.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ARSKBT7_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ARSKBT7.json */ "./src/wordfiles/SB2ARSKBT7.json", 19)).then(function (_ref277) {
        var x = _ref277["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ARSKBT8.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ARSKBT8_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ARSKBT8.json */ "./src/wordfiles/SB2ARSKBT8.json", 19)).then(function (_ref278) {
        var x = _ref278["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ARSKBT9.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ARSKBT9_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ARSKBT9.json */ "./src/wordfiles/SB2ARSKBT9.json", 19)).then(function (_ref279) {
        var x = _ref279["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2C1.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2C1_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2C1.json */ "./src/wordfiles/SB2C1.json", 19)).then(function (_ref280) {
        var x = _ref280["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2C2.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2C2_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2C2.txt */ "./src/wordfiles/SB2C2.txt", 17)).then(function (_ref281) {
        var x = _ref281["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2C3.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2C3_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2C3.txt */ "./src/wordfiles/SB2C3.txt", 17)).then(function (_ref282) {
        var x = _ref282["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2C4.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2C4_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2C4.txt */ "./src/wordfiles/SB2C4.txt", 17)).then(function (_ref283) {
        var x = _ref283["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2C5.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2C5_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2C5.txt */ "./src/wordfiles/SB2C5.txt", 17)).then(function (_ref284) {
        var x = _ref284["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2C6.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2C6_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2C6.txt */ "./src/wordfiles/SB2C6.txt", 17)).then(function (_ref285) {
        var x = _ref285["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2C7.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2C7_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2C7.txt */ "./src/wordfiles/SB2C7.txt", 17)).then(function (_ref286) {
        var x = _ref286["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2C8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2C8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2C8.txt */ "./src/wordfiles/SB2C8.txt", 17)).then(function (_ref287) {
        var x = _ref287["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2KMY10.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2KMY10_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2KMY10.json */ "./src/wordfiles/SB2KMY10.json", 19)).then(function (_ref288) {
        var x = _ref288["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2KMY11.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2KMY11_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2KMY11.json */ "./src/wordfiles/SB2KMY11.json", 19)).then(function (_ref289) {
        var x = _ref289["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2KMY12.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2KMY12_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2KMY12.json */ "./src/wordfiles/SB2KMY12.json", 19)).then(function (_ref290) {
        var x = _ref290["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2KMY13.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2KMY13_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2KMY13.json */ "./src/wordfiles/SB2KMY13.json", 19)).then(function (_ref291) {
        var x = _ref291["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2KMY2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2KMY2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2KMY2.json */ "./src/wordfiles/SB2KMY2.json", 19)).then(function (_ref292) {
        var x = _ref292["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2KMY3.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2KMY3_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2KMY3.txt */ "./src/wordfiles/SB2KMY3.txt", 17)).then(function (_ref293) {
        var x = _ref293["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2KMY4.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2KMY4_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2KMY4.txt */ "./src/wordfiles/SB2KMY4.txt", 17)).then(function (_ref294) {
        var x = _ref294["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2KMY5.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2KMY5_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2KMY5.txt */ "./src/wordfiles/SB2KMY5.txt", 17)).then(function (_ref295) {
        var x = _ref295["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2KMY6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2KMY6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2KMY6.json */ "./src/wordfiles/SB2KMY6.json", 19)).then(function (_ref296) {
        var x = _ref296["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2KMY7.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2KMY7_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2KMY7.json */ "./src/wordfiles/SB2KMY7.json", 19)).then(function (_ref297) {
        var x = _ref297["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2KMY8.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2KMY8_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2KMY8.json */ "./src/wordfiles/SB2KMY8.json", 19)).then(function (_ref298) {
        var x = _ref298["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2KMY9.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2KMY9_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2KMY9.json */ "./src/wordfiles/SB2KMY9.json", 19)).then(function (_ref299) {
        var x = _ref299["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2QXV10.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2QXV10_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2QXV10.json */ "./src/wordfiles/SB2QXV10.json", 19)).then(function (_ref300) {
        var x = _ref300["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2QXV11.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2QXV11_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2QXV11.json */ "./src/wordfiles/SB2QXV11.json", 19)).then(function (_ref301) {
        var x = _ref301["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2QXV12.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2QXV12_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2QXV12.json */ "./src/wordfiles/SB2QXV12.json", 19)).then(function (_ref302) {
        var x = _ref302["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2QXV13.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2QXV13_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2QXV13.json */ "./src/wordfiles/SB2QXV13.json", 19)).then(function (_ref303) {
        var x = _ref303["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2QXV2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2QXV2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2QXV2.json */ "./src/wordfiles/SB2QXV2.json", 19)).then(function (_ref304) {
        var x = _ref304["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2QXV3.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2QXV3_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2QXV3.txt */ "./src/wordfiles/SB2QXV3.txt", 17)).then(function (_ref305) {
        var x = _ref305["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2QXV4.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2QXV4_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2QXV4.txt */ "./src/wordfiles/SB2QXV4.txt", 17)).then(function (_ref306) {
        var x = _ref306["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2QXV5.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2QXV5_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2QXV5.txt */ "./src/wordfiles/SB2QXV5.txt", 17)).then(function (_ref307) {
        var x = _ref307["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2QXV6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2QXV6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2QXV6.json */ "./src/wordfiles/SB2QXV6.json", 19)).then(function (_ref308) {
        var x = _ref308["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2QXV7.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2QXV7_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2QXV7.json */ "./src/wordfiles/SB2QXV7.json", 19)).then(function (_ref309) {
        var x = _ref309["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2QXV8.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2QXV8_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2QXV8.json */ "./src/wordfiles/SB2QXV8.json", 19)).then(function (_ref310) {
        var x = _ref310["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2QXV9.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2QXV9_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2QXV9.json */ "./src/wordfiles/SB2QXV9.json", 19)).then(function (_ref311) {
        var x = _ref311["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ZJ10.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ZJ10_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ZJ10.json */ "./src/wordfiles/SB2ZJ10.json", 19)).then(function (_ref312) {
        var x = _ref312["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ZJ11.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ZJ11_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ZJ11.json */ "./src/wordfiles/SB2ZJ11.json", 19)).then(function (_ref313) {
        var x = _ref313["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ZJ12.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ZJ12_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ZJ12.json */ "./src/wordfiles/SB2ZJ12.json", 19)).then(function (_ref314) {
        var x = _ref314["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ZJ13.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ZJ13_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ZJ13.json */ "./src/wordfiles/SB2ZJ13.json", 19)).then(function (_ref315) {
        var x = _ref315["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ZJ2.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ZJ2_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ZJ2.json */ "./src/wordfiles/SB2ZJ2.json", 19)).then(function (_ref316) {
        var x = _ref316["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ZJ3.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ZJ3_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ZJ3.txt */ "./src/wordfiles/SB2ZJ3.txt", 17)).then(function (_ref317) {
        var x = _ref317["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ZJ4.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ZJ4_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ZJ4.txt */ "./src/wordfiles/SB2ZJ4.txt", 17)).then(function (_ref318) {
        var x = _ref318["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ZJ5.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ZJ5_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ZJ5.txt */ "./src/wordfiles/SB2ZJ5.txt", 17)).then(function (_ref319) {
        var x = _ref319["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ZJ6.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ZJ6_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ZJ6.json */ "./src/wordfiles/SB2ZJ6.json", 19)).then(function (_ref320) {
        var x = _ref320["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ZJ7.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ZJ7_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ZJ7.json */ "./src/wordfiles/SB2ZJ7.json", 19)).then(function (_ref321) {
        var x = _ref321["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ZJ8.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ZJ8_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ZJ8.json */ "./src/wordfiles/SB2ZJ8.json", 19)).then(function (_ref322) {
        var x = _ref322["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'SB2ZJ9.json':
      __webpack_require__.e(/*! import() */ "src_wordfiles_SB2ZJ9_json").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/SB2ZJ9.json */ "./src/wordfiles/SB2ZJ9.json", 19)).then(function (_ref323) {
        var x = _ref323["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'TIN10.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_TIN10_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/TIN10.txt */ "./src/wordfiles/TIN10.txt", 17)).then(function (_ref324) {
        var x = _ref324["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'TIN11.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_TIN11_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/TIN11.txt */ "./src/wordfiles/TIN11.txt", 17)).then(function (_ref325) {
        var x = _ref325["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'TIN8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_TIN8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/TIN8.txt */ "./src/wordfiles/TIN8.txt", 17)).then(function (_ref326) {
        var x = _ref326["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'TIN9.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_TIN9_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/TIN9.txt */ "./src/wordfiles/TIN9.txt", 17)).then(function (_ref327) {
        var x = _ref327["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'UWB10.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_UWB10_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/UWB10.txt */ "./src/wordfiles/UWB10.txt", 17)).then(function (_ref328) {
        var x = _ref328["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'UWB11.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_UWB11_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/UWB11.txt */ "./src/wordfiles/UWB11.txt", 17)).then(function (_ref329) {
        var x = _ref329["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'UWB8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_UWB8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/UWB8.txt */ "./src/wordfiles/UWB8.txt", 17)).then(function (_ref330) {
        var x = _ref330["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'UWB9.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_UWB9_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/UWB9.txt */ "./src/wordfiles/UWB9.txt", 17)).then(function (_ref331) {
        var x = _ref331["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'per1.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_per1_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/per1.txt */ "./src/wordfiles/per1.txt", 17)).then(function (_ref332) {
        var x = _ref332["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'per10.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_per10_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/per10.txt */ "./src/wordfiles/per10.txt", 17)).then(function (_ref333) {
        var x = _ref333["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'per11.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_per11_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/per11.txt */ "./src/wordfiles/per11.txt", 17)).then(function (_ref334) {
        var x = _ref334["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'per2.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_per2_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/per2.txt */ "./src/wordfiles/per2.txt", 17)).then(function (_ref335) {
        var x = _ref335["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'per3.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_per3_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/per3.txt */ "./src/wordfiles/per3.txt", 17)).then(function (_ref336) {
        var x = _ref336["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'per4.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_per4_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/per4.txt */ "./src/wordfiles/per4.txt", 17)).then(function (_ref337) {
        var x = _ref337["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'per5.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_per5_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/per5.txt */ "./src/wordfiles/per5.txt", 17)).then(function (_ref338) {
        var x = _ref338["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'per6.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_per6_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/per6.txt */ "./src/wordfiles/per6.txt", 17)).then(function (_ref339) {
        var x = _ref339["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'per7.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_per7_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/per7.txt */ "./src/wordfiles/per7.txt", 17)).then(function (_ref340) {
        var x = _ref340["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'per8.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_per8_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/per8.txt */ "./src/wordfiles/per8.txt", 17)).then(function (_ref341) {
        var x = _ref341["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;

    case 'per9.txt':
      __webpack_require__.e(/*! import() */ "src_wordfiles_per9_txt").then(__webpack_require__.t.bind(__webpack_require__, /*! ../wordfiles/per9.txt */ "./src/wordfiles/per9.txt", 17)).then(function (_ref342) {
        var x = _ref342["default"];
        return afterFound({
          found: true,
          data: x
        });
      });
      break;
    // BEGINB

    default:
      afterFound({
        found: false,
        data: null
      });
  }
});

/***/ }),

/***/ "./node_modules/bootstrap/dist/js/bootstrap.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/bootstrap/dist/js/bootstrap.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Alert": () => (/* binding */ Alert),
/* harmony export */   "Button": () => (/* binding */ Button),
/* harmony export */   "Carousel": () => (/* binding */ Carousel),
/* harmony export */   "Collapse": () => (/* binding */ Collapse),
/* harmony export */   "Dropdown": () => (/* binding */ Dropdown),
/* harmony export */   "Modal": () => (/* binding */ Modal),
/* harmony export */   "Offcanvas": () => (/* binding */ Offcanvas),
/* harmony export */   "Popover": () => (/* binding */ Popover),
/* harmony export */   "ScrollSpy": () => (/* binding */ ScrollSpy),
/* harmony export */   "Tab": () => (/* binding */ Tab),
/* harmony export */   "Toast": () => (/* binding */ Toast),
/* harmony export */   "Tooltip": () => (/* binding */ Tooltip)
/* harmony export */ });
/* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @popperjs/core */ "./node_modules/@popperjs/core/lib/index.js");
/* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @popperjs/core */ "./node_modules/@popperjs/core/lib/popper.js");
/*!
  * Bootstrap v5.1.3 (https://getbootstrap.com/)
  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */


/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): util/index.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
const MAX_UID = 1000000;
const MILLISECONDS_MULTIPLIER = 1000;
const TRANSITION_END = 'transitionend'; // Shoutout AngusCroll (https://goo.gl/pxwQGp)

const toType = obj => {
  if (obj === null || obj === undefined) {
    return `${obj}`;
  }

  return {}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();
};
/**
 * --------------------------------------------------------------------------
 * Public Util Api
 * --------------------------------------------------------------------------
 */


const getUID = prefix => {
  do {
    prefix += Math.floor(Math.random() * MAX_UID);
  } while (document.getElementById(prefix));

  return prefix;
};

const getSelector = element => {
  let selector = element.getAttribute('data-bs-target');

  if (!selector || selector === '#') {
    let hrefAttr = element.getAttribute('href'); // The only valid content that could double as a selector are IDs or classes,
    // so everything starting with `#` or `.`. If a "real" URL is used as the selector,
    // `document.querySelector` will rightfully complain it is invalid.
    // See https://github.com/twbs/bootstrap/issues/32273

    if (!hrefAttr || !hrefAttr.includes('#') && !hrefAttr.startsWith('.')) {
      return null;
    } // Just in case some CMS puts out a full URL with the anchor appended


    if (hrefAttr.includes('#') && !hrefAttr.startsWith('#')) {
      hrefAttr = `#${hrefAttr.split('#')[1]}`;
    }

    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null;
  }

  return selector;
};

const getSelectorFromElement = element => {
  const selector = getSelector(element);

  if (selector) {
    return document.querySelector(selector) ? selector : null;
  }

  return null;
};

const getElementFromSelector = element => {
  const selector = getSelector(element);
  return selector ? document.querySelector(selector) : null;
};

const getTransitionDurationFromElement = element => {
  if (!element) {
    return 0;
  } // Get transition-duration of the element


  let {
    transitionDuration,
    transitionDelay
  } = window.getComputedStyle(element);
  const floatTransitionDuration = Number.parseFloat(transitionDuration);
  const floatTransitionDelay = Number.parseFloat(transitionDelay); // Return 0 if element or transition duration is not found

  if (!floatTransitionDuration && !floatTransitionDelay) {
    return 0;
  } // If multiple durations are defined, take the first


  transitionDuration = transitionDuration.split(',')[0];
  transitionDelay = transitionDelay.split(',')[0];
  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;
};

const triggerTransitionEnd = element => {
  element.dispatchEvent(new Event(TRANSITION_END));
};

const isElement = obj => {
  if (!obj || typeof obj !== 'object') {
    return false;
  }

  if (typeof obj.jquery !== 'undefined') {
    obj = obj[0];
  }

  return typeof obj.nodeType !== 'undefined';
};

const getElement = obj => {
  if (isElement(obj)) {
    // it's a jQuery object or a node element
    return obj.jquery ? obj[0] : obj;
  }

  if (typeof obj === 'string' && obj.length > 0) {
    return document.querySelector(obj);
  }

  return null;
};

const typeCheckConfig = (componentName, config, configTypes) => {
  Object.keys(configTypes).forEach(property => {
    const expectedTypes = configTypes[property];
    const value = config[property];
    const valueType = value && isElement(value) ? 'element' : toType(value);

    if (!new RegExp(expectedTypes).test(valueType)) {
      throw new TypeError(`${componentName.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);
    }
  });
};

const isVisible = element => {
  if (!isElement(element) || element.getClientRects().length === 0) {
    return false;
  }

  return getComputedStyle(element).getPropertyValue('visibility') === 'visible';
};

const isDisabled = element => {
  if (!element || element.nodeType !== Node.ELEMENT_NODE) {
    return true;
  }

  if (element.classList.contains('disabled')) {
    return true;
  }

  if (typeof element.disabled !== 'undefined') {
    return element.disabled;
  }

  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false';
};

const findShadowRoot = element => {
  if (!document.documentElement.attachShadow) {
    return null;
  } // Can find the shadow root otherwise it'll return the document


  if (typeof element.getRootNode === 'function') {
    const root = element.getRootNode();
    return root instanceof ShadowRoot ? root : null;
  }

  if (element instanceof ShadowRoot) {
    return element;
  } // when we don't find a shadow root


  if (!element.parentNode) {
    return null;
  }

  return findShadowRoot(element.parentNode);
};

const noop = () => {};
/**
 * Trick to restart an element's animation
 *
 * @param {HTMLElement} element
 * @return void
 *
 * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation
 */


const reflow = element => {
  // eslint-disable-next-line no-unused-expressions
  element.offsetHeight;
};

const getjQuery = () => {
  const {
    jQuery
  } = window;

  if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {
    return jQuery;
  }

  return null;
};

const DOMContentLoadedCallbacks = [];

const onDOMContentLoaded = callback => {
  if (document.readyState === 'loading') {
    // add listener on the first call when the document is in loading state
    if (!DOMContentLoadedCallbacks.length) {
      document.addEventListener('DOMContentLoaded', () => {
        DOMContentLoadedCallbacks.forEach(callback => callback());
      });
    }

    DOMContentLoadedCallbacks.push(callback);
  } else {
    callback();
  }
};

const isRTL = () => document.documentElement.dir === 'rtl';

const defineJQueryPlugin = plugin => {
  onDOMContentLoaded(() => {
    const $ = getjQuery();
    /* istanbul ignore if */

    if ($) {
      const name = plugin.NAME;
      const JQUERY_NO_CONFLICT = $.fn[name];
      $.fn[name] = plugin.jQueryInterface;
      $.fn[name].Constructor = plugin;

      $.fn[name].noConflict = () => {
        $.fn[name] = JQUERY_NO_CONFLICT;
        return plugin.jQueryInterface;
      };
    }
  });
};

const execute = callback => {
  if (typeof callback === 'function') {
    callback();
  }
};

const executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {
  if (!waitForTransition) {
    execute(callback);
    return;
  }

  const durationPadding = 5;
  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;
  let called = false;

  const handler = ({
    target
  }) => {
    if (target !== transitionElement) {
      return;
    }

    called = true;
    transitionElement.removeEventListener(TRANSITION_END, handler);
    execute(callback);
  };

  transitionElement.addEventListener(TRANSITION_END, handler);
  setTimeout(() => {
    if (!called) {
      triggerTransitionEnd(transitionElement);
    }
  }, emulatedDuration);
};
/**
 * Return the previous/next element of a list.
 *
 * @param {array} list    The list of elements
 * @param activeElement   The active element
 * @param shouldGetNext   Choose to get next or previous element
 * @param isCycleAllowed
 * @return {Element|elem} The proper element
 */


const getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {
  let index = list.indexOf(activeElement); // if the element does not exist in the list return an element depending on the direction and if cycle is allowed

  if (index === -1) {
    return list[!shouldGetNext && isCycleAllowed ? list.length - 1 : 0];
  }

  const listLength = list.length;
  index += shouldGetNext ? 1 : -1;

  if (isCycleAllowed) {
    index = (index + listLength) % listLength;
  }

  return list[Math.max(0, Math.min(index, listLength - 1))];
};

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): dom/event-handler.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const namespaceRegex = /[^.]*(?=\..*)\.|.*/;
const stripNameRegex = /\..*/;
const stripUidRegex = /::\d+$/;
const eventRegistry = {}; // Events storage

let uidEvent = 1;
const customEvents = {
  mouseenter: 'mouseover',
  mouseleave: 'mouseout'
};
const customEventsRegex = /^(mouseenter|mouseleave)/i;
const nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);
/**
 * ------------------------------------------------------------------------
 * Private methods
 * ------------------------------------------------------------------------
 */

function getUidEvent(element, uid) {
  return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;
}

function getEvent(element) {
  const uid = getUidEvent(element);
  element.uidEvent = uid;
  eventRegistry[uid] = eventRegistry[uid] || {};
  return eventRegistry[uid];
}

function bootstrapHandler(element, fn) {
  return function handler(event) {
    event.delegateTarget = element;

    if (handler.oneOff) {
      EventHandler.off(element, event.type, fn);
    }

    return fn.apply(element, [event]);
  };
}

function bootstrapDelegationHandler(element, selector, fn) {
  return function handler(event) {
    const domElements = element.querySelectorAll(selector);

    for (let {
      target
    } = event; target && target !== this; target = target.parentNode) {
      for (let i = domElements.length; i--;) {
        if (domElements[i] === target) {
          event.delegateTarget = target;

          if (handler.oneOff) {
            EventHandler.off(element, event.type, selector, fn);
          }

          return fn.apply(target, [event]);
        }
      }
    } // To please ESLint


    return null;
  };
}

function findHandler(events, handler, delegationSelector = null) {
  const uidEventList = Object.keys(events);

  for (let i = 0, len = uidEventList.length; i < len; i++) {
    const event = events[uidEventList[i]];

    if (event.originalHandler === handler && event.delegationSelector === delegationSelector) {
      return event;
    }
  }

  return null;
}

function normalizeParams(originalTypeEvent, handler, delegationFn) {
  const delegation = typeof handler === 'string';
  const originalHandler = delegation ? delegationFn : handler;
  let typeEvent = getTypeEvent(originalTypeEvent);
  const isNative = nativeEvents.has(typeEvent);

  if (!isNative) {
    typeEvent = originalTypeEvent;
  }

  return [delegation, originalHandler, typeEvent];
}

function addHandler(element, originalTypeEvent, handler, delegationFn, oneOff) {
  if (typeof originalTypeEvent !== 'string' || !element) {
    return;
  }

  if (!handler) {
    handler = delegationFn;
    delegationFn = null;
  } // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position
  // this prevents the handler from being dispatched the same way as mouseover or mouseout does


  if (customEventsRegex.test(originalTypeEvent)) {
    const wrapFn = fn => {
      return function (event) {
        if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {
          return fn.call(this, event);
        }
      };
    };

    if (delegationFn) {
      delegationFn = wrapFn(delegationFn);
    } else {
      handler = wrapFn(handler);
    }
  }

  const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);
  const events = getEvent(element);
  const handlers = events[typeEvent] || (events[typeEvent] = {});
  const previousFn = findHandler(handlers, originalHandler, delegation ? handler : null);

  if (previousFn) {
    previousFn.oneOff = previousFn.oneOff && oneOff;
    return;
  }

  const uid = getUidEvent(originalHandler, originalTypeEvent.replace(namespaceRegex, ''));
  const fn = delegation ? bootstrapDelegationHandler(element, handler, delegationFn) : bootstrapHandler(element, handler);
  fn.delegationSelector = delegation ? handler : null;
  fn.originalHandler = originalHandler;
  fn.oneOff = oneOff;
  fn.uidEvent = uid;
  handlers[uid] = fn;
  element.addEventListener(typeEvent, fn, delegation);
}

function removeHandler(element, events, typeEvent, handler, delegationSelector) {
  const fn = findHandler(events[typeEvent], handler, delegationSelector);

  if (!fn) {
    return;
  }

  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));
  delete events[typeEvent][fn.uidEvent];
}

function removeNamespacedHandlers(element, events, typeEvent, namespace) {
  const storeElementEvent = events[typeEvent] || {};
  Object.keys(storeElementEvent).forEach(handlerKey => {
    if (handlerKey.includes(namespace)) {
      const event = storeElementEvent[handlerKey];
      removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);
    }
  });
}

function getTypeEvent(event) {
  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')
  event = event.replace(stripNameRegex, '');
  return customEvents[event] || event;
}

const EventHandler = {
  on(element, event, handler, delegationFn) {
    addHandler(element, event, handler, delegationFn, false);
  },

  one(element, event, handler, delegationFn) {
    addHandler(element, event, handler, delegationFn, true);
  },

  off(element, originalTypeEvent, handler, delegationFn) {
    if (typeof originalTypeEvent !== 'string' || !element) {
      return;
    }

    const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);
    const inNamespace = typeEvent !== originalTypeEvent;
    const events = getEvent(element);
    const isNamespace = originalTypeEvent.startsWith('.');

    if (typeof originalHandler !== 'undefined') {
      // Simplest case: handler is passed, remove that listener ONLY.
      if (!events || !events[typeEvent]) {
        return;
      }

      removeHandler(element, events, typeEvent, originalHandler, delegation ? handler : null);
      return;
    }

    if (isNamespace) {
      Object.keys(events).forEach(elementEvent => {
        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));
      });
    }

    const storeElementEvent = events[typeEvent] || {};
    Object.keys(storeElementEvent).forEach(keyHandlers => {
      const handlerKey = keyHandlers.replace(stripUidRegex, '');

      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {
        const event = storeElementEvent[keyHandlers];
        removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);
      }
    });
  },

  trigger(element, event, args) {
    if (typeof event !== 'string' || !element) {
      return null;
    }

    const $ = getjQuery();
    const typeEvent = getTypeEvent(event);
    const inNamespace = event !== typeEvent;
    const isNative = nativeEvents.has(typeEvent);
    let jQueryEvent;
    let bubbles = true;
    let nativeDispatch = true;
    let defaultPrevented = false;
    let evt = null;

    if (inNamespace && $) {
      jQueryEvent = $.Event(event, args);
      $(element).trigger(jQueryEvent);
      bubbles = !jQueryEvent.isPropagationStopped();
      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();
      defaultPrevented = jQueryEvent.isDefaultPrevented();
    }

    if (isNative) {
      evt = document.createEvent('HTMLEvents');
      evt.initEvent(typeEvent, bubbles, true);
    } else {
      evt = new CustomEvent(event, {
        bubbles,
        cancelable: true
      });
    } // merge custom information in our event


    if (typeof args !== 'undefined') {
      Object.keys(args).forEach(key => {
        Object.defineProperty(evt, key, {
          get() {
            return args[key];
          }

        });
      });
    }

    if (defaultPrevented) {
      evt.preventDefault();
    }

    if (nativeDispatch) {
      element.dispatchEvent(evt);
    }

    if (evt.defaultPrevented && typeof jQueryEvent !== 'undefined') {
      jQueryEvent.preventDefault();
    }

    return evt;
  }

};

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): dom/data.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */

/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */
const elementMap = new Map();
const Data = {
  set(element, key, instance) {
    if (!elementMap.has(element)) {
      elementMap.set(element, new Map());
    }

    const instanceMap = elementMap.get(element); // make it clear we only want one instance per element
    // can be removed later when multiple key/instances are fine to be used

    if (!instanceMap.has(key) && instanceMap.size !== 0) {
      // eslint-disable-next-line no-console
      console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);
      return;
    }

    instanceMap.set(key, instance);
  },

  get(element, key) {
    if (elementMap.has(element)) {
      return elementMap.get(element).get(key) || null;
    }

    return null;
  },

  remove(element, key) {
    if (!elementMap.has(element)) {
      return;
    }

    const instanceMap = elementMap.get(element);
    instanceMap.delete(key); // free up element references if there are no instances left for an element

    if (instanceMap.size === 0) {
      elementMap.delete(element);
    }
  }

};

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): base-component.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const VERSION = '5.1.3';

class BaseComponent {
  constructor(element) {
    element = getElement(element);

    if (!element) {
      return;
    }

    this._element = element;
    Data.set(this._element, this.constructor.DATA_KEY, this);
  }

  dispose() {
    Data.remove(this._element, this.constructor.DATA_KEY);
    EventHandler.off(this._element, this.constructor.EVENT_KEY);
    Object.getOwnPropertyNames(this).forEach(propertyName => {
      this[propertyName] = null;
    });
  }

  _queueCallback(callback, element, isAnimated = true) {
    executeAfterTransition(callback, element, isAnimated);
  }
  /** Static */


  static getInstance(element) {
    return Data.get(getElement(element), this.DATA_KEY);
  }

  static getOrCreateInstance(element, config = {}) {
    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);
  }

  static get VERSION() {
    return VERSION;
  }

  static get NAME() {
    throw new Error('You have to implement the static method "NAME", for each component!');
  }

  static get DATA_KEY() {
    return `bs.${this.NAME}`;
  }

  static get EVENT_KEY() {
    return `.${this.DATA_KEY}`;
  }

}

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): util/component-functions.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */

const enableDismissTrigger = (component, method = 'hide') => {
  const clickEvent = `click.dismiss${component.EVENT_KEY}`;
  const name = component.NAME;
  EventHandler.on(document, clickEvent, `[data-bs-dismiss="${name}"]`, function (event) {
    if (['A', 'AREA'].includes(this.tagName)) {
      event.preventDefault();
    }

    if (isDisabled(this)) {
      return;
    }

    const target = getElementFromSelector(this) || this.closest(`.${name}`);
    const instance = component.getOrCreateInstance(target); // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method

    instance[method]();
  });
};

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): alert.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$d = 'alert';
const DATA_KEY$c = 'bs.alert';
const EVENT_KEY$c = `.${DATA_KEY$c}`;
const EVENT_CLOSE = `close${EVENT_KEY$c}`;
const EVENT_CLOSED = `closed${EVENT_KEY$c}`;
const CLASS_NAME_FADE$5 = 'fade';
const CLASS_NAME_SHOW$8 = 'show';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Alert extends BaseComponent {
  // Getters
  static get NAME() {
    return NAME$d;
  } // Public


  close() {
    const closeEvent = EventHandler.trigger(this._element, EVENT_CLOSE);

    if (closeEvent.defaultPrevented) {
      return;
    }

    this._element.classList.remove(CLASS_NAME_SHOW$8);

    const isAnimated = this._element.classList.contains(CLASS_NAME_FADE$5);

    this._queueCallback(() => this._destroyElement(), this._element, isAnimated);
  } // Private


  _destroyElement() {
    this._element.remove();

    EventHandler.trigger(this._element, EVENT_CLOSED);
    this.dispose();
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Alert.getOrCreateInstance(this);

      if (typeof config !== 'string') {
        return;
      }

      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {
        throw new TypeError(`No method named "${config}"`);
      }

      data[config](this);
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


enableDismissTrigger(Alert, 'close');
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Alert to jQuery only if jQuery is present
 */

defineJQueryPlugin(Alert);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): button.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$c = 'button';
const DATA_KEY$b = 'bs.button';
const EVENT_KEY$b = `.${DATA_KEY$b}`;
const DATA_API_KEY$7 = '.data-api';
const CLASS_NAME_ACTIVE$3 = 'active';
const SELECTOR_DATA_TOGGLE$5 = '[data-bs-toggle="button"]';
const EVENT_CLICK_DATA_API$6 = `click${EVENT_KEY$b}${DATA_API_KEY$7}`;
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Button extends BaseComponent {
  // Getters
  static get NAME() {
    return NAME$c;
  } // Public


  toggle() {
    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method
    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE$3));
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Button.getOrCreateInstance(this);

      if (config === 'toggle') {
        data[config]();
      }
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_CLICK_DATA_API$6, SELECTOR_DATA_TOGGLE$5, event => {
  event.preventDefault();
  const button = event.target.closest(SELECTOR_DATA_TOGGLE$5);
  const data = Button.getOrCreateInstance(button);
  data.toggle();
});
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Button to jQuery only if jQuery is present
 */

defineJQueryPlugin(Button);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): dom/manipulator.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
function normalizeData(val) {
  if (val === 'true') {
    return true;
  }

  if (val === 'false') {
    return false;
  }

  if (val === Number(val).toString()) {
    return Number(val);
  }

  if (val === '' || val === 'null') {
    return null;
  }

  return val;
}

function normalizeDataKey(key) {
  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`);
}

const Manipulator = {
  setDataAttribute(element, key, value) {
    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value);
  },

  removeDataAttribute(element, key) {
    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);
  },

  getDataAttributes(element) {
    if (!element) {
      return {};
    }

    const attributes = {};
    Object.keys(element.dataset).filter(key => key.startsWith('bs')).forEach(key => {
      let pureKey = key.replace(/^bs/, '');
      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);
      attributes[pureKey] = normalizeData(element.dataset[key]);
    });
    return attributes;
  },

  getDataAttribute(element, key) {
    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));
  },

  offset(element) {
    const rect = element.getBoundingClientRect();
    return {
      top: rect.top + window.pageYOffset,
      left: rect.left + window.pageXOffset
    };
  },

  position(element) {
    return {
      top: element.offsetTop,
      left: element.offsetLeft
    };
  }

};

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): dom/selector-engine.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
const NODE_TEXT = 3;
const SelectorEngine = {
  find(selector, element = document.documentElement) {
    return [].concat(...Element.prototype.querySelectorAll.call(element, selector));
  },

  findOne(selector, element = document.documentElement) {
    return Element.prototype.querySelector.call(element, selector);
  },

  children(element, selector) {
    return [].concat(...element.children).filter(child => child.matches(selector));
  },

  parents(element, selector) {
    const parents = [];
    let ancestor = element.parentNode;

    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {
      if (ancestor.matches(selector)) {
        parents.push(ancestor);
      }

      ancestor = ancestor.parentNode;
    }

    return parents;
  },

  prev(element, selector) {
    let previous = element.previousElementSibling;

    while (previous) {
      if (previous.matches(selector)) {
        return [previous];
      }

      previous = previous.previousElementSibling;
    }

    return [];
  },

  next(element, selector) {
    let next = element.nextElementSibling;

    while (next) {
      if (next.matches(selector)) {
        return [next];
      }

      next = next.nextElementSibling;
    }

    return [];
  },

  focusableChildren(element) {
    const focusables = ['a', 'button', 'input', 'textarea', 'select', 'details', '[tabindex]', '[contenteditable="true"]'].map(selector => `${selector}:not([tabindex^="-"])`).join(', ');
    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el));
  }

};

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): carousel.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$b = 'carousel';
const DATA_KEY$a = 'bs.carousel';
const EVENT_KEY$a = `.${DATA_KEY$a}`;
const DATA_API_KEY$6 = '.data-api';
const ARROW_LEFT_KEY = 'ArrowLeft';
const ARROW_RIGHT_KEY = 'ArrowRight';
const TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch

const SWIPE_THRESHOLD = 40;
const Default$a = {
  interval: 5000,
  keyboard: true,
  slide: false,
  pause: 'hover',
  wrap: true,
  touch: true
};
const DefaultType$a = {
  interval: '(number|boolean)',
  keyboard: 'boolean',
  slide: '(boolean|string)',
  pause: '(string|boolean)',
  wrap: 'boolean',
  touch: 'boolean'
};
const ORDER_NEXT = 'next';
const ORDER_PREV = 'prev';
const DIRECTION_LEFT = 'left';
const DIRECTION_RIGHT = 'right';
const KEY_TO_DIRECTION = {
  [ARROW_LEFT_KEY]: DIRECTION_RIGHT,
  [ARROW_RIGHT_KEY]: DIRECTION_LEFT
};
const EVENT_SLIDE = `slide${EVENT_KEY$a}`;
const EVENT_SLID = `slid${EVENT_KEY$a}`;
const EVENT_KEYDOWN = `keydown${EVENT_KEY$a}`;
const EVENT_MOUSEENTER = `mouseenter${EVENT_KEY$a}`;
const EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY$a}`;
const EVENT_TOUCHSTART = `touchstart${EVENT_KEY$a}`;
const EVENT_TOUCHMOVE = `touchmove${EVENT_KEY$a}`;
const EVENT_TOUCHEND = `touchend${EVENT_KEY$a}`;
const EVENT_POINTERDOWN = `pointerdown${EVENT_KEY$a}`;
const EVENT_POINTERUP = `pointerup${EVENT_KEY$a}`;
const EVENT_DRAG_START = `dragstart${EVENT_KEY$a}`;
const EVENT_LOAD_DATA_API$2 = `load${EVENT_KEY$a}${DATA_API_KEY$6}`;
const EVENT_CLICK_DATA_API$5 = `click${EVENT_KEY$a}${DATA_API_KEY$6}`;
const CLASS_NAME_CAROUSEL = 'carousel';
const CLASS_NAME_ACTIVE$2 = 'active';
const CLASS_NAME_SLIDE = 'slide';
const CLASS_NAME_END = 'carousel-item-end';
const CLASS_NAME_START = 'carousel-item-start';
const CLASS_NAME_NEXT = 'carousel-item-next';
const CLASS_NAME_PREV = 'carousel-item-prev';
const CLASS_NAME_POINTER_EVENT = 'pointer-event';
const SELECTOR_ACTIVE$1 = '.active';
const SELECTOR_ACTIVE_ITEM = '.active.carousel-item';
const SELECTOR_ITEM = '.carousel-item';
const SELECTOR_ITEM_IMG = '.carousel-item img';
const SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev';
const SELECTOR_INDICATORS = '.carousel-indicators';
const SELECTOR_INDICATOR = '[data-bs-target]';
const SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]';
const SELECTOR_DATA_RIDE = '[data-bs-ride="carousel"]';
const POINTER_TYPE_TOUCH = 'touch';
const POINTER_TYPE_PEN = 'pen';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Carousel extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._items = null;
    this._interval = null;
    this._activeElement = null;
    this._isPaused = false;
    this._isSliding = false;
    this.touchTimeout = null;
    this.touchStartX = 0;
    this.touchDeltaX = 0;
    this._config = this._getConfig(config);
    this._indicatorsElement = SelectorEngine.findOne(SELECTOR_INDICATORS, this._element);
    this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;
    this._pointerEvent = Boolean(window.PointerEvent);

    this._addEventListeners();
  } // Getters


  static get Default() {
    return Default$a;
  }

  static get NAME() {
    return NAME$b;
  } // Public


  next() {
    this._slide(ORDER_NEXT);
  }

  nextWhenVisible() {
    // Don't call next when the page isn't visible
    // or the carousel or its parent isn't visible
    if (!document.hidden && isVisible(this._element)) {
      this.next();
    }
  }

  prev() {
    this._slide(ORDER_PREV);
  }

  pause(event) {
    if (!event) {
      this._isPaused = true;
    }

    if (SelectorEngine.findOne(SELECTOR_NEXT_PREV, this._element)) {
      triggerTransitionEnd(this._element);
      this.cycle(true);
    }

    clearInterval(this._interval);
    this._interval = null;
  }

  cycle(event) {
    if (!event) {
      this._isPaused = false;
    }

    if (this._interval) {
      clearInterval(this._interval);
      this._interval = null;
    }

    if (this._config && this._config.interval && !this._isPaused) {
      this._updateInterval();

      this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);
    }
  }

  to(index) {
    this._activeElement = SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element);

    const activeIndex = this._getItemIndex(this._activeElement);

    if (index > this._items.length - 1 || index < 0) {
      return;
    }

    if (this._isSliding) {
      EventHandler.one(this._element, EVENT_SLID, () => this.to(index));
      return;
    }

    if (activeIndex === index) {
      this.pause();
      this.cycle();
      return;
    }

    const order = index > activeIndex ? ORDER_NEXT : ORDER_PREV;

    this._slide(order, this._items[index]);
  } // Private


  _getConfig(config) {
    config = { ...Default$a,
      ...Manipulator.getDataAttributes(this._element),
      ...(typeof config === 'object' ? config : {})
    };
    typeCheckConfig(NAME$b, config, DefaultType$a);
    return config;
  }

  _handleSwipe() {
    const absDeltax = Math.abs(this.touchDeltaX);

    if (absDeltax <= SWIPE_THRESHOLD) {
      return;
    }

    const direction = absDeltax / this.touchDeltaX;
    this.touchDeltaX = 0;

    if (!direction) {
      return;
    }

    this._slide(direction > 0 ? DIRECTION_RIGHT : DIRECTION_LEFT);
  }

  _addEventListeners() {
    if (this._config.keyboard) {
      EventHandler.on(this._element, EVENT_KEYDOWN, event => this._keydown(event));
    }

    if (this._config.pause === 'hover') {
      EventHandler.on(this._element, EVENT_MOUSEENTER, event => this.pause(event));
      EventHandler.on(this._element, EVENT_MOUSELEAVE, event => this.cycle(event));
    }

    if (this._config.touch && this._touchSupported) {
      this._addTouchEventListeners();
    }
  }

  _addTouchEventListeners() {
    const hasPointerPenTouch = event => {
      return this._pointerEvent && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH);
    };

    const start = event => {
      if (hasPointerPenTouch(event)) {
        this.touchStartX = event.clientX;
      } else if (!this._pointerEvent) {
        this.touchStartX = event.touches[0].clientX;
      }
    };

    const move = event => {
      // ensure swiping with one touch and not pinching
      this.touchDeltaX = event.touches && event.touches.length > 1 ? 0 : event.touches[0].clientX - this.touchStartX;
    };

    const end = event => {
      if (hasPointerPenTouch(event)) {
        this.touchDeltaX = event.clientX - this.touchStartX;
      }

      this._handleSwipe();

      if (this._config.pause === 'hover') {
        // If it's a touch-enabled device, mouseenter/leave are fired as
        // part of the mouse compatibility events on first tap - the carousel
        // would stop cycling until user tapped out of it;
        // here, we listen for touchend, explicitly pause the carousel
        // (as if it's the second time we tap on it, mouseenter compat event
        // is NOT fired) and after a timeout (to allow for mouse compatibility
        // events to fire) we explicitly restart cycling
        this.pause();

        if (this.touchTimeout) {
          clearTimeout(this.touchTimeout);
        }

        this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval);
      }
    };

    SelectorEngine.find(SELECTOR_ITEM_IMG, this._element).forEach(itemImg => {
      EventHandler.on(itemImg, EVENT_DRAG_START, event => event.preventDefault());
    });

    if (this._pointerEvent) {
      EventHandler.on(this._element, EVENT_POINTERDOWN, event => start(event));
      EventHandler.on(this._element, EVENT_POINTERUP, event => end(event));

      this._element.classList.add(CLASS_NAME_POINTER_EVENT);
    } else {
      EventHandler.on(this._element, EVENT_TOUCHSTART, event => start(event));
      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => move(event));
      EventHandler.on(this._element, EVENT_TOUCHEND, event => end(event));
    }
  }

  _keydown(event) {
    if (/input|textarea/i.test(event.target.tagName)) {
      return;
    }

    const direction = KEY_TO_DIRECTION[event.key];

    if (direction) {
      event.preventDefault();

      this._slide(direction);
    }
  }

  _getItemIndex(element) {
    this._items = element && element.parentNode ? SelectorEngine.find(SELECTOR_ITEM, element.parentNode) : [];
    return this._items.indexOf(element);
  }

  _getItemByOrder(order, activeElement) {
    const isNext = order === ORDER_NEXT;
    return getNextActiveElement(this._items, activeElement, isNext, this._config.wrap);
  }

  _triggerSlideEvent(relatedTarget, eventDirectionName) {
    const targetIndex = this._getItemIndex(relatedTarget);

    const fromIndex = this._getItemIndex(SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element));

    return EventHandler.trigger(this._element, EVENT_SLIDE, {
      relatedTarget,
      direction: eventDirectionName,
      from: fromIndex,
      to: targetIndex
    });
  }

  _setActiveIndicatorElement(element) {
    if (this._indicatorsElement) {
      const activeIndicator = SelectorEngine.findOne(SELECTOR_ACTIVE$1, this._indicatorsElement);
      activeIndicator.classList.remove(CLASS_NAME_ACTIVE$2);
      activeIndicator.removeAttribute('aria-current');
      const indicators = SelectorEngine.find(SELECTOR_INDICATOR, this._indicatorsElement);

      for (let i = 0; i < indicators.length; i++) {
        if (Number.parseInt(indicators[i].getAttribute('data-bs-slide-to'), 10) === this._getItemIndex(element)) {
          indicators[i].classList.add(CLASS_NAME_ACTIVE$2);
          indicators[i].setAttribute('aria-current', 'true');
          break;
        }
      }
    }
  }

  _updateInterval() {
    const element = this._activeElement || SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element);

    if (!element) {
      return;
    }

    const elementInterval = Number.parseInt(element.getAttribute('data-bs-interval'), 10);

    if (elementInterval) {
      this._config.defaultInterval = this._config.defaultInterval || this._config.interval;
      this._config.interval = elementInterval;
    } else {
      this._config.interval = this._config.defaultInterval || this._config.interval;
    }
  }

  _slide(directionOrOrder, element) {
    const order = this._directionToOrder(directionOrOrder);

    const activeElement = SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element);

    const activeElementIndex = this._getItemIndex(activeElement);

    const nextElement = element || this._getItemByOrder(order, activeElement);

    const nextElementIndex = this._getItemIndex(nextElement);

    const isCycling = Boolean(this._interval);
    const isNext = order === ORDER_NEXT;
    const directionalClassName = isNext ? CLASS_NAME_START : CLASS_NAME_END;
    const orderClassName = isNext ? CLASS_NAME_NEXT : CLASS_NAME_PREV;

    const eventDirectionName = this._orderToDirection(order);

    if (nextElement && nextElement.classList.contains(CLASS_NAME_ACTIVE$2)) {
      this._isSliding = false;
      return;
    }

    if (this._isSliding) {
      return;
    }

    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);

    if (slideEvent.defaultPrevented) {
      return;
    }

    if (!activeElement || !nextElement) {
      // Some weirdness is happening, so we bail
      return;
    }

    this._isSliding = true;

    if (isCycling) {
      this.pause();
    }

    this._setActiveIndicatorElement(nextElement);

    this._activeElement = nextElement;

    const triggerSlidEvent = () => {
      EventHandler.trigger(this._element, EVENT_SLID, {
        relatedTarget: nextElement,
        direction: eventDirectionName,
        from: activeElementIndex,
        to: nextElementIndex
      });
    };

    if (this._element.classList.contains(CLASS_NAME_SLIDE)) {
      nextElement.classList.add(orderClassName);
      reflow(nextElement);
      activeElement.classList.add(directionalClassName);
      nextElement.classList.add(directionalClassName);

      const completeCallBack = () => {
        nextElement.classList.remove(directionalClassName, orderClassName);
        nextElement.classList.add(CLASS_NAME_ACTIVE$2);
        activeElement.classList.remove(CLASS_NAME_ACTIVE$2, orderClassName, directionalClassName);
        this._isSliding = false;
        setTimeout(triggerSlidEvent, 0);
      };

      this._queueCallback(completeCallBack, activeElement, true);
    } else {
      activeElement.classList.remove(CLASS_NAME_ACTIVE$2);
      nextElement.classList.add(CLASS_NAME_ACTIVE$2);
      this._isSliding = false;
      triggerSlidEvent();
    }

    if (isCycling) {
      this.cycle();
    }
  }

  _directionToOrder(direction) {
    if (![DIRECTION_RIGHT, DIRECTION_LEFT].includes(direction)) {
      return direction;
    }

    if (isRTL()) {
      return direction === DIRECTION_LEFT ? ORDER_PREV : ORDER_NEXT;
    }

    return direction === DIRECTION_LEFT ? ORDER_NEXT : ORDER_PREV;
  }

  _orderToDirection(order) {
    if (![ORDER_NEXT, ORDER_PREV].includes(order)) {
      return order;
    }

    if (isRTL()) {
      return order === ORDER_PREV ? DIRECTION_LEFT : DIRECTION_RIGHT;
    }

    return order === ORDER_PREV ? DIRECTION_RIGHT : DIRECTION_LEFT;
  } // Static


  static carouselInterface(element, config) {
    const data = Carousel.getOrCreateInstance(element, config);
    let {
      _config
    } = data;

    if (typeof config === 'object') {
      _config = { ..._config,
        ...config
      };
    }

    const action = typeof config === 'string' ? config : _config.slide;

    if (typeof config === 'number') {
      data.to(config);
    } else if (typeof action === 'string') {
      if (typeof data[action] === 'undefined') {
        throw new TypeError(`No method named "${action}"`);
      }

      data[action]();
    } else if (_config.interval && _config.ride) {
      data.pause();
      data.cycle();
    }
  }

  static jQueryInterface(config) {
    return this.each(function () {
      Carousel.carouselInterface(this, config);
    });
  }

  static dataApiClickHandler(event) {
    const target = getElementFromSelector(this);

    if (!target || !target.classList.contains(CLASS_NAME_CAROUSEL)) {
      return;
    }

    const config = { ...Manipulator.getDataAttributes(target),
      ...Manipulator.getDataAttributes(this)
    };
    const slideIndex = this.getAttribute('data-bs-slide-to');

    if (slideIndex) {
      config.interval = false;
    }

    Carousel.carouselInterface(target, config);

    if (slideIndex) {
      Carousel.getInstance(target).to(slideIndex);
    }

    event.preventDefault();
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_CLICK_DATA_API$5, SELECTOR_DATA_SLIDE, Carousel.dataApiClickHandler);
EventHandler.on(window, EVENT_LOAD_DATA_API$2, () => {
  const carousels = SelectorEngine.find(SELECTOR_DATA_RIDE);

  for (let i = 0, len = carousels.length; i < len; i++) {
    Carousel.carouselInterface(carousels[i], Carousel.getInstance(carousels[i]));
  }
});
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Carousel to jQuery only if jQuery is present
 */

defineJQueryPlugin(Carousel);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): collapse.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$a = 'collapse';
const DATA_KEY$9 = 'bs.collapse';
const EVENT_KEY$9 = `.${DATA_KEY$9}`;
const DATA_API_KEY$5 = '.data-api';
const Default$9 = {
  toggle: true,
  parent: null
};
const DefaultType$9 = {
  toggle: 'boolean',
  parent: '(null|element)'
};
const EVENT_SHOW$5 = `show${EVENT_KEY$9}`;
const EVENT_SHOWN$5 = `shown${EVENT_KEY$9}`;
const EVENT_HIDE$5 = `hide${EVENT_KEY$9}`;
const EVENT_HIDDEN$5 = `hidden${EVENT_KEY$9}`;
const EVENT_CLICK_DATA_API$4 = `click${EVENT_KEY$9}${DATA_API_KEY$5}`;
const CLASS_NAME_SHOW$7 = 'show';
const CLASS_NAME_COLLAPSE = 'collapse';
const CLASS_NAME_COLLAPSING = 'collapsing';
const CLASS_NAME_COLLAPSED = 'collapsed';
const CLASS_NAME_DEEPER_CHILDREN = `:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`;
const CLASS_NAME_HORIZONTAL = 'collapse-horizontal';
const WIDTH = 'width';
const HEIGHT = 'height';
const SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing';
const SELECTOR_DATA_TOGGLE$4 = '[data-bs-toggle="collapse"]';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Collapse extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._isTransitioning = false;
    this._config = this._getConfig(config);
    this._triggerArray = [];
    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE$4);

    for (let i = 0, len = toggleList.length; i < len; i++) {
      const elem = toggleList[i];
      const selector = getSelectorFromElement(elem);
      const filterElement = SelectorEngine.find(selector).filter(foundElem => foundElem === this._element);

      if (selector !== null && filterElement.length) {
        this._selector = selector;

        this._triggerArray.push(elem);
      }
    }

    this._initializeChildren();

    if (!this._config.parent) {
      this._addAriaAndCollapsedClass(this._triggerArray, this._isShown());
    }

    if (this._config.toggle) {
      this.toggle();
    }
  } // Getters


  static get Default() {
    return Default$9;
  }

  static get NAME() {
    return NAME$a;
  } // Public


  toggle() {
    if (this._isShown()) {
      this.hide();
    } else {
      this.show();
    }
  }

  show() {
    if (this._isTransitioning || this._isShown()) {
      return;
    }

    let actives = [];
    let activesData;

    if (this._config.parent) {
      const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent);
      actives = SelectorEngine.find(SELECTOR_ACTIVES, this._config.parent).filter(elem => !children.includes(elem)); // remove children if greater depth
    }

    const container = SelectorEngine.findOne(this._selector);

    if (actives.length) {
      const tempActiveData = actives.find(elem => container !== elem);
      activesData = tempActiveData ? Collapse.getInstance(tempActiveData) : null;

      if (activesData && activesData._isTransitioning) {
        return;
      }
    }

    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW$5);

    if (startEvent.defaultPrevented) {
      return;
    }

    actives.forEach(elemActive => {
      if (container !== elemActive) {
        Collapse.getOrCreateInstance(elemActive, {
          toggle: false
        }).hide();
      }

      if (!activesData) {
        Data.set(elemActive, DATA_KEY$9, null);
      }
    });

    const dimension = this._getDimension();

    this._element.classList.remove(CLASS_NAME_COLLAPSE);

    this._element.classList.add(CLASS_NAME_COLLAPSING);

    this._element.style[dimension] = 0;

    this._addAriaAndCollapsedClass(this._triggerArray, true);

    this._isTransitioning = true;

    const complete = () => {
      this._isTransitioning = false;

      this._element.classList.remove(CLASS_NAME_COLLAPSING);

      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);

      this._element.style[dimension] = '';
      EventHandler.trigger(this._element, EVENT_SHOWN$5);
    };

    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);
    const scrollSize = `scroll${capitalizedDimension}`;

    this._queueCallback(complete, this._element, true);

    this._element.style[dimension] = `${this._element[scrollSize]}px`;
  }

  hide() {
    if (this._isTransitioning || !this._isShown()) {
      return;
    }

    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE$5);

    if (startEvent.defaultPrevented) {
      return;
    }

    const dimension = this._getDimension();

    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`;
    reflow(this._element);

    this._element.classList.add(CLASS_NAME_COLLAPSING);

    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);

    const triggerArrayLength = this._triggerArray.length;

    for (let i = 0; i < triggerArrayLength; i++) {
      const trigger = this._triggerArray[i];
      const elem = getElementFromSelector(trigger);

      if (elem && !this._isShown(elem)) {
        this._addAriaAndCollapsedClass([trigger], false);
      }
    }

    this._isTransitioning = true;

    const complete = () => {
      this._isTransitioning = false;

      this._element.classList.remove(CLASS_NAME_COLLAPSING);

      this._element.classList.add(CLASS_NAME_COLLAPSE);

      EventHandler.trigger(this._element, EVENT_HIDDEN$5);
    };

    this._element.style[dimension] = '';

    this._queueCallback(complete, this._element, true);
  }

  _isShown(element = this._element) {
    return element.classList.contains(CLASS_NAME_SHOW$7);
  } // Private


  _getConfig(config) {
    config = { ...Default$9,
      ...Manipulator.getDataAttributes(this._element),
      ...config
    };
    config.toggle = Boolean(config.toggle); // Coerce string values

    config.parent = getElement(config.parent);
    typeCheckConfig(NAME$a, config, DefaultType$9);
    return config;
  }

  _getDimension() {
    return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT;
  }

  _initializeChildren() {
    if (!this._config.parent) {
      return;
    }

    const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent);
    SelectorEngine.find(SELECTOR_DATA_TOGGLE$4, this._config.parent).filter(elem => !children.includes(elem)).forEach(element => {
      const selected = getElementFromSelector(element);

      if (selected) {
        this._addAriaAndCollapsedClass([element], this._isShown(selected));
      }
    });
  }

  _addAriaAndCollapsedClass(triggerArray, isOpen) {
    if (!triggerArray.length) {
      return;
    }

    triggerArray.forEach(elem => {
      if (isOpen) {
        elem.classList.remove(CLASS_NAME_COLLAPSED);
      } else {
        elem.classList.add(CLASS_NAME_COLLAPSED);
      }

      elem.setAttribute('aria-expanded', isOpen);
    });
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const _config = {};

      if (typeof config === 'string' && /show|hide/.test(config)) {
        _config.toggle = false;
      }

      const data = Collapse.getOrCreateInstance(this, _config);

      if (typeof config === 'string') {
        if (typeof data[config] === 'undefined') {
          throw new TypeError(`No method named "${config}"`);
        }

        data[config]();
      }
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_CLICK_DATA_API$4, SELECTOR_DATA_TOGGLE$4, function (event) {
  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element
  if (event.target.tagName === 'A' || event.delegateTarget && event.delegateTarget.tagName === 'A') {
    event.preventDefault();
  }

  const selector = getSelectorFromElement(this);
  const selectorElements = SelectorEngine.find(selector);
  selectorElements.forEach(element => {
    Collapse.getOrCreateInstance(element, {
      toggle: false
    }).toggle();
  });
});
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Collapse to jQuery only if jQuery is present
 */

defineJQueryPlugin(Collapse);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): dropdown.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$9 = 'dropdown';
const DATA_KEY$8 = 'bs.dropdown';
const EVENT_KEY$8 = `.${DATA_KEY$8}`;
const DATA_API_KEY$4 = '.data-api';
const ESCAPE_KEY$2 = 'Escape';
const SPACE_KEY = 'Space';
const TAB_KEY$1 = 'Tab';
const ARROW_UP_KEY = 'ArrowUp';
const ARROW_DOWN_KEY = 'ArrowDown';
const RIGHT_MOUSE_BUTTON = 2; // MouseEvent.button value for the secondary button, usually the right button

const REGEXP_KEYDOWN = new RegExp(`${ARROW_UP_KEY}|${ARROW_DOWN_KEY}|${ESCAPE_KEY$2}`);
const EVENT_HIDE$4 = `hide${EVENT_KEY$8}`;
const EVENT_HIDDEN$4 = `hidden${EVENT_KEY$8}`;
const EVENT_SHOW$4 = `show${EVENT_KEY$8}`;
const EVENT_SHOWN$4 = `shown${EVENT_KEY$8}`;
const EVENT_CLICK_DATA_API$3 = `click${EVENT_KEY$8}${DATA_API_KEY$4}`;
const EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY$8}${DATA_API_KEY$4}`;
const EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY$8}${DATA_API_KEY$4}`;
const CLASS_NAME_SHOW$6 = 'show';
const CLASS_NAME_DROPUP = 'dropup';
const CLASS_NAME_DROPEND = 'dropend';
const CLASS_NAME_DROPSTART = 'dropstart';
const CLASS_NAME_NAVBAR = 'navbar';
const SELECTOR_DATA_TOGGLE$3 = '[data-bs-toggle="dropdown"]';
const SELECTOR_MENU = '.dropdown-menu';
const SELECTOR_NAVBAR_NAV = '.navbar-nav';
const SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';
const PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start';
const PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end';
const PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start';
const PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end';
const PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start';
const PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start';
const Default$8 = {
  offset: [0, 2],
  boundary: 'clippingParents',
  reference: 'toggle',
  display: 'dynamic',
  popperConfig: null,
  autoClose: true
};
const DefaultType$8 = {
  offset: '(array|string|function)',
  boundary: '(string|element)',
  reference: '(string|element|object)',
  display: 'string',
  popperConfig: '(null|object|function)',
  autoClose: '(boolean|string)'
};
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Dropdown extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._popper = null;
    this._config = this._getConfig(config);
    this._menu = this._getMenuElement();
    this._inNavbar = this._detectNavbar();
  } // Getters


  static get Default() {
    return Default$8;
  }

  static get DefaultType() {
    return DefaultType$8;
  }

  static get NAME() {
    return NAME$9;
  } // Public


  toggle() {
    return this._isShown() ? this.hide() : this.show();
  }

  show() {
    if (isDisabled(this._element) || this._isShown(this._menu)) {
      return;
    }

    const relatedTarget = {
      relatedTarget: this._element
    };
    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$4, relatedTarget);

    if (showEvent.defaultPrevented) {
      return;
    }

    const parent = Dropdown.getParentFromElement(this._element); // Totally disable Popper for Dropdowns in Navbar

    if (this._inNavbar) {
      Manipulator.setDataAttribute(this._menu, 'popper', 'none');
    } else {
      this._createPopper(parent);
    } // If this is a touch-enabled device we add extra
    // empty mouseover listeners to the body's immediate children;
    // only needed because of broken event delegation on iOS
    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html


    if ('ontouchstart' in document.documentElement && !parent.closest(SELECTOR_NAVBAR_NAV)) {
      [].concat(...document.body.children).forEach(elem => EventHandler.on(elem, 'mouseover', noop));
    }

    this._element.focus();

    this._element.setAttribute('aria-expanded', true);

    this._menu.classList.add(CLASS_NAME_SHOW$6);

    this._element.classList.add(CLASS_NAME_SHOW$6);

    EventHandler.trigger(this._element, EVENT_SHOWN$4, relatedTarget);
  }

  hide() {
    if (isDisabled(this._element) || !this._isShown(this._menu)) {
      return;
    }

    const relatedTarget = {
      relatedTarget: this._element
    };

    this._completeHide(relatedTarget);
  }

  dispose() {
    if (this._popper) {
      this._popper.destroy();
    }

    super.dispose();
  }

  update() {
    this._inNavbar = this._detectNavbar();

    if (this._popper) {
      this._popper.update();
    }
  } // Private


  _completeHide(relatedTarget) {
    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$4, relatedTarget);

    if (hideEvent.defaultPrevented) {
      return;
    } // If this is a touch-enabled device we remove the extra
    // empty mouseover listeners we added for iOS support


    if ('ontouchstart' in document.documentElement) {
      [].concat(...document.body.children).forEach(elem => EventHandler.off(elem, 'mouseover', noop));
    }

    if (this._popper) {
      this._popper.destroy();
    }

    this._menu.classList.remove(CLASS_NAME_SHOW$6);

    this._element.classList.remove(CLASS_NAME_SHOW$6);

    this._element.setAttribute('aria-expanded', 'false');

    Manipulator.removeDataAttribute(this._menu, 'popper');
    EventHandler.trigger(this._element, EVENT_HIDDEN$4, relatedTarget);
  }

  _getConfig(config) {
    config = { ...this.constructor.Default,
      ...Manipulator.getDataAttributes(this._element),
      ...config
    };
    typeCheckConfig(NAME$9, config, this.constructor.DefaultType);

    if (typeof config.reference === 'object' && !isElement(config.reference) && typeof config.reference.getBoundingClientRect !== 'function') {
      // Popper virtual elements require a getBoundingClientRect method
      throw new TypeError(`${NAME$9.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);
    }

    return config;
  }

  _createPopper(parent) {
    if (typeof _popperjs_core__WEBPACK_IMPORTED_MODULE_0__ === 'undefined') {
      throw new TypeError('Bootstrap\'s dropdowns require Popper (https://popper.js.org)');
    }

    let referenceElement = this._element;

    if (this._config.reference === 'parent') {
      referenceElement = parent;
    } else if (isElement(this._config.reference)) {
      referenceElement = getElement(this._config.reference);
    } else if (typeof this._config.reference === 'object') {
      referenceElement = this._config.reference;
    }

    const popperConfig = this._getPopperConfig();

    const isDisplayStatic = popperConfig.modifiers.find(modifier => modifier.name === 'applyStyles' && modifier.enabled === false);
    this._popper = _popperjs_core__WEBPACK_IMPORTED_MODULE_1__.createPopper(referenceElement, this._menu, popperConfig);

    if (isDisplayStatic) {
      Manipulator.setDataAttribute(this._menu, 'popper', 'static');
    }
  }

  _isShown(element = this._element) {
    return element.classList.contains(CLASS_NAME_SHOW$6);
  }

  _getMenuElement() {
    return SelectorEngine.next(this._element, SELECTOR_MENU)[0];
  }

  _getPlacement() {
    const parentDropdown = this._element.parentNode;

    if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {
      return PLACEMENT_RIGHT;
    }

    if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {
      return PLACEMENT_LEFT;
    } // We need to trim the value because custom properties can also include spaces


    const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end';

    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {
      return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP;
    }

    return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM;
  }

  _detectNavbar() {
    return this._element.closest(`.${CLASS_NAME_NAVBAR}`) !== null;
  }

  _getOffset() {
    const {
      offset
    } = this._config;

    if (typeof offset === 'string') {
      return offset.split(',').map(val => Number.parseInt(val, 10));
    }

    if (typeof offset === 'function') {
      return popperData => offset(popperData, this._element);
    }

    return offset;
  }

  _getPopperConfig() {
    const defaultBsPopperConfig = {
      placement: this._getPlacement(),
      modifiers: [{
        name: 'preventOverflow',
        options: {
          boundary: this._config.boundary
        }
      }, {
        name: 'offset',
        options: {
          offset: this._getOffset()
        }
      }]
    }; // Disable Popper if we have a static display

    if (this._config.display === 'static') {
      defaultBsPopperConfig.modifiers = [{
        name: 'applyStyles',
        enabled: false
      }];
    }

    return { ...defaultBsPopperConfig,
      ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)
    };
  }

  _selectMenuItem({
    key,
    target
  }) {
    const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(isVisible);

    if (!items.length) {
      return;
    } // if target isn't included in items (e.g. when expanding the dropdown)
    // allow cycling to get the last item in case key equals ARROW_UP_KEY


    getNextActiveElement(items, target, key === ARROW_DOWN_KEY, !items.includes(target)).focus();
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Dropdown.getOrCreateInstance(this, config);

      if (typeof config !== 'string') {
        return;
      }

      if (typeof data[config] === 'undefined') {
        throw new TypeError(`No method named "${config}"`);
      }

      data[config]();
    });
  }

  static clearMenus(event) {
    if (event && (event.button === RIGHT_MOUSE_BUTTON || event.type === 'keyup' && event.key !== TAB_KEY$1)) {
      return;
    }

    const toggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE$3);

    for (let i = 0, len = toggles.length; i < len; i++) {
      const context = Dropdown.getInstance(toggles[i]);

      if (!context || context._config.autoClose === false) {
        continue;
      }

      if (!context._isShown()) {
        continue;
      }

      const relatedTarget = {
        relatedTarget: context._element
      };

      if (event) {
        const composedPath = event.composedPath();
        const isMenuTarget = composedPath.includes(context._menu);

        if (composedPath.includes(context._element) || context._config.autoClose === 'inside' && !isMenuTarget || context._config.autoClose === 'outside' && isMenuTarget) {
          continue;
        } // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu


        if (context._menu.contains(event.target) && (event.type === 'keyup' && event.key === TAB_KEY$1 || /input|select|option|textarea|form/i.test(event.target.tagName))) {
          continue;
        }

        if (event.type === 'click') {
          relatedTarget.clickEvent = event;
        }
      }

      context._completeHide(relatedTarget);
    }
  }

  static getParentFromElement(element) {
    return getElementFromSelector(element) || element.parentNode;
  }

  static dataApiKeydownHandler(event) {
    // If not input/textarea:
    //  - And not a key in REGEXP_KEYDOWN => not a dropdown command
    // If input/textarea:
    //  - If space key => not a dropdown command
    //  - If key is other than escape
    //    - If key is not up or down => not a dropdown command
    //    - If trigger inside the menu => not a dropdown command
    if (/input|textarea/i.test(event.target.tagName) ? event.key === SPACE_KEY || event.key !== ESCAPE_KEY$2 && (event.key !== ARROW_DOWN_KEY && event.key !== ARROW_UP_KEY || event.target.closest(SELECTOR_MENU)) : !REGEXP_KEYDOWN.test(event.key)) {
      return;
    }

    const isActive = this.classList.contains(CLASS_NAME_SHOW$6);

    if (!isActive && event.key === ESCAPE_KEY$2) {
      return;
    }

    event.preventDefault();
    event.stopPropagation();

    if (isDisabled(this)) {
      return;
    }

    const getToggleButton = this.matches(SELECTOR_DATA_TOGGLE$3) ? this : SelectorEngine.prev(this, SELECTOR_DATA_TOGGLE$3)[0];
    const instance = Dropdown.getOrCreateInstance(getToggleButton);

    if (event.key === ESCAPE_KEY$2) {
      instance.hide();
      return;
    }

    if (event.key === ARROW_UP_KEY || event.key === ARROW_DOWN_KEY) {
      if (!isActive) {
        instance.show();
      }

      instance._selectMenuItem(event);

      return;
    }

    if (!isActive || event.key === SPACE_KEY) {
      Dropdown.clearMenus();
    }
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE$3, Dropdown.dataApiKeydownHandler);
EventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler);
EventHandler.on(document, EVENT_CLICK_DATA_API$3, Dropdown.clearMenus);
EventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus);
EventHandler.on(document, EVENT_CLICK_DATA_API$3, SELECTOR_DATA_TOGGLE$3, function (event) {
  event.preventDefault();
  Dropdown.getOrCreateInstance(this).toggle();
});
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Dropdown to jQuery only if jQuery is present
 */

defineJQueryPlugin(Dropdown);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): util/scrollBar.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
const SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';
const SELECTOR_STICKY_CONTENT = '.sticky-top';

class ScrollBarHelper {
  constructor() {
    this._element = document.body;
  }

  getWidth() {
    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes
    const documentWidth = document.documentElement.clientWidth;
    return Math.abs(window.innerWidth - documentWidth);
  }

  hide() {
    const width = this.getWidth();

    this._disableOverFlow(); // give padding to element to balance the hidden scrollbar width


    this._setElementAttributes(this._element, 'paddingRight', calculatedValue => calculatedValue + width); // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth


    this._setElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight', calculatedValue => calculatedValue + width);

    this._setElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight', calculatedValue => calculatedValue - width);
  }

  _disableOverFlow() {
    this._saveInitialAttribute(this._element, 'overflow');

    this._element.style.overflow = 'hidden';
  }

  _setElementAttributes(selector, styleProp, callback) {
    const scrollbarWidth = this.getWidth();

    const manipulationCallBack = element => {
      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {
        return;
      }

      this._saveInitialAttribute(element, styleProp);

      const calculatedValue = window.getComputedStyle(element)[styleProp];
      element.style[styleProp] = `${callback(Number.parseFloat(calculatedValue))}px`;
    };

    this._applyManipulationCallback(selector, manipulationCallBack);
  }

  reset() {
    this._resetElementAttributes(this._element, 'overflow');

    this._resetElementAttributes(this._element, 'paddingRight');

    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight');

    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight');
  }

  _saveInitialAttribute(element, styleProp) {
    const actualValue = element.style[styleProp];

    if (actualValue) {
      Manipulator.setDataAttribute(element, styleProp, actualValue);
    }
  }

  _resetElementAttributes(selector, styleProp) {
    const manipulationCallBack = element => {
      const value = Manipulator.getDataAttribute(element, styleProp);

      if (typeof value === 'undefined') {
        element.style.removeProperty(styleProp);
      } else {
        Manipulator.removeDataAttribute(element, styleProp);
        element.style[styleProp] = value;
      }
    };

    this._applyManipulationCallback(selector, manipulationCallBack);
  }

  _applyManipulationCallback(selector, callBack) {
    if (isElement(selector)) {
      callBack(selector);
    } else {
      SelectorEngine.find(selector, this._element).forEach(callBack);
    }
  }

  isOverflowing() {
    return this.getWidth() > 0;
  }

}

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): util/backdrop.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
const Default$7 = {
  className: 'modal-backdrop',
  isVisible: true,
  // if false, we use the backdrop helper without adding any element to the dom
  isAnimated: false,
  rootElement: 'body',
  // give the choice to place backdrop under different elements
  clickCallback: null
};
const DefaultType$7 = {
  className: 'string',
  isVisible: 'boolean',
  isAnimated: 'boolean',
  rootElement: '(element|string)',
  clickCallback: '(function|null)'
};
const NAME$8 = 'backdrop';
const CLASS_NAME_FADE$4 = 'fade';
const CLASS_NAME_SHOW$5 = 'show';
const EVENT_MOUSEDOWN = `mousedown.bs.${NAME$8}`;

class Backdrop {
  constructor(config) {
    this._config = this._getConfig(config);
    this._isAppended = false;
    this._element = null;
  }

  show(callback) {
    if (!this._config.isVisible) {
      execute(callback);
      return;
    }

    this._append();

    if (this._config.isAnimated) {
      reflow(this._getElement());
    }

    this._getElement().classList.add(CLASS_NAME_SHOW$5);

    this._emulateAnimation(() => {
      execute(callback);
    });
  }

  hide(callback) {
    if (!this._config.isVisible) {
      execute(callback);
      return;
    }

    this._getElement().classList.remove(CLASS_NAME_SHOW$5);

    this._emulateAnimation(() => {
      this.dispose();
      execute(callback);
    });
  } // Private


  _getElement() {
    if (!this._element) {
      const backdrop = document.createElement('div');
      backdrop.className = this._config.className;

      if (this._config.isAnimated) {
        backdrop.classList.add(CLASS_NAME_FADE$4);
      }

      this._element = backdrop;
    }

    return this._element;
  }

  _getConfig(config) {
    config = { ...Default$7,
      ...(typeof config === 'object' ? config : {})
    }; // use getElement() with the default "body" to get a fresh Element on each instantiation

    config.rootElement = getElement(config.rootElement);
    typeCheckConfig(NAME$8, config, DefaultType$7);
    return config;
  }

  _append() {
    if (this._isAppended) {
      return;
    }

    this._config.rootElement.append(this._getElement());

    EventHandler.on(this._getElement(), EVENT_MOUSEDOWN, () => {
      execute(this._config.clickCallback);
    });
    this._isAppended = true;
  }

  dispose() {
    if (!this._isAppended) {
      return;
    }

    EventHandler.off(this._element, EVENT_MOUSEDOWN);

    this._element.remove();

    this._isAppended = false;
  }

  _emulateAnimation(callback) {
    executeAfterTransition(callback, this._getElement(), this._config.isAnimated);
  }

}

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): util/focustrap.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
const Default$6 = {
  trapElement: null,
  // The element to trap focus inside of
  autofocus: true
};
const DefaultType$6 = {
  trapElement: 'element',
  autofocus: 'boolean'
};
const NAME$7 = 'focustrap';
const DATA_KEY$7 = 'bs.focustrap';
const EVENT_KEY$7 = `.${DATA_KEY$7}`;
const EVENT_FOCUSIN$1 = `focusin${EVENT_KEY$7}`;
const EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY$7}`;
const TAB_KEY = 'Tab';
const TAB_NAV_FORWARD = 'forward';
const TAB_NAV_BACKWARD = 'backward';

class FocusTrap {
  constructor(config) {
    this._config = this._getConfig(config);
    this._isActive = false;
    this._lastTabNavDirection = null;
  }

  activate() {
    const {
      trapElement,
      autofocus
    } = this._config;

    if (this._isActive) {
      return;
    }

    if (autofocus) {
      trapElement.focus();
    }

    EventHandler.off(document, EVENT_KEY$7); // guard against infinite focus loop

    EventHandler.on(document, EVENT_FOCUSIN$1, event => this._handleFocusin(event));
    EventHandler.on(document, EVENT_KEYDOWN_TAB, event => this._handleKeydown(event));
    this._isActive = true;
  }

  deactivate() {
    if (!this._isActive) {
      return;
    }

    this._isActive = false;
    EventHandler.off(document, EVENT_KEY$7);
  } // Private


  _handleFocusin(event) {
    const {
      target
    } = event;
    const {
      trapElement
    } = this._config;

    if (target === document || target === trapElement || trapElement.contains(target)) {
      return;
    }

    const elements = SelectorEngine.focusableChildren(trapElement);

    if (elements.length === 0) {
      trapElement.focus();
    } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {
      elements[elements.length - 1].focus();
    } else {
      elements[0].focus();
    }
  }

  _handleKeydown(event) {
    if (event.key !== TAB_KEY) {
      return;
    }

    this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD;
  }

  _getConfig(config) {
    config = { ...Default$6,
      ...(typeof config === 'object' ? config : {})
    };
    typeCheckConfig(NAME$7, config, DefaultType$6);
    return config;
  }

}

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): modal.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$6 = 'modal';
const DATA_KEY$6 = 'bs.modal';
const EVENT_KEY$6 = `.${DATA_KEY$6}`;
const DATA_API_KEY$3 = '.data-api';
const ESCAPE_KEY$1 = 'Escape';
const Default$5 = {
  backdrop: true,
  keyboard: true,
  focus: true
};
const DefaultType$5 = {
  backdrop: '(boolean|string)',
  keyboard: 'boolean',
  focus: 'boolean'
};
const EVENT_HIDE$3 = `hide${EVENT_KEY$6}`;
const EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY$6}`;
const EVENT_HIDDEN$3 = `hidden${EVENT_KEY$6}`;
const EVENT_SHOW$3 = `show${EVENT_KEY$6}`;
const EVENT_SHOWN$3 = `shown${EVENT_KEY$6}`;
const EVENT_RESIZE = `resize${EVENT_KEY$6}`;
const EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY$6}`;
const EVENT_KEYDOWN_DISMISS$1 = `keydown.dismiss${EVENT_KEY$6}`;
const EVENT_MOUSEUP_DISMISS = `mouseup.dismiss${EVENT_KEY$6}`;
const EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY$6}`;
const EVENT_CLICK_DATA_API$2 = `click${EVENT_KEY$6}${DATA_API_KEY$3}`;
const CLASS_NAME_OPEN = 'modal-open';
const CLASS_NAME_FADE$3 = 'fade';
const CLASS_NAME_SHOW$4 = 'show';
const CLASS_NAME_STATIC = 'modal-static';
const OPEN_SELECTOR$1 = '.modal.show';
const SELECTOR_DIALOG = '.modal-dialog';
const SELECTOR_MODAL_BODY = '.modal-body';
const SELECTOR_DATA_TOGGLE$2 = '[data-bs-toggle="modal"]';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Modal extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._config = this._getConfig(config);
    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element);
    this._backdrop = this._initializeBackDrop();
    this._focustrap = this._initializeFocusTrap();
    this._isShown = false;
    this._ignoreBackdropClick = false;
    this._isTransitioning = false;
    this._scrollBar = new ScrollBarHelper();
  } // Getters


  static get Default() {
    return Default$5;
  }

  static get NAME() {
    return NAME$6;
  } // Public


  toggle(relatedTarget) {
    return this._isShown ? this.hide() : this.show(relatedTarget);
  }

  show(relatedTarget) {
    if (this._isShown || this._isTransitioning) {
      return;
    }

    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$3, {
      relatedTarget
    });

    if (showEvent.defaultPrevented) {
      return;
    }

    this._isShown = true;

    if (this._isAnimated()) {
      this._isTransitioning = true;
    }

    this._scrollBar.hide();

    document.body.classList.add(CLASS_NAME_OPEN);

    this._adjustDialog();

    this._setEscapeEvent();

    this._setResizeEvent();

    EventHandler.on(this._dialog, EVENT_MOUSEDOWN_DISMISS, () => {
      EventHandler.one(this._element, EVENT_MOUSEUP_DISMISS, event => {
        if (event.target === this._element) {
          this._ignoreBackdropClick = true;
        }
      });
    });

    this._showBackdrop(() => this._showElement(relatedTarget));
  }

  hide() {
    if (!this._isShown || this._isTransitioning) {
      return;
    }

    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$3);

    if (hideEvent.defaultPrevented) {
      return;
    }

    this._isShown = false;

    const isAnimated = this._isAnimated();

    if (isAnimated) {
      this._isTransitioning = true;
    }

    this._setEscapeEvent();

    this._setResizeEvent();

    this._focustrap.deactivate();

    this._element.classList.remove(CLASS_NAME_SHOW$4);

    EventHandler.off(this._element, EVENT_CLICK_DISMISS);
    EventHandler.off(this._dialog, EVENT_MOUSEDOWN_DISMISS);

    this._queueCallback(() => this._hideModal(), this._element, isAnimated);
  }

  dispose() {
    [window, this._dialog].forEach(htmlElement => EventHandler.off(htmlElement, EVENT_KEY$6));

    this._backdrop.dispose();

    this._focustrap.deactivate();

    super.dispose();
  }

  handleUpdate() {
    this._adjustDialog();
  } // Private


  _initializeBackDrop() {
    return new Backdrop({
      isVisible: Boolean(this._config.backdrop),
      // 'static' option will be translated to true, and booleans will keep their value
      isAnimated: this._isAnimated()
    });
  }

  _initializeFocusTrap() {
    return new FocusTrap({
      trapElement: this._element
    });
  }

  _getConfig(config) {
    config = { ...Default$5,
      ...Manipulator.getDataAttributes(this._element),
      ...(typeof config === 'object' ? config : {})
    };
    typeCheckConfig(NAME$6, config, DefaultType$5);
    return config;
  }

  _showElement(relatedTarget) {
    const isAnimated = this._isAnimated();

    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog);

    if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
      // Don't move modal's DOM position
      document.body.append(this._element);
    }

    this._element.style.display = 'block';

    this._element.removeAttribute('aria-hidden');

    this._element.setAttribute('aria-modal', true);

    this._element.setAttribute('role', 'dialog');

    this._element.scrollTop = 0;

    if (modalBody) {
      modalBody.scrollTop = 0;
    }

    if (isAnimated) {
      reflow(this._element);
    }

    this._element.classList.add(CLASS_NAME_SHOW$4);

    const transitionComplete = () => {
      if (this._config.focus) {
        this._focustrap.activate();
      }

      this._isTransitioning = false;
      EventHandler.trigger(this._element, EVENT_SHOWN$3, {
        relatedTarget
      });
    };

    this._queueCallback(transitionComplete, this._dialog, isAnimated);
  }

  _setEscapeEvent() {
    if (this._isShown) {
      EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS$1, event => {
        if (this._config.keyboard && event.key === ESCAPE_KEY$1) {
          event.preventDefault();
          this.hide();
        } else if (!this._config.keyboard && event.key === ESCAPE_KEY$1) {
          this._triggerBackdropTransition();
        }
      });
    } else {
      EventHandler.off(this._element, EVENT_KEYDOWN_DISMISS$1);
    }
  }

  _setResizeEvent() {
    if (this._isShown) {
      EventHandler.on(window, EVENT_RESIZE, () => this._adjustDialog());
    } else {
      EventHandler.off(window, EVENT_RESIZE);
    }
  }

  _hideModal() {
    this._element.style.display = 'none';

    this._element.setAttribute('aria-hidden', true);

    this._element.removeAttribute('aria-modal');

    this._element.removeAttribute('role');

    this._isTransitioning = false;

    this._backdrop.hide(() => {
      document.body.classList.remove(CLASS_NAME_OPEN);

      this._resetAdjustments();

      this._scrollBar.reset();

      EventHandler.trigger(this._element, EVENT_HIDDEN$3);
    });
  }

  _showBackdrop(callback) {
    EventHandler.on(this._element, EVENT_CLICK_DISMISS, event => {
      if (this._ignoreBackdropClick) {
        this._ignoreBackdropClick = false;
        return;
      }

      if (event.target !== event.currentTarget) {
        return;
      }

      if (this._config.backdrop === true) {
        this.hide();
      } else if (this._config.backdrop === 'static') {
        this._triggerBackdropTransition();
      }
    });

    this._backdrop.show(callback);
  }

  _isAnimated() {
    return this._element.classList.contains(CLASS_NAME_FADE$3);
  }

  _triggerBackdropTransition() {
    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED);

    if (hideEvent.defaultPrevented) {
      return;
    }

    const {
      classList,
      scrollHeight,
      style
    } = this._element;
    const isModalOverflowing = scrollHeight > document.documentElement.clientHeight; // return if the following background transition hasn't yet completed

    if (!isModalOverflowing && style.overflowY === 'hidden' || classList.contains(CLASS_NAME_STATIC)) {
      return;
    }

    if (!isModalOverflowing) {
      style.overflowY = 'hidden';
    }

    classList.add(CLASS_NAME_STATIC);

    this._queueCallback(() => {
      classList.remove(CLASS_NAME_STATIC);

      if (!isModalOverflowing) {
        this._queueCallback(() => {
          style.overflowY = '';
        }, this._dialog);
      }
    }, this._dialog);

    this._element.focus();
  } // ----------------------------------------------------------------------
  // the following methods are used to handle overflowing modals
  // ----------------------------------------------------------------------


  _adjustDialog() {
    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;

    const scrollbarWidth = this._scrollBar.getWidth();

    const isBodyOverflowing = scrollbarWidth > 0;

    if (!isBodyOverflowing && isModalOverflowing && !isRTL() || isBodyOverflowing && !isModalOverflowing && isRTL()) {
      this._element.style.paddingLeft = `${scrollbarWidth}px`;
    }

    if (isBodyOverflowing && !isModalOverflowing && !isRTL() || !isBodyOverflowing && isModalOverflowing && isRTL()) {
      this._element.style.paddingRight = `${scrollbarWidth}px`;
    }
  }

  _resetAdjustments() {
    this._element.style.paddingLeft = '';
    this._element.style.paddingRight = '';
  } // Static


  static jQueryInterface(config, relatedTarget) {
    return this.each(function () {
      const data = Modal.getOrCreateInstance(this, config);

      if (typeof config !== 'string') {
        return;
      }

      if (typeof data[config] === 'undefined') {
        throw new TypeError(`No method named "${config}"`);
      }

      data[config](relatedTarget);
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_CLICK_DATA_API$2, SELECTOR_DATA_TOGGLE$2, function (event) {
  const target = getElementFromSelector(this);

  if (['A', 'AREA'].includes(this.tagName)) {
    event.preventDefault();
  }

  EventHandler.one(target, EVENT_SHOW$3, showEvent => {
    if (showEvent.defaultPrevented) {
      // only register focus restorer if modal will actually get shown
      return;
    }

    EventHandler.one(target, EVENT_HIDDEN$3, () => {
      if (isVisible(this)) {
        this.focus();
      }
    });
  }); // avoid conflict when clicking moddal toggler while another one is open

  const allReadyOpen = SelectorEngine.findOne(OPEN_SELECTOR$1);

  if (allReadyOpen) {
    Modal.getInstance(allReadyOpen).hide();
  }

  const data = Modal.getOrCreateInstance(target);
  data.toggle(this);
});
enableDismissTrigger(Modal);
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Modal to jQuery only if jQuery is present
 */

defineJQueryPlugin(Modal);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): offcanvas.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$5 = 'offcanvas';
const DATA_KEY$5 = 'bs.offcanvas';
const EVENT_KEY$5 = `.${DATA_KEY$5}`;
const DATA_API_KEY$2 = '.data-api';
const EVENT_LOAD_DATA_API$1 = `load${EVENT_KEY$5}${DATA_API_KEY$2}`;
const ESCAPE_KEY = 'Escape';
const Default$4 = {
  backdrop: true,
  keyboard: true,
  scroll: false
};
const DefaultType$4 = {
  backdrop: 'boolean',
  keyboard: 'boolean',
  scroll: 'boolean'
};
const CLASS_NAME_SHOW$3 = 'show';
const CLASS_NAME_BACKDROP = 'offcanvas-backdrop';
const OPEN_SELECTOR = '.offcanvas.show';
const EVENT_SHOW$2 = `show${EVENT_KEY$5}`;
const EVENT_SHOWN$2 = `shown${EVENT_KEY$5}`;
const EVENT_HIDE$2 = `hide${EVENT_KEY$5}`;
const EVENT_HIDDEN$2 = `hidden${EVENT_KEY$5}`;
const EVENT_CLICK_DATA_API$1 = `click${EVENT_KEY$5}${DATA_API_KEY$2}`;
const EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY$5}`;
const SELECTOR_DATA_TOGGLE$1 = '[data-bs-toggle="offcanvas"]';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Offcanvas extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._config = this._getConfig(config);
    this._isShown = false;
    this._backdrop = this._initializeBackDrop();
    this._focustrap = this._initializeFocusTrap();

    this._addEventListeners();
  } // Getters


  static get NAME() {
    return NAME$5;
  }

  static get Default() {
    return Default$4;
  } // Public


  toggle(relatedTarget) {
    return this._isShown ? this.hide() : this.show(relatedTarget);
  }

  show(relatedTarget) {
    if (this._isShown) {
      return;
    }

    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$2, {
      relatedTarget
    });

    if (showEvent.defaultPrevented) {
      return;
    }

    this._isShown = true;
    this._element.style.visibility = 'visible';

    this._backdrop.show();

    if (!this._config.scroll) {
      new ScrollBarHelper().hide();
    }

    this._element.removeAttribute('aria-hidden');

    this._element.setAttribute('aria-modal', true);

    this._element.setAttribute('role', 'dialog');

    this._element.classList.add(CLASS_NAME_SHOW$3);

    const completeCallBack = () => {
      if (!this._config.scroll) {
        this._focustrap.activate();
      }

      EventHandler.trigger(this._element, EVENT_SHOWN$2, {
        relatedTarget
      });
    };

    this._queueCallback(completeCallBack, this._element, true);
  }

  hide() {
    if (!this._isShown) {
      return;
    }

    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$2);

    if (hideEvent.defaultPrevented) {
      return;
    }

    this._focustrap.deactivate();

    this._element.blur();

    this._isShown = false;

    this._element.classList.remove(CLASS_NAME_SHOW$3);

    this._backdrop.hide();

    const completeCallback = () => {
      this._element.setAttribute('aria-hidden', true);

      this._element.removeAttribute('aria-modal');

      this._element.removeAttribute('role');

      this._element.style.visibility = 'hidden';

      if (!this._config.scroll) {
        new ScrollBarHelper().reset();
      }

      EventHandler.trigger(this._element, EVENT_HIDDEN$2);
    };

    this._queueCallback(completeCallback, this._element, true);
  }

  dispose() {
    this._backdrop.dispose();

    this._focustrap.deactivate();

    super.dispose();
  } // Private


  _getConfig(config) {
    config = { ...Default$4,
      ...Manipulator.getDataAttributes(this._element),
      ...(typeof config === 'object' ? config : {})
    };
    typeCheckConfig(NAME$5, config, DefaultType$4);
    return config;
  }

  _initializeBackDrop() {
    return new Backdrop({
      className: CLASS_NAME_BACKDROP,
      isVisible: this._config.backdrop,
      isAnimated: true,
      rootElement: this._element.parentNode,
      clickCallback: () => this.hide()
    });
  }

  _initializeFocusTrap() {
    return new FocusTrap({
      trapElement: this._element
    });
  }

  _addEventListeners() {
    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {
      if (this._config.keyboard && event.key === ESCAPE_KEY) {
        this.hide();
      }
    });
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Offcanvas.getOrCreateInstance(this, config);

      if (typeof config !== 'string') {
        return;
      }

      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {
        throw new TypeError(`No method named "${config}"`);
      }

      data[config](this);
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_CLICK_DATA_API$1, SELECTOR_DATA_TOGGLE$1, function (event) {
  const target = getElementFromSelector(this);

  if (['A', 'AREA'].includes(this.tagName)) {
    event.preventDefault();
  }

  if (isDisabled(this)) {
    return;
  }

  EventHandler.one(target, EVENT_HIDDEN$2, () => {
    // focus on trigger when it is closed
    if (isVisible(this)) {
      this.focus();
    }
  }); // avoid conflict when clicking a toggler of an offcanvas, while another is open

  const allReadyOpen = SelectorEngine.findOne(OPEN_SELECTOR);

  if (allReadyOpen && allReadyOpen !== target) {
    Offcanvas.getInstance(allReadyOpen).hide();
  }

  const data = Offcanvas.getOrCreateInstance(target);
  data.toggle(this);
});
EventHandler.on(window, EVENT_LOAD_DATA_API$1, () => SelectorEngine.find(OPEN_SELECTOR).forEach(el => Offcanvas.getOrCreateInstance(el).show()));
enableDismissTrigger(Offcanvas);
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 */

defineJQueryPlugin(Offcanvas);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): util/sanitizer.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
const uriAttributes = new Set(['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href']);
const ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;
/**
 * A pattern that recognizes a commonly useful subset of URLs that are safe.
 *
 * Shoutout to Angular https://github.com/angular/angular/blob/12.2.x/packages/core/src/sanitization/url_sanitizer.ts
 */

const SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i;
/**
 * A pattern that matches safe data URLs. Only matches image, video and audio types.
 *
 * Shoutout to Angular https://github.com/angular/angular/blob/12.2.x/packages/core/src/sanitization/url_sanitizer.ts
 */

const DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;

const allowedAttribute = (attribute, allowedAttributeList) => {
  const attributeName = attribute.nodeName.toLowerCase();

  if (allowedAttributeList.includes(attributeName)) {
    if (uriAttributes.has(attributeName)) {
      return Boolean(SAFE_URL_PATTERN.test(attribute.nodeValue) || DATA_URL_PATTERN.test(attribute.nodeValue));
    }

    return true;
  }

  const regExp = allowedAttributeList.filter(attributeRegex => attributeRegex instanceof RegExp); // Check if a regular expression validates the attribute.

  for (let i = 0, len = regExp.length; i < len; i++) {
    if (regExp[i].test(attributeName)) {
      return true;
    }
  }

  return false;
};

const DefaultAllowlist = {
  // Global attributes allowed on any supplied element below.
  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],
  a: ['target', 'href', 'title', 'rel'],
  area: [],
  b: [],
  br: [],
  col: [],
  code: [],
  div: [],
  em: [],
  hr: [],
  h1: [],
  h2: [],
  h3: [],
  h4: [],
  h5: [],
  h6: [],
  i: [],
  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],
  li: [],
  ol: [],
  p: [],
  pre: [],
  s: [],
  small: [],
  span: [],
  sub: [],
  sup: [],
  strong: [],
  u: [],
  ul: []
};
function sanitizeHtml(unsafeHtml, allowList, sanitizeFn) {
  if (!unsafeHtml.length) {
    return unsafeHtml;
  }

  if (sanitizeFn && typeof sanitizeFn === 'function') {
    return sanitizeFn(unsafeHtml);
  }

  const domParser = new window.DOMParser();
  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');
  const elements = [].concat(...createdDocument.body.querySelectorAll('*'));

  for (let i = 0, len = elements.length; i < len; i++) {
    const element = elements[i];
    const elementName = element.nodeName.toLowerCase();

    if (!Object.keys(allowList).includes(elementName)) {
      element.remove();
      continue;
    }

    const attributeList = [].concat(...element.attributes);
    const allowedAttributes = [].concat(allowList['*'] || [], allowList[elementName] || []);
    attributeList.forEach(attribute => {
      if (!allowedAttribute(attribute, allowedAttributes)) {
        element.removeAttribute(attribute.nodeName);
      }
    });
  }

  return createdDocument.body.innerHTML;
}

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): tooltip.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$4 = 'tooltip';
const DATA_KEY$4 = 'bs.tooltip';
const EVENT_KEY$4 = `.${DATA_KEY$4}`;
const CLASS_PREFIX$1 = 'bs-tooltip';
const DISALLOWED_ATTRIBUTES = new Set(['sanitize', 'allowList', 'sanitizeFn']);
const DefaultType$3 = {
  animation: 'boolean',
  template: 'string',
  title: '(string|element|function)',
  trigger: 'string',
  delay: '(number|object)',
  html: 'boolean',
  selector: '(string|boolean)',
  placement: '(string|function)',
  offset: '(array|string|function)',
  container: '(string|element|boolean)',
  fallbackPlacements: 'array',
  boundary: '(string|element)',
  customClass: '(string|function)',
  sanitize: 'boolean',
  sanitizeFn: '(null|function)',
  allowList: 'object',
  popperConfig: '(null|object|function)'
};
const AttachmentMap = {
  AUTO: 'auto',
  TOP: 'top',
  RIGHT: isRTL() ? 'left' : 'right',
  BOTTOM: 'bottom',
  LEFT: isRTL() ? 'right' : 'left'
};
const Default$3 = {
  animation: true,
  template: '<div class="tooltip" role="tooltip">' + '<div class="tooltip-arrow"></div>' + '<div class="tooltip-inner"></div>' + '</div>',
  trigger: 'hover focus',
  title: '',
  delay: 0,
  html: false,
  selector: false,
  placement: 'top',
  offset: [0, 0],
  container: false,
  fallbackPlacements: ['top', 'right', 'bottom', 'left'],
  boundary: 'clippingParents',
  customClass: '',
  sanitize: true,
  sanitizeFn: null,
  allowList: DefaultAllowlist,
  popperConfig: null
};
const Event$2 = {
  HIDE: `hide${EVENT_KEY$4}`,
  HIDDEN: `hidden${EVENT_KEY$4}`,
  SHOW: `show${EVENT_KEY$4}`,
  SHOWN: `shown${EVENT_KEY$4}`,
  INSERTED: `inserted${EVENT_KEY$4}`,
  CLICK: `click${EVENT_KEY$4}`,
  FOCUSIN: `focusin${EVENT_KEY$4}`,
  FOCUSOUT: `focusout${EVENT_KEY$4}`,
  MOUSEENTER: `mouseenter${EVENT_KEY$4}`,
  MOUSELEAVE: `mouseleave${EVENT_KEY$4}`
};
const CLASS_NAME_FADE$2 = 'fade';
const CLASS_NAME_MODAL = 'modal';
const CLASS_NAME_SHOW$2 = 'show';
const HOVER_STATE_SHOW = 'show';
const HOVER_STATE_OUT = 'out';
const SELECTOR_TOOLTIP_INNER = '.tooltip-inner';
const SELECTOR_MODAL = `.${CLASS_NAME_MODAL}`;
const EVENT_MODAL_HIDE = 'hide.bs.modal';
const TRIGGER_HOVER = 'hover';
const TRIGGER_FOCUS = 'focus';
const TRIGGER_CLICK = 'click';
const TRIGGER_MANUAL = 'manual';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Tooltip extends BaseComponent {
  constructor(element, config) {
    if (typeof _popperjs_core__WEBPACK_IMPORTED_MODULE_0__ === 'undefined') {
      throw new TypeError('Bootstrap\'s tooltips require Popper (https://popper.js.org)');
    }

    super(element); // private

    this._isEnabled = true;
    this._timeout = 0;
    this._hoverState = '';
    this._activeTrigger = {};
    this._popper = null; // Protected

    this._config = this._getConfig(config);
    this.tip = null;

    this._setListeners();
  } // Getters


  static get Default() {
    return Default$3;
  }

  static get NAME() {
    return NAME$4;
  }

  static get Event() {
    return Event$2;
  }

  static get DefaultType() {
    return DefaultType$3;
  } // Public


  enable() {
    this._isEnabled = true;
  }

  disable() {
    this._isEnabled = false;
  }

  toggleEnabled() {
    this._isEnabled = !this._isEnabled;
  }

  toggle(event) {
    if (!this._isEnabled) {
      return;
    }

    if (event) {
      const context = this._initializeOnDelegatedTarget(event);

      context._activeTrigger.click = !context._activeTrigger.click;

      if (context._isWithActiveTrigger()) {
        context._enter(null, context);
      } else {
        context._leave(null, context);
      }
    } else {
      if (this.getTipElement().classList.contains(CLASS_NAME_SHOW$2)) {
        this._leave(null, this);

        return;
      }

      this._enter(null, this);
    }
  }

  dispose() {
    clearTimeout(this._timeout);
    EventHandler.off(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);

    if (this.tip) {
      this.tip.remove();
    }

    this._disposePopper();

    super.dispose();
  }

  show() {
    if (this._element.style.display === 'none') {
      throw new Error('Please use show on visible elements');
    }

    if (!(this.isWithContent() && this._isEnabled)) {
      return;
    }

    const showEvent = EventHandler.trigger(this._element, this.constructor.Event.SHOW);
    const shadowRoot = findShadowRoot(this._element);
    const isInTheDom = shadowRoot === null ? this._element.ownerDocument.documentElement.contains(this._element) : shadowRoot.contains(this._element);

    if (showEvent.defaultPrevented || !isInTheDom) {
      return;
    } // A trick to recreate a tooltip in case a new title is given by using the NOT documented `data-bs-original-title`
    // This will be removed later in favor of a `setContent` method


    if (this.constructor.NAME === 'tooltip' && this.tip && this.getTitle() !== this.tip.querySelector(SELECTOR_TOOLTIP_INNER).innerHTML) {
      this._disposePopper();

      this.tip.remove();
      this.tip = null;
    }

    const tip = this.getTipElement();
    const tipId = getUID(this.constructor.NAME);
    tip.setAttribute('id', tipId);

    this._element.setAttribute('aria-describedby', tipId);

    if (this._config.animation) {
      tip.classList.add(CLASS_NAME_FADE$2);
    }

    const placement = typeof this._config.placement === 'function' ? this._config.placement.call(this, tip, this._element) : this._config.placement;

    const attachment = this._getAttachment(placement);

    this._addAttachmentClass(attachment);

    const {
      container
    } = this._config;
    Data.set(tip, this.constructor.DATA_KEY, this);

    if (!this._element.ownerDocument.documentElement.contains(this.tip)) {
      container.append(tip);
      EventHandler.trigger(this._element, this.constructor.Event.INSERTED);
    }

    if (this._popper) {
      this._popper.update();
    } else {
      this._popper = _popperjs_core__WEBPACK_IMPORTED_MODULE_1__.createPopper(this._element, tip, this._getPopperConfig(attachment));
    }

    tip.classList.add(CLASS_NAME_SHOW$2);

    const customClass = this._resolvePossibleFunction(this._config.customClass);

    if (customClass) {
      tip.classList.add(...customClass.split(' '));
    } // If this is a touch-enabled device we add extra
    // empty mouseover listeners to the body's immediate children;
    // only needed because of broken event delegation on iOS
    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html


    if ('ontouchstart' in document.documentElement) {
      [].concat(...document.body.children).forEach(element => {
        EventHandler.on(element, 'mouseover', noop);
      });
    }

    const complete = () => {
      const prevHoverState = this._hoverState;
      this._hoverState = null;
      EventHandler.trigger(this._element, this.constructor.Event.SHOWN);

      if (prevHoverState === HOVER_STATE_OUT) {
        this._leave(null, this);
      }
    };

    const isAnimated = this.tip.classList.contains(CLASS_NAME_FADE$2);

    this._queueCallback(complete, this.tip, isAnimated);
  }

  hide() {
    if (!this._popper) {
      return;
    }

    const tip = this.getTipElement();

    const complete = () => {
      if (this._isWithActiveTrigger()) {
        return;
      }

      if (this._hoverState !== HOVER_STATE_SHOW) {
        tip.remove();
      }

      this._cleanTipClass();

      this._element.removeAttribute('aria-describedby');

      EventHandler.trigger(this._element, this.constructor.Event.HIDDEN);

      this._disposePopper();
    };

    const hideEvent = EventHandler.trigger(this._element, this.constructor.Event.HIDE);

    if (hideEvent.defaultPrevented) {
      return;
    }

    tip.classList.remove(CLASS_NAME_SHOW$2); // If this is a touch-enabled device we remove the extra
    // empty mouseover listeners we added for iOS support

    if ('ontouchstart' in document.documentElement) {
      [].concat(...document.body.children).forEach(element => EventHandler.off(element, 'mouseover', noop));
    }

    this._activeTrigger[TRIGGER_CLICK] = false;
    this._activeTrigger[TRIGGER_FOCUS] = false;
    this._activeTrigger[TRIGGER_HOVER] = false;
    const isAnimated = this.tip.classList.contains(CLASS_NAME_FADE$2);

    this._queueCallback(complete, this.tip, isAnimated);

    this._hoverState = '';
  }

  update() {
    if (this._popper !== null) {
      this._popper.update();
    }
  } // Protected


  isWithContent() {
    return Boolean(this.getTitle());
  }

  getTipElement() {
    if (this.tip) {
      return this.tip;
    }

    const element = document.createElement('div');
    element.innerHTML = this._config.template;
    const tip = element.children[0];
    this.setContent(tip);
    tip.classList.remove(CLASS_NAME_FADE$2, CLASS_NAME_SHOW$2);
    this.tip = tip;
    return this.tip;
  }

  setContent(tip) {
    this._sanitizeAndSetContent(tip, this.getTitle(), SELECTOR_TOOLTIP_INNER);
  }

  _sanitizeAndSetContent(template, content, selector) {
    const templateElement = SelectorEngine.findOne(selector, template);

    if (!content && templateElement) {
      templateElement.remove();
      return;
    } // we use append for html objects to maintain js events


    this.setElementContent(templateElement, content);
  }

  setElementContent(element, content) {
    if (element === null) {
      return;
    }

    if (isElement(content)) {
      content = getElement(content); // content is a DOM node or a jQuery

      if (this._config.html) {
        if (content.parentNode !== element) {
          element.innerHTML = '';
          element.append(content);
        }
      } else {
        element.textContent = content.textContent;
      }

      return;
    }

    if (this._config.html) {
      if (this._config.sanitize) {
        content = sanitizeHtml(content, this._config.allowList, this._config.sanitizeFn);
      }

      element.innerHTML = content;
    } else {
      element.textContent = content;
    }
  }

  getTitle() {
    const title = this._element.getAttribute('data-bs-original-title') || this._config.title;

    return this._resolvePossibleFunction(title);
  }

  updateAttachment(attachment) {
    if (attachment === 'right') {
      return 'end';
    }

    if (attachment === 'left') {
      return 'start';
    }

    return attachment;
  } // Private


  _initializeOnDelegatedTarget(event, context) {
    return context || this.constructor.getOrCreateInstance(event.delegateTarget, this._getDelegateConfig());
  }

  _getOffset() {
    const {
      offset
    } = this._config;

    if (typeof offset === 'string') {
      return offset.split(',').map(val => Number.parseInt(val, 10));
    }

    if (typeof offset === 'function') {
      return popperData => offset(popperData, this._element);
    }

    return offset;
  }

  _resolvePossibleFunction(content) {
    return typeof content === 'function' ? content.call(this._element) : content;
  }

  _getPopperConfig(attachment) {
    const defaultBsPopperConfig = {
      placement: attachment,
      modifiers: [{
        name: 'flip',
        options: {
          fallbackPlacements: this._config.fallbackPlacements
        }
      }, {
        name: 'offset',
        options: {
          offset: this._getOffset()
        }
      }, {
        name: 'preventOverflow',
        options: {
          boundary: this._config.boundary
        }
      }, {
        name: 'arrow',
        options: {
          element: `.${this.constructor.NAME}-arrow`
        }
      }, {
        name: 'onChange',
        enabled: true,
        phase: 'afterWrite',
        fn: data => this._handlePopperPlacementChange(data)
      }],
      onFirstUpdate: data => {
        if (data.options.placement !== data.placement) {
          this._handlePopperPlacementChange(data);
        }
      }
    };
    return { ...defaultBsPopperConfig,
      ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)
    };
  }

  _addAttachmentClass(attachment) {
    this.getTipElement().classList.add(`${this._getBasicClassPrefix()}-${this.updateAttachment(attachment)}`);
  }

  _getAttachment(placement) {
    return AttachmentMap[placement.toUpperCase()];
  }

  _setListeners() {
    const triggers = this._config.trigger.split(' ');

    triggers.forEach(trigger => {
      if (trigger === 'click') {
        EventHandler.on(this._element, this.constructor.Event.CLICK, this._config.selector, event => this.toggle(event));
      } else if (trigger !== TRIGGER_MANUAL) {
        const eventIn = trigger === TRIGGER_HOVER ? this.constructor.Event.MOUSEENTER : this.constructor.Event.FOCUSIN;
        const eventOut = trigger === TRIGGER_HOVER ? this.constructor.Event.MOUSELEAVE : this.constructor.Event.FOCUSOUT;
        EventHandler.on(this._element, eventIn, this._config.selector, event => this._enter(event));
        EventHandler.on(this._element, eventOut, this._config.selector, event => this._leave(event));
      }
    });

    this._hideModalHandler = () => {
      if (this._element) {
        this.hide();
      }
    };

    EventHandler.on(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);

    if (this._config.selector) {
      this._config = { ...this._config,
        trigger: 'manual',
        selector: ''
      };
    } else {
      this._fixTitle();
    }
  }

  _fixTitle() {
    const title = this._element.getAttribute('title');

    const originalTitleType = typeof this._element.getAttribute('data-bs-original-title');

    if (title || originalTitleType !== 'string') {
      this._element.setAttribute('data-bs-original-title', title || '');

      if (title && !this._element.getAttribute('aria-label') && !this._element.textContent) {
        this._element.setAttribute('aria-label', title);
      }

      this._element.setAttribute('title', '');
    }
  }

  _enter(event, context) {
    context = this._initializeOnDelegatedTarget(event, context);

    if (event) {
      context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;
    }

    if (context.getTipElement().classList.contains(CLASS_NAME_SHOW$2) || context._hoverState === HOVER_STATE_SHOW) {
      context._hoverState = HOVER_STATE_SHOW;
      return;
    }

    clearTimeout(context._timeout);
    context._hoverState = HOVER_STATE_SHOW;

    if (!context._config.delay || !context._config.delay.show) {
      context.show();
      return;
    }

    context._timeout = setTimeout(() => {
      if (context._hoverState === HOVER_STATE_SHOW) {
        context.show();
      }
    }, context._config.delay.show);
  }

  _leave(event, context) {
    context = this._initializeOnDelegatedTarget(event, context);

    if (event) {
      context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] = context._element.contains(event.relatedTarget);
    }

    if (context._isWithActiveTrigger()) {
      return;
    }

    clearTimeout(context._timeout);
    context._hoverState = HOVER_STATE_OUT;

    if (!context._config.delay || !context._config.delay.hide) {
      context.hide();
      return;
    }

    context._timeout = setTimeout(() => {
      if (context._hoverState === HOVER_STATE_OUT) {
        context.hide();
      }
    }, context._config.delay.hide);
  }

  _isWithActiveTrigger() {
    for (const trigger in this._activeTrigger) {
      if (this._activeTrigger[trigger]) {
        return true;
      }
    }

    return false;
  }

  _getConfig(config) {
    const dataAttributes = Manipulator.getDataAttributes(this._element);
    Object.keys(dataAttributes).forEach(dataAttr => {
      if (DISALLOWED_ATTRIBUTES.has(dataAttr)) {
        delete dataAttributes[dataAttr];
      }
    });
    config = { ...this.constructor.Default,
      ...dataAttributes,
      ...(typeof config === 'object' && config ? config : {})
    };
    config.container = config.container === false ? document.body : getElement(config.container);

    if (typeof config.delay === 'number') {
      config.delay = {
        show: config.delay,
        hide: config.delay
      };
    }

    if (typeof config.title === 'number') {
      config.title = config.title.toString();
    }

    if (typeof config.content === 'number') {
      config.content = config.content.toString();
    }

    typeCheckConfig(NAME$4, config, this.constructor.DefaultType);

    if (config.sanitize) {
      config.template = sanitizeHtml(config.template, config.allowList, config.sanitizeFn);
    }

    return config;
  }

  _getDelegateConfig() {
    const config = {};

    for (const key in this._config) {
      if (this.constructor.Default[key] !== this._config[key]) {
        config[key] = this._config[key];
      }
    } // In the future can be replaced with:
    // const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])
    // `Object.fromEntries(keysWithDifferentValues)`


    return config;
  }

  _cleanTipClass() {
    const tip = this.getTipElement();
    const basicClassPrefixRegex = new RegExp(`(^|\\s)${this._getBasicClassPrefix()}\\S+`, 'g');
    const tabClass = tip.getAttribute('class').match(basicClassPrefixRegex);

    if (tabClass !== null && tabClass.length > 0) {
      tabClass.map(token => token.trim()).forEach(tClass => tip.classList.remove(tClass));
    }
  }

  _getBasicClassPrefix() {
    return CLASS_PREFIX$1;
  }

  _handlePopperPlacementChange(popperData) {
    const {
      state
    } = popperData;

    if (!state) {
      return;
    }

    this.tip = state.elements.popper;

    this._cleanTipClass();

    this._addAttachmentClass(this._getAttachment(state.placement));
  }

  _disposePopper() {
    if (this._popper) {
      this._popper.destroy();

      this._popper = null;
    }
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Tooltip.getOrCreateInstance(this, config);

      if (typeof config === 'string') {
        if (typeof data[config] === 'undefined') {
          throw new TypeError(`No method named "${config}"`);
        }

        data[config]();
      }
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Tooltip to jQuery only if jQuery is present
 */


defineJQueryPlugin(Tooltip);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): popover.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$3 = 'popover';
const DATA_KEY$3 = 'bs.popover';
const EVENT_KEY$3 = `.${DATA_KEY$3}`;
const CLASS_PREFIX = 'bs-popover';
const Default$2 = { ...Tooltip.Default,
  placement: 'right',
  offset: [0, 8],
  trigger: 'click',
  content: '',
  template: '<div class="popover" role="tooltip">' + '<div class="popover-arrow"></div>' + '<h3 class="popover-header"></h3>' + '<div class="popover-body"></div>' + '</div>'
};
const DefaultType$2 = { ...Tooltip.DefaultType,
  content: '(string|element|function)'
};
const Event$1 = {
  HIDE: `hide${EVENT_KEY$3}`,
  HIDDEN: `hidden${EVENT_KEY$3}`,
  SHOW: `show${EVENT_KEY$3}`,
  SHOWN: `shown${EVENT_KEY$3}`,
  INSERTED: `inserted${EVENT_KEY$3}`,
  CLICK: `click${EVENT_KEY$3}`,
  FOCUSIN: `focusin${EVENT_KEY$3}`,
  FOCUSOUT: `focusout${EVENT_KEY$3}`,
  MOUSEENTER: `mouseenter${EVENT_KEY$3}`,
  MOUSELEAVE: `mouseleave${EVENT_KEY$3}`
};
const SELECTOR_TITLE = '.popover-header';
const SELECTOR_CONTENT = '.popover-body';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Popover extends Tooltip {
  // Getters
  static get Default() {
    return Default$2;
  }

  static get NAME() {
    return NAME$3;
  }

  static get Event() {
    return Event$1;
  }

  static get DefaultType() {
    return DefaultType$2;
  } // Overrides


  isWithContent() {
    return this.getTitle() || this._getContent();
  }

  setContent(tip) {
    this._sanitizeAndSetContent(tip, this.getTitle(), SELECTOR_TITLE);

    this._sanitizeAndSetContent(tip, this._getContent(), SELECTOR_CONTENT);
  } // Private


  _getContent() {
    return this._resolvePossibleFunction(this._config.content);
  }

  _getBasicClassPrefix() {
    return CLASS_PREFIX;
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Popover.getOrCreateInstance(this, config);

      if (typeof config === 'string') {
        if (typeof data[config] === 'undefined') {
          throw new TypeError(`No method named "${config}"`);
        }

        data[config]();
      }
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Popover to jQuery only if jQuery is present
 */


defineJQueryPlugin(Popover);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): scrollspy.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$2 = 'scrollspy';
const DATA_KEY$2 = 'bs.scrollspy';
const EVENT_KEY$2 = `.${DATA_KEY$2}`;
const DATA_API_KEY$1 = '.data-api';
const Default$1 = {
  offset: 10,
  method: 'auto',
  target: ''
};
const DefaultType$1 = {
  offset: 'number',
  method: 'string',
  target: '(string|element)'
};
const EVENT_ACTIVATE = `activate${EVENT_KEY$2}`;
const EVENT_SCROLL = `scroll${EVENT_KEY$2}`;
const EVENT_LOAD_DATA_API = `load${EVENT_KEY$2}${DATA_API_KEY$1}`;
const CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';
const CLASS_NAME_ACTIVE$1 = 'active';
const SELECTOR_DATA_SPY = '[data-bs-spy="scroll"]';
const SELECTOR_NAV_LIST_GROUP$1 = '.nav, .list-group';
const SELECTOR_NAV_LINKS = '.nav-link';
const SELECTOR_NAV_ITEMS = '.nav-item';
const SELECTOR_LIST_ITEMS = '.list-group-item';
const SELECTOR_LINK_ITEMS = `${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}, .${CLASS_NAME_DROPDOWN_ITEM}`;
const SELECTOR_DROPDOWN$1 = '.dropdown';
const SELECTOR_DROPDOWN_TOGGLE$1 = '.dropdown-toggle';
const METHOD_OFFSET = 'offset';
const METHOD_POSITION = 'position';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class ScrollSpy extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._scrollElement = this._element.tagName === 'BODY' ? window : this._element;
    this._config = this._getConfig(config);
    this._offsets = [];
    this._targets = [];
    this._activeTarget = null;
    this._scrollHeight = 0;
    EventHandler.on(this._scrollElement, EVENT_SCROLL, () => this._process());
    this.refresh();

    this._process();
  } // Getters


  static get Default() {
    return Default$1;
  }

  static get NAME() {
    return NAME$2;
  } // Public


  refresh() {
    const autoMethod = this._scrollElement === this._scrollElement.window ? METHOD_OFFSET : METHOD_POSITION;
    const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;
    const offsetBase = offsetMethod === METHOD_POSITION ? this._getScrollTop() : 0;
    this._offsets = [];
    this._targets = [];
    this._scrollHeight = this._getScrollHeight();
    const targets = SelectorEngine.find(SELECTOR_LINK_ITEMS, this._config.target);
    targets.map(element => {
      const targetSelector = getSelectorFromElement(element);
      const target = targetSelector ? SelectorEngine.findOne(targetSelector) : null;

      if (target) {
        const targetBCR = target.getBoundingClientRect();

        if (targetBCR.width || targetBCR.height) {
          return [Manipulator[offsetMethod](target).top + offsetBase, targetSelector];
        }
      }

      return null;
    }).filter(item => item).sort((a, b) => a[0] - b[0]).forEach(item => {
      this._offsets.push(item[0]);

      this._targets.push(item[1]);
    });
  }

  dispose() {
    EventHandler.off(this._scrollElement, EVENT_KEY$2);
    super.dispose();
  } // Private


  _getConfig(config) {
    config = { ...Default$1,
      ...Manipulator.getDataAttributes(this._element),
      ...(typeof config === 'object' && config ? config : {})
    };
    config.target = getElement(config.target) || document.documentElement;
    typeCheckConfig(NAME$2, config, DefaultType$1);
    return config;
  }

  _getScrollTop() {
    return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
  }

  _getScrollHeight() {
    return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
  }

  _getOffsetHeight() {
    return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
  }

  _process() {
    const scrollTop = this._getScrollTop() + this._config.offset;

    const scrollHeight = this._getScrollHeight();

    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();

    if (this._scrollHeight !== scrollHeight) {
      this.refresh();
    }

    if (scrollTop >= maxScroll) {
      const target = this._targets[this._targets.length - 1];

      if (this._activeTarget !== target) {
        this._activate(target);
      }

      return;
    }

    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {
      this._activeTarget = null;

      this._clear();

      return;
    }

    for (let i = this._offsets.length; i--;) {
      const isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);

      if (isActiveTarget) {
        this._activate(this._targets[i]);
      }
    }
  }

  _activate(target) {
    this._activeTarget = target;

    this._clear();

    const queries = SELECTOR_LINK_ITEMS.split(',').map(selector => `${selector}[data-bs-target="${target}"],${selector}[href="${target}"]`);
    const link = SelectorEngine.findOne(queries.join(','), this._config.target);
    link.classList.add(CLASS_NAME_ACTIVE$1);

    if (link.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {
      SelectorEngine.findOne(SELECTOR_DROPDOWN_TOGGLE$1, link.closest(SELECTOR_DROPDOWN$1)).classList.add(CLASS_NAME_ACTIVE$1);
    } else {
      SelectorEngine.parents(link, SELECTOR_NAV_LIST_GROUP$1).forEach(listGroup => {
        // Set triggered links parents as active
        // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor
        SelectorEngine.prev(listGroup, `${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`).forEach(item => item.classList.add(CLASS_NAME_ACTIVE$1)); // Handle special case when .nav-link is inside .nav-item

        SelectorEngine.prev(listGroup, SELECTOR_NAV_ITEMS).forEach(navItem => {
          SelectorEngine.children(navItem, SELECTOR_NAV_LINKS).forEach(item => item.classList.add(CLASS_NAME_ACTIVE$1));
        });
      });
    }

    EventHandler.trigger(this._scrollElement, EVENT_ACTIVATE, {
      relatedTarget: target
    });
  }

  _clear() {
    SelectorEngine.find(SELECTOR_LINK_ITEMS, this._config.target).filter(node => node.classList.contains(CLASS_NAME_ACTIVE$1)).forEach(node => node.classList.remove(CLASS_NAME_ACTIVE$1));
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = ScrollSpy.getOrCreateInstance(this, config);

      if (typeof config !== 'string') {
        return;
      }

      if (typeof data[config] === 'undefined') {
        throw new TypeError(`No method named "${config}"`);
      }

      data[config]();
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(window, EVENT_LOAD_DATA_API, () => {
  SelectorEngine.find(SELECTOR_DATA_SPY).forEach(spy => new ScrollSpy(spy));
});
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .ScrollSpy to jQuery only if jQuery is present
 */

defineJQueryPlugin(ScrollSpy);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): tab.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$1 = 'tab';
const DATA_KEY$1 = 'bs.tab';
const EVENT_KEY$1 = `.${DATA_KEY$1}`;
const DATA_API_KEY = '.data-api';
const EVENT_HIDE$1 = `hide${EVENT_KEY$1}`;
const EVENT_HIDDEN$1 = `hidden${EVENT_KEY$1}`;
const EVENT_SHOW$1 = `show${EVENT_KEY$1}`;
const EVENT_SHOWN$1 = `shown${EVENT_KEY$1}`;
const EVENT_CLICK_DATA_API = `click${EVENT_KEY$1}${DATA_API_KEY}`;
const CLASS_NAME_DROPDOWN_MENU = 'dropdown-menu';
const CLASS_NAME_ACTIVE = 'active';
const CLASS_NAME_FADE$1 = 'fade';
const CLASS_NAME_SHOW$1 = 'show';
const SELECTOR_DROPDOWN = '.dropdown';
const SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';
const SELECTOR_ACTIVE = '.active';
const SELECTOR_ACTIVE_UL = ':scope > li > .active';
const SELECTOR_DATA_TOGGLE = '[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]';
const SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';
const SELECTOR_DROPDOWN_ACTIVE_CHILD = ':scope > .dropdown-menu .active';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Tab extends BaseComponent {
  // Getters
  static get NAME() {
    return NAME$1;
  } // Public


  show() {
    if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && this._element.classList.contains(CLASS_NAME_ACTIVE)) {
      return;
    }

    let previous;
    const target = getElementFromSelector(this._element);

    const listElement = this._element.closest(SELECTOR_NAV_LIST_GROUP);

    if (listElement) {
      const itemSelector = listElement.nodeName === 'UL' || listElement.nodeName === 'OL' ? SELECTOR_ACTIVE_UL : SELECTOR_ACTIVE;
      previous = SelectorEngine.find(itemSelector, listElement);
      previous = previous[previous.length - 1];
    }

    const hideEvent = previous ? EventHandler.trigger(previous, EVENT_HIDE$1, {
      relatedTarget: this._element
    }) : null;
    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$1, {
      relatedTarget: previous
    });

    if (showEvent.defaultPrevented || hideEvent !== null && hideEvent.defaultPrevented) {
      return;
    }

    this._activate(this._element, listElement);

    const complete = () => {
      EventHandler.trigger(previous, EVENT_HIDDEN$1, {
        relatedTarget: this._element
      });
      EventHandler.trigger(this._element, EVENT_SHOWN$1, {
        relatedTarget: previous
      });
    };

    if (target) {
      this._activate(target, target.parentNode, complete);
    } else {
      complete();
    }
  } // Private


  _activate(element, container, callback) {
    const activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL') ? SelectorEngine.find(SELECTOR_ACTIVE_UL, container) : SelectorEngine.children(container, SELECTOR_ACTIVE);
    const active = activeElements[0];
    const isTransitioning = callback && active && active.classList.contains(CLASS_NAME_FADE$1);

    const complete = () => this._transitionComplete(element, active, callback);

    if (active && isTransitioning) {
      active.classList.remove(CLASS_NAME_SHOW$1);

      this._queueCallback(complete, element, true);
    } else {
      complete();
    }
  }

  _transitionComplete(element, active, callback) {
    if (active) {
      active.classList.remove(CLASS_NAME_ACTIVE);
      const dropdownChild = SelectorEngine.findOne(SELECTOR_DROPDOWN_ACTIVE_CHILD, active.parentNode);

      if (dropdownChild) {
        dropdownChild.classList.remove(CLASS_NAME_ACTIVE);
      }

      if (active.getAttribute('role') === 'tab') {
        active.setAttribute('aria-selected', false);
      }
    }

    element.classList.add(CLASS_NAME_ACTIVE);

    if (element.getAttribute('role') === 'tab') {
      element.setAttribute('aria-selected', true);
    }

    reflow(element);

    if (element.classList.contains(CLASS_NAME_FADE$1)) {
      element.classList.add(CLASS_NAME_SHOW$1);
    }

    let parent = element.parentNode;

    if (parent && parent.nodeName === 'LI') {
      parent = parent.parentNode;
    }

    if (parent && parent.classList.contains(CLASS_NAME_DROPDOWN_MENU)) {
      const dropdownElement = element.closest(SELECTOR_DROPDOWN);

      if (dropdownElement) {
        SelectorEngine.find(SELECTOR_DROPDOWN_TOGGLE, dropdownElement).forEach(dropdown => dropdown.classList.add(CLASS_NAME_ACTIVE));
      }

      element.setAttribute('aria-expanded', true);
    }

    if (callback) {
      callback();
    }
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Tab.getOrCreateInstance(this);

      if (typeof config === 'string') {
        if (typeof data[config] === 'undefined') {
          throw new TypeError(`No method named "${config}"`);
        }

        data[config]();
      }
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {
  if (['A', 'AREA'].includes(this.tagName)) {
    event.preventDefault();
  }

  if (isDisabled(this)) {
    return;
  }

  const data = Tab.getOrCreateInstance(this);
  data.show();
});
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Tab to jQuery only if jQuery is present
 */

defineJQueryPlugin(Tab);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): toast.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME = 'toast';
const DATA_KEY = 'bs.toast';
const EVENT_KEY = `.${DATA_KEY}`;
const EVENT_MOUSEOVER = `mouseover${EVENT_KEY}`;
const EVENT_MOUSEOUT = `mouseout${EVENT_KEY}`;
const EVENT_FOCUSIN = `focusin${EVENT_KEY}`;
const EVENT_FOCUSOUT = `focusout${EVENT_KEY}`;
const EVENT_HIDE = `hide${EVENT_KEY}`;
const EVENT_HIDDEN = `hidden${EVENT_KEY}`;
const EVENT_SHOW = `show${EVENT_KEY}`;
const EVENT_SHOWN = `shown${EVENT_KEY}`;
const CLASS_NAME_FADE = 'fade';
const CLASS_NAME_HIDE = 'hide'; // @deprecated - kept here only for backwards compatibility

const CLASS_NAME_SHOW = 'show';
const CLASS_NAME_SHOWING = 'showing';
const DefaultType = {
  animation: 'boolean',
  autohide: 'boolean',
  delay: 'number'
};
const Default = {
  animation: true,
  autohide: true,
  delay: 5000
};
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Toast extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._config = this._getConfig(config);
    this._timeout = null;
    this._hasMouseInteraction = false;
    this._hasKeyboardInteraction = false;

    this._setListeners();
  } // Getters


  static get DefaultType() {
    return DefaultType;
  }

  static get Default() {
    return Default;
  }

  static get NAME() {
    return NAME;
  } // Public


  show() {
    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW);

    if (showEvent.defaultPrevented) {
      return;
    }

    this._clearTimeout();

    if (this._config.animation) {
      this._element.classList.add(CLASS_NAME_FADE);
    }

    const complete = () => {
      this._element.classList.remove(CLASS_NAME_SHOWING);

      EventHandler.trigger(this._element, EVENT_SHOWN);

      this._maybeScheduleHide();
    };

    this._element.classList.remove(CLASS_NAME_HIDE); // @deprecated


    reflow(this._element);

    this._element.classList.add(CLASS_NAME_SHOW);

    this._element.classList.add(CLASS_NAME_SHOWING);

    this._queueCallback(complete, this._element, this._config.animation);
  }

  hide() {
    if (!this._element.classList.contains(CLASS_NAME_SHOW)) {
      return;
    }

    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE);

    if (hideEvent.defaultPrevented) {
      return;
    }

    const complete = () => {
      this._element.classList.add(CLASS_NAME_HIDE); // @deprecated


      this._element.classList.remove(CLASS_NAME_SHOWING);

      this._element.classList.remove(CLASS_NAME_SHOW);

      EventHandler.trigger(this._element, EVENT_HIDDEN);
    };

    this._element.classList.add(CLASS_NAME_SHOWING);

    this._queueCallback(complete, this._element, this._config.animation);
  }

  dispose() {
    this._clearTimeout();

    if (this._element.classList.contains(CLASS_NAME_SHOW)) {
      this._element.classList.remove(CLASS_NAME_SHOW);
    }

    super.dispose();
  } // Private


  _getConfig(config) {
    config = { ...Default,
      ...Manipulator.getDataAttributes(this._element),
      ...(typeof config === 'object' && config ? config : {})
    };
    typeCheckConfig(NAME, config, this.constructor.DefaultType);
    return config;
  }

  _maybeScheduleHide() {
    if (!this._config.autohide) {
      return;
    }

    if (this._hasMouseInteraction || this._hasKeyboardInteraction) {
      return;
    }

    this._timeout = setTimeout(() => {
      this.hide();
    }, this._config.delay);
  }

  _onInteraction(event, isInteracting) {
    switch (event.type) {
      case 'mouseover':
      case 'mouseout':
        this._hasMouseInteraction = isInteracting;
        break;

      case 'focusin':
      case 'focusout':
        this._hasKeyboardInteraction = isInteracting;
        break;
    }

    if (isInteracting) {
      this._clearTimeout();

      return;
    }

    const nextElement = event.relatedTarget;

    if (this._element === nextElement || this._element.contains(nextElement)) {
      return;
    }

    this._maybeScheduleHide();
  }

  _setListeners() {
    EventHandler.on(this._element, EVENT_MOUSEOVER, event => this._onInteraction(event, true));
    EventHandler.on(this._element, EVENT_MOUSEOUT, event => this._onInteraction(event, false));
    EventHandler.on(this._element, EVENT_FOCUSIN, event => this._onInteraction(event, true));
    EventHandler.on(this._element, EVENT_FOCUSOUT, event => this._onInteraction(event, false));
  }

  _clearTimeout() {
    clearTimeout(this._timeout);
    this._timeout = null;
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Toast.getOrCreateInstance(this, config);

      if (typeof config === 'string') {
        if (typeof data[config] === 'undefined') {
          throw new TypeError(`No method named "${config}"`);
        }

        data[config](this);
      }
    });
  }

}

enableDismissTrigger(Toast);
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Toast to jQuery only if jQuery is present
 */

defineJQueryPlugin(Toast);


//# sourceMappingURL=bootstrap.esm.js.map


/***/ }),

/***/ "./src/morse/components/flaggedWordsAccordion/flaggedWordsAccordion.html":
/*!*******************************************************************************!*\
  !*** ./src/morse/components/flaggedWordsAccordion/flaggedWordsAccordion.html ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Module
var code = "<!-- ko with: vm -->\n<h2 class=\"accordion-header\" id=\"headingTwo\">\n    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\"\n        aria-expanded=\"false\" aria-controls=\"collapseTwo\" id=\"btnFlaggedWordsAccordianButton\">\n        <img height=20 width=20 data-bind=\"attr:{src: morseLoadImages().getSrc('flagImage') }\" /><span>&nbsp;</span>\n        Flagged words (click words you missed in the word list to toggle adding them\n        here)<span>&nbsp;</span><span class=\"badge bg-success\" data-bind=\"text: flaggedWords.flaggedWordsCount\"></span>\n    </button>\n</h2>\n<div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\">\n    <div class=\"accordion-body\">\n        <div class=\"input-group\">\n            <span id=\"btnSetFlagged\" class=\"input-group-text\" data-bind=\"click:setFlagged\"><img height=\"20\" width=\"20\"\n                    data-bind=\"attr:{src: morseLoadImages().getSrc('uploadImage')}\">&nbsp;Load\n                As\n                Text</span>\n            <textarea data-bind=\"textInput: flaggedWords.flaggedWords\" class=\"form-control\"\n                aria-label=\"Text\"></textarea>\n\n        </div>\n    </div>\n</div>\n<!-- /ko -->";
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);

/***/ }),

/***/ "./src/morse/components/morseImage/simpleImageTemplate.html":
/*!******************************************************************!*\
  !*** ./src/morse/components/morseImage/simpleImageTemplate.html ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Module
var code = "<img data-bind=\"attr:{ src: src, height: height, width: width}\" style=\"vertical-align: middle;\"></span>";
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);

/***/ }),

/***/ "./src/morse/components/noiseAccordion/noiseAccordion.html":
/*!*****************************************************************!*\
  !*** ./src/morse/components/noiseAccordion/noiseAccordion.html ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Module
var code = "<!-- ko with: vm -->\n<!-- noise -->\n<!-- <div class=\"accordion-item\" data-bind=\"if: noiseEnabled() && showExpertSettings()\"> -->\n<h2 class=\"accordion-header\" id=\"headingNoise\">\n    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseNoise\"\n        aria-expanded=\"false\" aria-controls=\"collapseNoise\">\n        <img data-bind=\"attr:{ src: morseLoadImages().getSrc('soundwaveImage')}\" height=\"20\" width=\"20\">&nbsp;Noise\n        (Experimental)\n    </button>\n</h2>\n<div id=\"collapseNoise\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingNoise\">\n    <div class=\"accordion-body\">\n        <div class=\"row row-cols-2 gy-2 gx-2\">\n            <div class=\"col-auto\">\n                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\">\n                    <input type=\"radio\" class=\"btn-check\" value='off' name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\"\n                        data-bind=\"checked: noiseType\">\n                    <label class=\"btn btn-outline-primary\" for=\"btnradio1\">Off</label>\n\n                    <input type=\"radio\" class=\"btn-check\" value='white' name=\"btnradio\" id=\"btnradio2\"\n                        autocomplete=\"off\" data-bind=\"checked: noiseType\">\n                    <label class=\"btn btn-outline-info\" for=\"btnradio2\">White</label>\n\n                    <input type=\"radio\" class=\"btn-check\" value='brown' name=\"btnradio\" id=\"btnradio3\"\n                        autocomplete=\"off\" data-bind=\"checked: noiseType\">\n                    <label class=\"btn btn-outline-secondary\" for=\"btnradio3\">Brown</label>\n\n                    <input type=\"radio\" class=\"btn-check\" value='pink' name=\"btnradio\" id=\"btnradio4\" autocomplete=\"off\"\n                        data-bind=\"checked: noiseType\">\n                    <label class=\"btn btn-outline-danger\" for=\"btnradio4\">Pink</label>\n                </div>\n\n            </div>\n            <div class=\"col-auto\">\n                <div class=\"input-group\">\n                    <span class=\"input-group-text\"><img height=\"20\" with=\"20\"\n                            data-bind=\"attr: {src: morseLoadImages().getSrc('volumeImage')}\"></span>\n                    <input type=\"number\" class=\"form-control\" aria-label=\"Server\" min=\"1\" max=\"10\" step=\"1\"\n                        data-bind=\"textInput: noiseVolume\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- </div> -->\n<!-- /ko -->";
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);

/***/ }),

/***/ "./src/morse/components/rssAccordion/rssAccordion.html":
/*!*************************************************************!*\
  !*** ./src/morse/components/rssAccordion/rssAccordion.html ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Module
var code = "<!-- ko with: vm -->\n<h2 class=\"accordion-header\" id=\"headingOne\">\n    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\"\n        aria-expanded=\"false\" aria-controls=\"collapseOne\" id=\"btnRssAccordionButton\">\n        <span>\n            <img data-bind=\"attr:{ src: morseLoadImages().getSrc('rssImage')}\" height=\"20\" width=\"20\">&nbsp;RSS\n            (Experimental, and you will need a proxy)\n            <span>&nbsp;</span><span class=\"badge bg-success\"\n                data-bind=\"class: rss.rssPollingOn() ? 'bg-success' : 'bg-danger', text: rss.rssPollingOn() ? rss.pollRssButtonText : 'No Polling'\"></span>\n            <span class=\"badge bg-success\" data-bind=\"text: 'Unread:&nbsp;' + rss.unreadRssCount()\"></span>\n            <span class=\"badge\"\n                data-bind=\"class: rss.rssPlayOn() ? 'bg-success' : 'bg-danger',text: rss.rssPlayOn() ? (!rss.rssPlayWaitingBadgeText() ? 'Playing...' : rss.rssPlayWaitingBadgeText())  : 'Play Off' \"></span>\n        </span>\n    </button>\n</h2>\n<div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\">\n    <div class=\"accordion-body\">\n        <div class=\"row row-cols-3 gy-2 gx-2\">\n            <div class=\"col-auto\">\n                <div class=\"input-group-vertical\">\n                    <span class=\"input-group-text\">RSS Url</span>\n                    <input type=\"text\" data-bind=\"textInput: rss.rssFeedUrl\" class=\"form-control\" aria-label=\"RSS\"\n                        style=\"width:300px;\">\n                    <span class=\"input-group-text\">Proxy Url</span>\n                    <input type=\"text\" data-bind=\"textInput: rss.proxydUrl\" class=\"form-control\" aria-label=\"Proxy\">\n\n\n                </div>\n            </div>\n            <div class=\"col-auto\" style=\"width:75px;\">\n                <div class=\"input-group-vertical\">\n                    <span class=\"input-group-text\">\n\n                        Poll&nbsp;<img data-bind=\"attr:{ src: morseLoadImages().getSrc('hourglassImage')}\" height=\"15\"\n                            width=\"15\"></span>\n                    <input type=\"number\" data-bind=\"textInput: rss.rssPollMins\" class=\"form-control\" aria-label=\"Poll\">\n                    <span class=\"input-group-text\">Play&nbsp;<img\n                            data-bind=\"attr:{ src: morseLoadImages().getSrc('hourglassImage')}\" height=\"15\"\n                            width=\"15\"></span>\n                    <input type=\"number\" data-bind=\"textInput: rss.rssPlayMins\" class=\"form-control\" aria-label=\"Play\">\n                </div>\n            </div>\n            <div class=\"col-auto\">\n                <div class=\"btn-toolbar\" role=\"toolbar\">\n\n                    <button type=\"button\" class=\"btn btn-success\"\n                        data-bind=\"text: rss.pollRssButtonText, click: rss.doRSS\"></button>\n                    <button type=\"button\" class=\"btn btn-secondary\"\n                        data-bind=\"text: rss.playRssButtonText, click: rss.doRssPlay\"></button>\n                    <button type=\"button\" class=\"btn btn-danger\" data-bind=\"click: rss.doRSSReset\">Mark\n                        All Read</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- /ko -->";
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);

/***/ }),

/***/ "./node_modules/knockout/build/output/knockout-latest.js":
/*!***************************************************************!*\
  !*** ./node_modules/knockout/build/output/knockout-latest.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * Knockout JavaScript library v3.5.1
 * (c) The Knockout.js team - http://knockoutjs.com/
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */

(function() {(function(n){var A=this||(0,eval)("this"),w=A.document,R=A.navigator,v=A.jQuery,H=A.JSON;v||"undefined"===typeof jQuery||(v=jQuery);(function(n){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports,__webpack_require__], __WEBPACK_AMD_DEFINE_FACTORY__ = (n),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0})(function(S,T){function K(a,c){return null===a||typeof a in W?a===c:!1}function X(b,c){var d;return function(){d||(d=a.a.setTimeout(function(){d=n;b()},c))}}function Y(b,c){var d;return function(){clearTimeout(d);
d=a.a.setTimeout(b,c)}}function Z(a,c){c&&"change"!==c?"beforeChange"===c?this.pc(a):this.gb(a,c):this.qc(a)}function aa(a,c){null!==c&&c.s&&c.s()}function ba(a,c){var d=this.qd,e=d[r];e.ra||(this.Qb&&this.mb[c]?(d.uc(c,a,this.mb[c]),this.mb[c]=null,--this.Qb):e.I[c]||d.uc(c,a,e.J?{da:a}:d.$c(a)),a.Ja&&a.gd())}var a="undefined"!==typeof S?S:{};a.b=function(b,c){for(var d=b.split("."),e=a,f=0;f<d.length-1;f++)e=e[d[f]];e[d[d.length-1]]=c};a.L=function(a,c,d){a[c]=d};a.version="3.5.1";a.b("version",
a.version);a.options={deferUpdates:!1,useOnlyNativeEvents:!1,foreachHidesDestroyed:!1};a.a=function(){function b(a,b){for(var c in a)f.call(a,c)&&b(c,a[c])}function c(a,b){if(b)for(var c in b)f.call(b,c)&&(a[c]=b[c]);return a}function d(a,b){a.__proto__=b;return a}function e(b,c,d,e){var l=b[c].match(q)||[];a.a.D(d.match(q),function(b){a.a.Na(l,b,e)});b[c]=l.join(" ")}var f=Object.prototype.hasOwnProperty,g={__proto__:[]}instanceof Array,h="function"===typeof Symbol,m={},k={};m[R&&/Firefox\/2/i.test(R.userAgent)?
"KeyboardEvent":"UIEvents"]=["keyup","keydown","keypress"];m.MouseEvents="click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave".split(" ");b(m,function(a,b){if(b.length)for(var c=0,d=b.length;c<d;c++)k[b[c]]=a});var l={propertychange:!0},p=w&&function(){for(var a=3,b=w.createElement("div"),c=b.getElementsByTagName("i");b.innerHTML="\x3c!--[if gt IE "+ ++a+"]><i></i><![endif]--\x3e",c[0];);return 4<a?a:n}(),q=/\S+/g,t;return{Jc:["authenticity_token",/^__RequestVerificationToken(_.*)?$/],
D:function(a,b,c){for(var d=0,e=a.length;d<e;d++)b.call(c,a[d],d,a)},A:"function"==typeof Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b)}:function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},Lb:function(a,b,c){for(var d=0,e=a.length;d<e;d++)if(b.call(c,a[d],d,a))return a[d];return n},Pa:function(b,c){var d=a.a.A(b,c);0<d?b.splice(d,1):0===d&&b.shift()},wc:function(b){var c=[];b&&a.a.D(b,function(b){0>a.a.A(c,b)&&c.push(b)});return c},Mb:function(a,
b,c){var d=[];if(a)for(var e=0,l=a.length;e<l;e++)d.push(b.call(c,a[e],e));return d},jb:function(a,b,c){var d=[];if(a)for(var e=0,l=a.length;e<l;e++)b.call(c,a[e],e)&&d.push(a[e]);return d},Nb:function(a,b){if(b instanceof Array)a.push.apply(a,b);else for(var c=0,d=b.length;c<d;c++)a.push(b[c]);return a},Na:function(b,c,d){var e=a.a.A(a.a.bc(b),c);0>e?d&&b.push(c):d||b.splice(e,1)},Ba:g,extend:c,setPrototypeOf:d,Ab:g?d:c,P:b,Ga:function(a,b,c){if(!a)return a;var d={},e;for(e in a)f.call(a,e)&&(d[e]=
b.call(c,a[e],e,a));return d},Tb:function(b){for(;b.firstChild;)a.removeNode(b.firstChild)},Yb:function(b){b=a.a.la(b);for(var c=(b[0]&&b[0].ownerDocument||w).createElement("div"),d=0,e=b.length;d<e;d++)c.appendChild(a.oa(b[d]));return c},Ca:function(b,c){for(var d=0,e=b.length,l=[];d<e;d++){var k=b[d].cloneNode(!0);l.push(c?a.oa(k):k)}return l},va:function(b,c){a.a.Tb(b);if(c)for(var d=0,e=c.length;d<e;d++)b.appendChild(c[d])},Xc:function(b,c){var d=b.nodeType?[b]:b;if(0<d.length){for(var e=d[0],
l=e.parentNode,k=0,f=c.length;k<f;k++)l.insertBefore(c[k],e);k=0;for(f=d.length;k<f;k++)a.removeNode(d[k])}},Ua:function(a,b){if(a.length){for(b=8===b.nodeType&&b.parentNode||b;a.length&&a[0].parentNode!==b;)a.splice(0,1);for(;1<a.length&&a[a.length-1].parentNode!==b;)a.length--;if(1<a.length){var c=a[0],d=a[a.length-1];for(a.length=0;c!==d;)a.push(c),c=c.nextSibling;a.push(d)}}return a},Zc:function(a,b){7>p?a.setAttribute("selected",b):a.selected=b},Db:function(a){return null===a||a===n?"":a.trim?
a.trim():a.toString().replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},Ud:function(a,b){a=a||"";return b.length>a.length?!1:a.substring(0,b.length)===b},vd:function(a,b){if(a===b)return!0;if(11===a.nodeType)return!1;if(b.contains)return b.contains(1!==a.nodeType?a.parentNode:a);if(b.compareDocumentPosition)return 16==(b.compareDocumentPosition(a)&16);for(;a&&a!=b;)a=a.parentNode;return!!a},Sb:function(b){return a.a.vd(b,b.ownerDocument.documentElement)},kd:function(b){return!!a.a.Lb(b,a.a.Sb)},R:function(a){return a&&
a.tagName&&a.tagName.toLowerCase()},Ac:function(b){return a.onError?function(){try{return b.apply(this,arguments)}catch(c){throw a.onError&&a.onError(c),c;}}:b},setTimeout:function(b,c){return setTimeout(a.a.Ac(b),c)},Gc:function(b){setTimeout(function(){a.onError&&a.onError(b);throw b;},0)},B:function(b,c,d){var e=a.a.Ac(d);d=l[c];if(a.options.useOnlyNativeEvents||d||!v)if(d||"function"!=typeof b.addEventListener)if("undefined"!=typeof b.attachEvent){var k=function(a){e.call(b,a)},f="on"+c;b.attachEvent(f,
k);a.a.K.za(b,function(){b.detachEvent(f,k)})}else throw Error("Browser doesn't support addEventListener or attachEvent");else b.addEventListener(c,e,!1);else t||(t="function"==typeof v(b).on?"on":"bind"),v(b)[t](c,e)},Fb:function(b,c){if(!b||!b.nodeType)throw Error("element must be a DOM node when calling triggerEvent");var d;"input"===a.a.R(b)&&b.type&&"click"==c.toLowerCase()?(d=b.type,d="checkbox"==d||"radio"==d):d=!1;if(a.options.useOnlyNativeEvents||!v||d)if("function"==typeof w.createEvent)if("function"==
typeof b.dispatchEvent)d=w.createEvent(k[c]||"HTMLEvents"),d.initEvent(c,!0,!0,A,0,0,0,0,0,!1,!1,!1,!1,0,b),b.dispatchEvent(d);else throw Error("The supplied element doesn't support dispatchEvent");else if(d&&b.click)b.click();else if("undefined"!=typeof b.fireEvent)b.fireEvent("on"+c);else throw Error("Browser doesn't support triggering events");else v(b).trigger(c)},f:function(b){return a.O(b)?b():b},bc:function(b){return a.O(b)?b.v():b},Eb:function(b,c,d){var l;c&&("object"===typeof b.classList?
(l=b.classList[d?"add":"remove"],a.a.D(c.match(q),function(a){l.call(b.classList,a)})):"string"===typeof b.className.baseVal?e(b.className,"baseVal",c,d):e(b,"className",c,d))},Bb:function(b,c){var d=a.a.f(c);if(null===d||d===n)d="";var e=a.h.firstChild(b);!e||3!=e.nodeType||a.h.nextSibling(e)?a.h.va(b,[b.ownerDocument.createTextNode(d)]):e.data=d;a.a.Ad(b)},Yc:function(a,b){a.name=b;if(7>=p)try{var c=a.name.replace(/[&<>'"]/g,function(a){return"&#"+a.charCodeAt(0)+";"});a.mergeAttributes(w.createElement("<input name='"+
c+"'/>"),!1)}catch(d){}},Ad:function(a){9<=p&&(a=1==a.nodeType?a:a.parentNode,a.style&&(a.style.zoom=a.style.zoom))},wd:function(a){if(p){var b=a.style.width;a.style.width=0;a.style.width=b}},Pd:function(b,c){b=a.a.f(b);c=a.a.f(c);for(var d=[],e=b;e<=c;e++)d.push(e);return d},la:function(a){for(var b=[],c=0,d=a.length;c<d;c++)b.push(a[c]);return b},Da:function(a){return h?Symbol(a):a},Zd:6===p,$d:7===p,W:p,Lc:function(b,c){for(var d=a.a.la(b.getElementsByTagName("input")).concat(a.a.la(b.getElementsByTagName("textarea"))),
e="string"==typeof c?function(a){return a.name===c}:function(a){return c.test(a.name)},l=[],k=d.length-1;0<=k;k--)e(d[k])&&l.push(d[k]);return l},Nd:function(b){return"string"==typeof b&&(b=a.a.Db(b))?H&&H.parse?H.parse(b):(new Function("return "+b))():null},hc:function(b,c,d){if(!H||!H.stringify)throw Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js");
return H.stringify(a.a.f(b),c,d)},Od:function(c,d,e){e=e||{};var l=e.params||{},k=e.includeFields||this.Jc,f=c;if("object"==typeof c&&"form"===a.a.R(c))for(var f=c.action,h=k.length-1;0<=h;h--)for(var g=a.a.Lc(c,k[h]),m=g.length-1;0<=m;m--)l[g[m].name]=g[m].value;d=a.a.f(d);var p=w.createElement("form");p.style.display="none";p.action=f;p.method="post";for(var q in d)c=w.createElement("input"),c.type="hidden",c.name=q,c.value=a.a.hc(a.a.f(d[q])),p.appendChild(c);b(l,function(a,b){var c=w.createElement("input");
c.type="hidden";c.name=a;c.value=b;p.appendChild(c)});w.body.appendChild(p);e.submitter?e.submitter(p):p.submit();setTimeout(function(){p.parentNode.removeChild(p)},0)}}}();a.b("utils",a.a);a.b("utils.arrayForEach",a.a.D);a.b("utils.arrayFirst",a.a.Lb);a.b("utils.arrayFilter",a.a.jb);a.b("utils.arrayGetDistinctValues",a.a.wc);a.b("utils.arrayIndexOf",a.a.A);a.b("utils.arrayMap",a.a.Mb);a.b("utils.arrayPushAll",a.a.Nb);a.b("utils.arrayRemoveItem",a.a.Pa);a.b("utils.cloneNodes",a.a.Ca);a.b("utils.createSymbolOrString",
a.a.Da);a.b("utils.extend",a.a.extend);a.b("utils.fieldsIncludedWithJsonPost",a.a.Jc);a.b("utils.getFormFields",a.a.Lc);a.b("utils.objectMap",a.a.Ga);a.b("utils.peekObservable",a.a.bc);a.b("utils.postJson",a.a.Od);a.b("utils.parseJson",a.a.Nd);a.b("utils.registerEventHandler",a.a.B);a.b("utils.stringifyJson",a.a.hc);a.b("utils.range",a.a.Pd);a.b("utils.toggleDomNodeCssClass",a.a.Eb);a.b("utils.triggerEvent",a.a.Fb);a.b("utils.unwrapObservable",a.a.f);a.b("utils.objectForEach",a.a.P);a.b("utils.addOrRemoveItem",
a.a.Na);a.b("utils.setTextContent",a.a.Bb);a.b("unwrap",a.a.f);Function.prototype.bind||(Function.prototype.bind=function(a){var c=this;if(1===arguments.length)return function(){return c.apply(a,arguments)};var d=Array.prototype.slice.call(arguments,1);return function(){var e=d.slice(0);e.push.apply(e,arguments);return c.apply(a,e)}});a.a.g=new function(){var b=0,c="__ko__"+(new Date).getTime(),d={},e,f;a.a.W?(e=function(a,e){var f=a[c];if(!f||"null"===f||!d[f]){if(!e)return n;f=a[c]="ko"+b++;d[f]=
{}}return d[f]},f=function(a){var b=a[c];return b?(delete d[b],a[c]=null,!0):!1}):(e=function(a,b){var d=a[c];!d&&b&&(d=a[c]={});return d},f=function(a){return a[c]?(delete a[c],!0):!1});return{get:function(a,b){var c=e(a,!1);return c&&c[b]},set:function(a,b,c){(a=e(a,c!==n))&&(a[b]=c)},Ub:function(a,b,c){a=e(a,!0);return a[b]||(a[b]=c)},clear:f,Z:function(){return b++ +c}}};a.b("utils.domData",a.a.g);a.b("utils.domData.clear",a.a.g.clear);a.a.K=new function(){function b(b,c){var d=a.a.g.get(b,e);
d===n&&c&&(d=[],a.a.g.set(b,e,d));return d}function c(c){var e=b(c,!1);if(e)for(var e=e.slice(0),k=0;k<e.length;k++)e[k](c);a.a.g.clear(c);a.a.K.cleanExternalData(c);g[c.nodeType]&&d(c.childNodes,!0)}function d(b,d){for(var e=[],l,f=0;f<b.length;f++)if(!d||8===b[f].nodeType)if(c(e[e.length]=l=b[f]),b[f]!==l)for(;f--&&-1==a.a.A(e,b[f]););}var e=a.a.g.Z(),f={1:!0,8:!0,9:!0},g={1:!0,9:!0};return{za:function(a,c){if("function"!=typeof c)throw Error("Callback must be a function");b(a,!0).push(c)},yb:function(c,
d){var f=b(c,!1);f&&(a.a.Pa(f,d),0==f.length&&a.a.g.set(c,e,n))},oa:function(b){a.u.G(function(){f[b.nodeType]&&(c(b),g[b.nodeType]&&d(b.getElementsByTagName("*")))});return b},removeNode:function(b){a.oa(b);b.parentNode&&b.parentNode.removeChild(b)},cleanExternalData:function(a){v&&"function"==typeof v.cleanData&&v.cleanData([a])}}};a.oa=a.a.K.oa;a.removeNode=a.a.K.removeNode;a.b("cleanNode",a.oa);a.b("removeNode",a.removeNode);a.b("utils.domNodeDisposal",a.a.K);a.b("utils.domNodeDisposal.addDisposeCallback",
a.a.K.za);a.b("utils.domNodeDisposal.removeDisposeCallback",a.a.K.yb);(function(){var b=[0,"",""],c=[1,"<table>","</table>"],d=[3,"<table><tbody><tr>","</tr></tbody></table>"],e=[1,"<select multiple='multiple'>","</select>"],f={thead:c,tbody:c,tfoot:c,tr:[2,"<table><tbody>","</tbody></table>"],td:d,th:d,option:e,optgroup:e},g=8>=a.a.W;a.a.ua=function(c,d){var e;if(v)if(v.parseHTML)e=v.parseHTML(c,d)||[];else{if((e=v.clean([c],d))&&e[0]){for(var l=e[0];l.parentNode&&11!==l.parentNode.nodeType;)l=l.parentNode;
l.parentNode&&l.parentNode.removeChild(l)}}else{(e=d)||(e=w);var l=e.parentWindow||e.defaultView||A,p=a.a.Db(c).toLowerCase(),q=e.createElement("div"),t;t=(p=p.match(/^(?:\x3c!--.*?--\x3e\s*?)*?<([a-z]+)[\s>]/))&&f[p[1]]||b;p=t[0];t="ignored<div>"+t[1]+c+t[2]+"</div>";"function"==typeof l.innerShiv?q.appendChild(l.innerShiv(t)):(g&&e.body.appendChild(q),q.innerHTML=t,g&&q.parentNode.removeChild(q));for(;p--;)q=q.lastChild;e=a.a.la(q.lastChild.childNodes)}return e};a.a.Md=function(b,c){var d=a.a.ua(b,
c);return d.length&&d[0].parentElement||a.a.Yb(d)};a.a.fc=function(b,c){a.a.Tb(b);c=a.a.f(c);if(null!==c&&c!==n)if("string"!=typeof c&&(c=c.toString()),v)v(b).html(c);else for(var d=a.a.ua(c,b.ownerDocument),e=0;e<d.length;e++)b.appendChild(d[e])}})();a.b("utils.parseHtmlFragment",a.a.ua);a.b("utils.setHtml",a.a.fc);a.aa=function(){function b(c,e){if(c)if(8==c.nodeType){var f=a.aa.Uc(c.nodeValue);null!=f&&e.push({ud:c,Kd:f})}else if(1==c.nodeType)for(var f=0,g=c.childNodes,h=g.length;f<h;f++)b(g[f],
e)}var c={};return{Xb:function(a){if("function"!=typeof a)throw Error("You can only pass a function to ko.memoization.memoize()");var b=(4294967296*(1+Math.random())|0).toString(16).substring(1)+(4294967296*(1+Math.random())|0).toString(16).substring(1);c[b]=a;return"\x3c!--[ko_memo:"+b+"]--\x3e"},bd:function(a,b){var f=c[a];if(f===n)throw Error("Couldn't find any memo with ID "+a+". Perhaps it's already been unmemoized.");try{return f.apply(null,b||[]),!0}finally{delete c[a]}},cd:function(c,e){var f=
[];b(c,f);for(var g=0,h=f.length;g<h;g++){var m=f[g].ud,k=[m];e&&a.a.Nb(k,e);a.aa.bd(f[g].Kd,k);m.nodeValue="";m.parentNode&&m.parentNode.removeChild(m)}},Uc:function(a){return(a=a.match(/^\[ko_memo\:(.*?)\]$/))?a[1]:null}}}();a.b("memoization",a.aa);a.b("memoization.memoize",a.aa.Xb);a.b("memoization.unmemoize",a.aa.bd);a.b("memoization.parseMemoText",a.aa.Uc);a.b("memoization.unmemoizeDomNodeAndDescendants",a.aa.cd);a.na=function(){function b(){if(f)for(var b=f,c=0,d;h<f;)if(d=e[h++]){if(h>b){if(5E3<=
++c){h=f;a.a.Gc(Error("'Too much recursion' after processing "+c+" task groups."));break}b=f}try{d()}catch(p){a.a.Gc(p)}}}function c(){b();h=f=e.length=0}var d,e=[],f=0,g=1,h=0;A.MutationObserver?d=function(a){var b=w.createElement("div");(new MutationObserver(a)).observe(b,{attributes:!0});return function(){b.classList.toggle("foo")}}(c):d=w&&"onreadystatechange"in w.createElement("script")?function(a){var b=w.createElement("script");b.onreadystatechange=function(){b.onreadystatechange=null;w.documentElement.removeChild(b);
b=null;a()};w.documentElement.appendChild(b)}:function(a){setTimeout(a,0)};return{scheduler:d,zb:function(b){f||a.na.scheduler(c);e[f++]=b;return g++},cancel:function(a){a=a-(g-f);a>=h&&a<f&&(e[a]=null)},resetForTesting:function(){var a=f-h;h=f=e.length=0;return a},Sd:b}}();a.b("tasks",a.na);a.b("tasks.schedule",a.na.zb);a.b("tasks.runEarly",a.na.Sd);a.Ta={throttle:function(b,c){b.throttleEvaluation=c;var d=null;return a.$({read:b,write:function(e){clearTimeout(d);d=a.a.setTimeout(function(){b(e)},
c)}})},rateLimit:function(a,c){var d,e,f;"number"==typeof c?d=c:(d=c.timeout,e=c.method);a.Hb=!1;f="function"==typeof e?e:"notifyWhenChangesStop"==e?Y:X;a.ub(function(a){return f(a,d,c)})},deferred:function(b,c){if(!0!==c)throw Error("The 'deferred' extender only accepts the value 'true', because it is not supported to turn deferral off once enabled.");b.Hb||(b.Hb=!0,b.ub(function(c){var e,f=!1;return function(){if(!f){a.na.cancel(e);e=a.na.zb(c);try{f=!0,b.notifySubscribers(n,"dirty")}finally{f=
!1}}}}))},notify:function(a,c){a.equalityComparer="always"==c?null:K}};var W={undefined:1,"boolean":1,number:1,string:1};a.b("extenders",a.Ta);a.ic=function(b,c,d){this.da=b;this.lc=c;this.mc=d;this.Ib=!1;this.fb=this.Jb=null;a.L(this,"dispose",this.s);a.L(this,"disposeWhenNodeIsRemoved",this.l)};a.ic.prototype.s=function(){this.Ib||(this.fb&&a.a.K.yb(this.Jb,this.fb),this.Ib=!0,this.mc(),this.da=this.lc=this.mc=this.Jb=this.fb=null)};a.ic.prototype.l=function(b){this.Jb=b;a.a.K.za(b,this.fb=this.s.bind(this))};
a.T=function(){a.a.Ab(this,D);D.qb(this)};var D={qb:function(a){a.U={change:[]};a.sc=1},subscribe:function(b,c,d){var e=this;d=d||"change";var f=new a.ic(e,c?b.bind(c):b,function(){a.a.Pa(e.U[d],f);e.hb&&e.hb(d)});e.Qa&&e.Qa(d);e.U[d]||(e.U[d]=[]);e.U[d].push(f);return f},notifySubscribers:function(b,c){c=c||"change";"change"===c&&this.Gb();if(this.Wa(c)){var d="change"===c&&this.ed||this.U[c].slice(0);try{a.u.xc();for(var e=0,f;f=d[e];++e)f.Ib||f.lc(b)}finally{a.u.end()}}},ob:function(){return this.sc},
Dd:function(a){return this.ob()!==a},Gb:function(){++this.sc},ub:function(b){var c=this,d=a.O(c),e,f,g,h,m;c.gb||(c.gb=c.notifySubscribers,c.notifySubscribers=Z);var k=b(function(){c.Ja=!1;d&&h===c&&(h=c.nc?c.nc():c());var a=f||m&&c.sb(g,h);m=f=e=!1;a&&c.gb(g=h)});c.qc=function(a,b){b&&c.Ja||(m=!b);c.ed=c.U.change.slice(0);c.Ja=e=!0;h=a;k()};c.pc=function(a){e||(g=a,c.gb(a,"beforeChange"))};c.rc=function(){m=!0};c.gd=function(){c.sb(g,c.v(!0))&&(f=!0)}},Wa:function(a){return this.U[a]&&this.U[a].length},
Bd:function(b){if(b)return this.U[b]&&this.U[b].length||0;var c=0;a.a.P(this.U,function(a,b){"dirty"!==a&&(c+=b.length)});return c},sb:function(a,c){return!this.equalityComparer||!this.equalityComparer(a,c)},toString:function(){return"[object Object]"},extend:function(b){var c=this;b&&a.a.P(b,function(b,e){var f=a.Ta[b];"function"==typeof f&&(c=f(c,e)||c)});return c}};a.L(D,"init",D.qb);a.L(D,"subscribe",D.subscribe);a.L(D,"extend",D.extend);a.L(D,"getSubscriptionsCount",D.Bd);a.a.Ba&&a.a.setPrototypeOf(D,
Function.prototype);a.T.fn=D;a.Qc=function(a){return null!=a&&"function"==typeof a.subscribe&&"function"==typeof a.notifySubscribers};a.b("subscribable",a.T);a.b("isSubscribable",a.Qc);a.S=a.u=function(){function b(a){d.push(e);e=a}function c(){e=d.pop()}var d=[],e,f=0;return{xc:b,end:c,cc:function(b){if(e){if(!a.Qc(b))throw Error("Only subscribable things can act as dependencies");e.od.call(e.pd,b,b.fd||(b.fd=++f))}},G:function(a,d,e){try{return b(),a.apply(d,e||[])}finally{c()}},qa:function(){if(e)return e.o.qa()},
Va:function(){if(e)return e.o.Va()},Ya:function(){if(e)return e.Ya},o:function(){if(e)return e.o}}}();a.b("computedContext",a.S);a.b("computedContext.getDependenciesCount",a.S.qa);a.b("computedContext.getDependencies",a.S.Va);a.b("computedContext.isInitial",a.S.Ya);a.b("computedContext.registerDependency",a.S.cc);a.b("ignoreDependencies",a.Yd=a.u.G);var I=a.a.Da("_latestValue");a.ta=function(b){function c(){if(0<arguments.length)return c.sb(c[I],arguments[0])&&(c.ya(),c[I]=arguments[0],c.xa()),this;
a.u.cc(c);return c[I]}c[I]=b;a.a.Ba||a.a.extend(c,a.T.fn);a.T.fn.qb(c);a.a.Ab(c,F);a.options.deferUpdates&&a.Ta.deferred(c,!0);return c};var F={equalityComparer:K,v:function(){return this[I]},xa:function(){this.notifySubscribers(this[I],"spectate");this.notifySubscribers(this[I])},ya:function(){this.notifySubscribers(this[I],"beforeChange")}};a.a.Ba&&a.a.setPrototypeOf(F,a.T.fn);var G=a.ta.Ma="__ko_proto__";F[G]=a.ta;a.O=function(b){if((b="function"==typeof b&&b[G])&&b!==F[G]&&b!==a.o.fn[G])throw Error("Invalid object that looks like an observable; possibly from another Knockout instance");
return!!b};a.Za=function(b){return"function"==typeof b&&(b[G]===F[G]||b[G]===a.o.fn[G]&&b.Nc)};a.b("observable",a.ta);a.b("isObservable",a.O);a.b("isWriteableObservable",a.Za);a.b("isWritableObservable",a.Za);a.b("observable.fn",F);a.L(F,"peek",F.v);a.L(F,"valueHasMutated",F.xa);a.L(F,"valueWillMutate",F.ya);a.Ha=function(b){b=b||[];if("object"!=typeof b||!("length"in b))throw Error("The argument passed when initializing an observable array must be an array, or null, or undefined.");b=a.ta(b);a.a.Ab(b,
a.Ha.fn);return b.extend({trackArrayChanges:!0})};a.Ha.fn={remove:function(b){for(var c=this.v(),d=[],e="function"!=typeof b||a.O(b)?function(a){return a===b}:b,f=0;f<c.length;f++){var g=c[f];if(e(g)){0===d.length&&this.ya();if(c[f]!==g)throw Error("Array modified during remove; cannot remove item");d.push(g);c.splice(f,1);f--}}d.length&&this.xa();return d},removeAll:function(b){if(b===n){var c=this.v(),d=c.slice(0);this.ya();c.splice(0,c.length);this.xa();return d}return b?this.remove(function(c){return 0<=
a.a.A(b,c)}):[]},destroy:function(b){var c=this.v(),d="function"!=typeof b||a.O(b)?function(a){return a===b}:b;this.ya();for(var e=c.length-1;0<=e;e--){var f=c[e];d(f)&&(f._destroy=!0)}this.xa()},destroyAll:function(b){return b===n?this.destroy(function(){return!0}):b?this.destroy(function(c){return 0<=a.a.A(b,c)}):[]},indexOf:function(b){var c=this();return a.a.A(c,b)},replace:function(a,c){var d=this.indexOf(a);0<=d&&(this.ya(),this.v()[d]=c,this.xa())},sorted:function(a){var c=this().slice(0);
return a?c.sort(a):c.sort()},reversed:function(){return this().slice(0).reverse()}};a.a.Ba&&a.a.setPrototypeOf(a.Ha.fn,a.ta.fn);a.a.D("pop push reverse shift sort splice unshift".split(" "),function(b){a.Ha.fn[b]=function(){var a=this.v();this.ya();this.zc(a,b,arguments);var d=a[b].apply(a,arguments);this.xa();return d===a?this:d}});a.a.D(["slice"],function(b){a.Ha.fn[b]=function(){var a=this();return a[b].apply(a,arguments)}});a.Pc=function(b){return a.O(b)&&"function"==typeof b.remove&&"function"==
typeof b.push};a.b("observableArray",a.Ha);a.b("isObservableArray",a.Pc);a.Ta.trackArrayChanges=function(b,c){function d(){function c(){if(m){var d=[].concat(b.v()||[]),e;if(b.Wa("arrayChange")){if(!f||1<m)f=a.a.Pb(k,d,b.Ob);e=f}k=d;f=null;m=0;e&&e.length&&b.notifySubscribers(e,"arrayChange")}}e?c():(e=!0,h=b.subscribe(function(){++m},null,"spectate"),k=[].concat(b.v()||[]),f=null,g=b.subscribe(c))}b.Ob={};c&&"object"==typeof c&&a.a.extend(b.Ob,c);b.Ob.sparse=!0;if(!b.zc){var e=!1,f=null,g,h,m=0,
k,l=b.Qa,p=b.hb;b.Qa=function(a){l&&l.call(b,a);"arrayChange"===a&&d()};b.hb=function(a){p&&p.call(b,a);"arrayChange"!==a||b.Wa("arrayChange")||(g&&g.s(),h&&h.s(),h=g=null,e=!1,k=n)};b.zc=function(b,c,d){function l(a,b,c){return k[k.length]={status:a,value:b,index:c}}if(e&&!m){var k=[],p=b.length,g=d.length,h=0;switch(c){case "push":h=p;case "unshift":for(c=0;c<g;c++)l("added",d[c],h+c);break;case "pop":h=p-1;case "shift":p&&l("deleted",b[h],h);break;case "splice":c=Math.min(Math.max(0,0>d[0]?p+d[0]:
d[0]),p);for(var p=1===g?p:Math.min(c+(d[1]||0),p),g=c+g-2,h=Math.max(p,g),U=[],L=[],n=2;c<h;++c,++n)c<p&&L.push(l("deleted",b[c],c)),c<g&&U.push(l("added",d[n],c));a.a.Kc(L,U);break;default:return}f=k}}}};var r=a.a.Da("_state");a.o=a.$=function(b,c,d){function e(){if(0<arguments.length){if("function"===typeof f)f.apply(g.nb,arguments);else throw Error("Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.");return this}g.ra||
a.u.cc(e);(g.ka||g.J&&e.Xa())&&e.ha();return g.X}"object"===typeof b?d=b:(d=d||{},b&&(d.read=b));if("function"!=typeof d.read)throw Error("Pass a function that returns the value of the ko.computed");var f=d.write,g={X:n,sa:!0,ka:!0,rb:!1,jc:!1,ra:!1,wb:!1,J:!1,Wc:d.read,nb:c||d.owner,l:d.disposeWhenNodeIsRemoved||d.l||null,Sa:d.disposeWhen||d.Sa,Rb:null,I:{},V:0,Ic:null};e[r]=g;e.Nc="function"===typeof f;a.a.Ba||a.a.extend(e,a.T.fn);a.T.fn.qb(e);a.a.Ab(e,C);d.pure?(g.wb=!0,g.J=!0,a.a.extend(e,da)):
d.deferEvaluation&&a.a.extend(e,ea);a.options.deferUpdates&&a.Ta.deferred(e,!0);g.l&&(g.jc=!0,g.l.nodeType||(g.l=null));g.J||d.deferEvaluation||e.ha();g.l&&e.ja()&&a.a.K.za(g.l,g.Rb=function(){e.s()});return e};var C={equalityComparer:K,qa:function(){return this[r].V},Va:function(){var b=[];a.a.P(this[r].I,function(a,d){b[d.Ka]=d.da});return b},Vb:function(b){if(!this[r].V)return!1;var c=this.Va();return-1!==a.a.A(c,b)?!0:!!a.a.Lb(c,function(a){return a.Vb&&a.Vb(b)})},uc:function(a,c,d){if(this[r].wb&&
c===this)throw Error("A 'pure' computed must not be called recursively");this[r].I[a]=d;d.Ka=this[r].V++;d.La=c.ob()},Xa:function(){var a,c,d=this[r].I;for(a in d)if(Object.prototype.hasOwnProperty.call(d,a)&&(c=d[a],this.Ia&&c.da.Ja||c.da.Dd(c.La)))return!0},Jd:function(){this.Ia&&!this[r].rb&&this.Ia(!1)},ja:function(){var a=this[r];return a.ka||0<a.V},Rd:function(){this.Ja?this[r].ka&&(this[r].sa=!0):this.Hc()},$c:function(a){if(a.Hb){var c=a.subscribe(this.Jd,this,"dirty"),d=a.subscribe(this.Rd,
this);return{da:a,s:function(){c.s();d.s()}}}return a.subscribe(this.Hc,this)},Hc:function(){var b=this,c=b.throttleEvaluation;c&&0<=c?(clearTimeout(this[r].Ic),this[r].Ic=a.a.setTimeout(function(){b.ha(!0)},c)):b.Ia?b.Ia(!0):b.ha(!0)},ha:function(b){var c=this[r],d=c.Sa,e=!1;if(!c.rb&&!c.ra){if(c.l&&!a.a.Sb(c.l)||d&&d()){if(!c.jc){this.s();return}}else c.jc=!1;c.rb=!0;try{e=this.zd(b)}finally{c.rb=!1}return e}},zd:function(b){var c=this[r],d=!1,e=c.wb?n:!c.V,d={qd:this,mb:c.I,Qb:c.V};a.u.xc({pd:d,
od:ba,o:this,Ya:e});c.I={};c.V=0;var f=this.yd(c,d);c.V?d=this.sb(c.X,f):(this.s(),d=!0);d&&(c.J?this.Gb():this.notifySubscribers(c.X,"beforeChange"),c.X=f,this.notifySubscribers(c.X,"spectate"),!c.J&&b&&this.notifySubscribers(c.X),this.rc&&this.rc());e&&this.notifySubscribers(c.X,"awake");return d},yd:function(b,c){try{var d=b.Wc;return b.nb?d.call(b.nb):d()}finally{a.u.end(),c.Qb&&!b.J&&a.a.P(c.mb,aa),b.sa=b.ka=!1}},v:function(a){var c=this[r];(c.ka&&(a||!c.V)||c.J&&this.Xa())&&this.ha();return c.X},
ub:function(b){a.T.fn.ub.call(this,b);this.nc=function(){this[r].J||(this[r].sa?this.ha():this[r].ka=!1);return this[r].X};this.Ia=function(a){this.pc(this[r].X);this[r].ka=!0;a&&(this[r].sa=!0);this.qc(this,!a)}},s:function(){var b=this[r];!b.J&&b.I&&a.a.P(b.I,function(a,b){b.s&&b.s()});b.l&&b.Rb&&a.a.K.yb(b.l,b.Rb);b.I=n;b.V=0;b.ra=!0;b.sa=!1;b.ka=!1;b.J=!1;b.l=n;b.Sa=n;b.Wc=n;this.Nc||(b.nb=n)}},da={Qa:function(b){var c=this,d=c[r];if(!d.ra&&d.J&&"change"==b){d.J=!1;if(d.sa||c.Xa())d.I=null,d.V=
0,c.ha()&&c.Gb();else{var e=[];a.a.P(d.I,function(a,b){e[b.Ka]=a});a.a.D(e,function(a,b){var e=d.I[a],m=c.$c(e.da);m.Ka=b;m.La=e.La;d.I[a]=m});c.Xa()&&c.ha()&&c.Gb()}d.ra||c.notifySubscribers(d.X,"awake")}},hb:function(b){var c=this[r];c.ra||"change"!=b||this.Wa("change")||(a.a.P(c.I,function(a,b){b.s&&(c.I[a]={da:b.da,Ka:b.Ka,La:b.La},b.s())}),c.J=!0,this.notifySubscribers(n,"asleep"))},ob:function(){var b=this[r];b.J&&(b.sa||this.Xa())&&this.ha();return a.T.fn.ob.call(this)}},ea={Qa:function(a){"change"!=
a&&"beforeChange"!=a||this.v()}};a.a.Ba&&a.a.setPrototypeOf(C,a.T.fn);var N=a.ta.Ma;C[N]=a.o;a.Oc=function(a){return"function"==typeof a&&a[N]===C[N]};a.Fd=function(b){return a.Oc(b)&&b[r]&&b[r].wb};a.b("computed",a.o);a.b("dependentObservable",a.o);a.b("isComputed",a.Oc);a.b("isPureComputed",a.Fd);a.b("computed.fn",C);a.L(C,"peek",C.v);a.L(C,"dispose",C.s);a.L(C,"isActive",C.ja);a.L(C,"getDependenciesCount",C.qa);a.L(C,"getDependencies",C.Va);a.xb=function(b,c){if("function"===typeof b)return a.o(b,
c,{pure:!0});b=a.a.extend({},b);b.pure=!0;return a.o(b,c)};a.b("pureComputed",a.xb);(function(){function b(a,f,g){g=g||new d;a=f(a);if("object"!=typeof a||null===a||a===n||a instanceof RegExp||a instanceof Date||a instanceof String||a instanceof Number||a instanceof Boolean)return a;var h=a instanceof Array?[]:{};g.save(a,h);c(a,function(c){var d=f(a[c]);switch(typeof d){case "boolean":case "number":case "string":case "function":h[c]=d;break;case "object":case "undefined":var l=g.get(d);h[c]=l!==
n?l:b(d,f,g)}});return h}function c(a,b){if(a instanceof Array){for(var c=0;c<a.length;c++)b(c);"function"==typeof a.toJSON&&b("toJSON")}else for(c in a)b(c)}function d(){this.keys=[];this.values=[]}a.ad=function(c){if(0==arguments.length)throw Error("When calling ko.toJS, pass the object you want to convert.");return b(c,function(b){for(var c=0;a.O(b)&&10>c;c++)b=b();return b})};a.toJSON=function(b,c,d){b=a.ad(b);return a.a.hc(b,c,d)};d.prototype={constructor:d,save:function(b,c){var d=a.a.A(this.keys,
b);0<=d?this.values[d]=c:(this.keys.push(b),this.values.push(c))},get:function(b){b=a.a.A(this.keys,b);return 0<=b?this.values[b]:n}}})();a.b("toJS",a.ad);a.b("toJSON",a.toJSON);a.Wd=function(b,c,d){function e(c){var e=a.xb(b,d).extend({ma:"always"}),h=e.subscribe(function(a){a&&(h.s(),c(a))});e.notifySubscribers(e.v());return h}return"function"!==typeof Promise||c?e(c.bind(d)):new Promise(e)};a.b("when",a.Wd);(function(){a.w={M:function(b){switch(a.a.R(b)){case "option":return!0===b.__ko__hasDomDataOptionValue__?
a.a.g.get(b,a.c.options.$b):7>=a.a.W?b.getAttributeNode("value")&&b.getAttributeNode("value").specified?b.value:b.text:b.value;case "select":return 0<=b.selectedIndex?a.w.M(b.options[b.selectedIndex]):n;default:return b.value}},cb:function(b,c,d){switch(a.a.R(b)){case "option":"string"===typeof c?(a.a.g.set(b,a.c.options.$b,n),"__ko__hasDomDataOptionValue__"in b&&delete b.__ko__hasDomDataOptionValue__,b.value=c):(a.a.g.set(b,a.c.options.$b,c),b.__ko__hasDomDataOptionValue__=!0,b.value="number"===
typeof c?c:"");break;case "select":if(""===c||null===c)c=n;for(var e=-1,f=0,g=b.options.length,h;f<g;++f)if(h=a.w.M(b.options[f]),h==c||""===h&&c===n){e=f;break}if(d||0<=e||c===n&&1<b.size)b.selectedIndex=e,6===a.a.W&&a.a.setTimeout(function(){b.selectedIndex=e},0);break;default:if(null===c||c===n)c="";b.value=c}}}})();a.b("selectExtensions",a.w);a.b("selectExtensions.readValue",a.w.M);a.b("selectExtensions.writeValue",a.w.cb);a.m=function(){function b(b){b=a.a.Db(b);123===b.charCodeAt(0)&&(b=b.slice(1,
-1));b+="\n,";var c=[],d=b.match(e),p,q=[],h=0;if(1<d.length){for(var x=0,B;B=d[x];++x){var u=B.charCodeAt(0);if(44===u){if(0>=h){c.push(p&&q.length?{key:p,value:q.join("")}:{unknown:p||q.join("")});p=h=0;q=[];continue}}else if(58===u){if(!h&&!p&&1===q.length){p=q.pop();continue}}else if(47===u&&1<B.length&&(47===B.charCodeAt(1)||42===B.charCodeAt(1)))continue;else 47===u&&x&&1<B.length?(u=d[x-1].match(f))&&!g[u[0]]&&(b=b.substr(b.indexOf(B)+1),d=b.match(e),x=-1,B="/"):40===u||123===u||91===u?++h:
41===u||125===u||93===u?--h:p||q.length||34!==u&&39!==u||(B=B.slice(1,-1));q.push(B)}if(0<h)throw Error("Unbalanced parentheses, braces, or brackets");}return c}var c=["true","false","null","undefined"],d=/^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i,e=RegExp("\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|`(?:\\\\.|[^`])*`|/\\*(?:[^*]|\\*+[^*/])*\\*+/|//.*\n|/(?:\\\\.|[^/])+/w*|[^\\s:,/][^,\"'`{}()/:[\\]]*[^\\s,\"'`{}()/:[\\]]|[^\\s]","g"),f=/[\])"'A-Za-z0-9_$]+$/,g={"in":1,"return":1,"typeof":1},
h={};return{Ra:[],wa:h,ac:b,vb:function(e,f){function l(b,e){var f;if(!x){var k=a.getBindingHandler(b);if(k&&k.preprocess&&!(e=k.preprocess(e,b,l)))return;if(k=h[b])f=e,0<=a.a.A(c,f)?f=!1:(k=f.match(d),f=null===k?!1:k[1]?"Object("+k[1]+")"+k[2]:f),k=f;k&&q.push("'"+("string"==typeof h[b]?h[b]:b)+"':function(_z){"+f+"=_z}")}g&&(e="function(){return "+e+" }");p.push("'"+b+"':"+e)}f=f||{};var p=[],q=[],g=f.valueAccessors,x=f.bindingParams,B="string"===typeof e?b(e):e;a.a.D(B,function(a){l(a.key||a.unknown,
a.value)});q.length&&l("_ko_property_writers","{"+q.join(",")+" }");return p.join(",")},Id:function(a,b){for(var c=0;c<a.length;c++)if(a[c].key==b)return!0;return!1},eb:function(b,c,d,e,f){if(b&&a.O(b))!a.Za(b)||f&&b.v()===e||b(e);else if((b=c.get("_ko_property_writers"))&&b[d])b[d](e)}}}();a.b("expressionRewriting",a.m);a.b("expressionRewriting.bindingRewriteValidators",a.m.Ra);a.b("expressionRewriting.parseObjectLiteral",a.m.ac);a.b("expressionRewriting.preProcessBindings",a.m.vb);a.b("expressionRewriting._twoWayBindings",
a.m.wa);a.b("jsonExpressionRewriting",a.m);a.b("jsonExpressionRewriting.insertPropertyAccessorsIntoJson",a.m.vb);(function(){function b(a){return 8==a.nodeType&&g.test(f?a.text:a.nodeValue)}function c(a){return 8==a.nodeType&&h.test(f?a.text:a.nodeValue)}function d(d,e){for(var f=d,h=1,g=[];f=f.nextSibling;){if(c(f)&&(a.a.g.set(f,k,!0),h--,0===h))return g;g.push(f);b(f)&&h++}if(!e)throw Error("Cannot find closing comment tag to match: "+d.nodeValue);return null}function e(a,b){var c=d(a,b);return c?
0<c.length?c[c.length-1].nextSibling:a.nextSibling:null}var f=w&&"\x3c!--test--\x3e"===w.createComment("test").text,g=f?/^\x3c!--\s*ko(?:\s+([\s\S]+))?\s*--\x3e$/:/^\s*ko(?:\s+([\s\S]+))?\s*$/,h=f?/^\x3c!--\s*\/ko\s*--\x3e$/:/^\s*\/ko\s*$/,m={ul:!0,ol:!0},k="__ko_matchedEndComment__";a.h={ea:{},childNodes:function(a){return b(a)?d(a):a.childNodes},Ea:function(c){if(b(c)){c=a.h.childNodes(c);for(var d=0,e=c.length;d<e;d++)a.removeNode(c[d])}else a.a.Tb(c)},va:function(c,d){if(b(c)){a.h.Ea(c);for(var e=
c.nextSibling,f=0,k=d.length;f<k;f++)e.parentNode.insertBefore(d[f],e)}else a.a.va(c,d)},Vc:function(a,c){var d;b(a)?(d=a.nextSibling,a=a.parentNode):d=a.firstChild;d?c!==d&&a.insertBefore(c,d):a.appendChild(c)},Wb:function(c,d,e){e?(e=e.nextSibling,b(c)&&(c=c.parentNode),e?d!==e&&c.insertBefore(d,e):c.appendChild(d)):a.h.Vc(c,d)},firstChild:function(a){if(b(a))return!a.nextSibling||c(a.nextSibling)?null:a.nextSibling;if(a.firstChild&&c(a.firstChild))throw Error("Found invalid end comment, as the first child of "+
a);return a.firstChild},nextSibling:function(d){b(d)&&(d=e(d));if(d.nextSibling&&c(d.nextSibling)){var f=d.nextSibling;if(c(f)&&!a.a.g.get(f,k))throw Error("Found end comment without a matching opening comment, as child of "+d);return null}return d.nextSibling},Cd:b,Vd:function(a){return(a=(f?a.text:a.nodeValue).match(g))?a[1]:null},Sc:function(d){if(m[a.a.R(d)]){var f=d.firstChild;if(f){do if(1===f.nodeType){var k;k=f.firstChild;var h=null;if(k){do if(h)h.push(k);else if(b(k)){var g=e(k,!0);g?k=
g:h=[k]}else c(k)&&(h=[k]);while(k=k.nextSibling)}if(k=h)for(h=f.nextSibling,g=0;g<k.length;g++)h?d.insertBefore(k[g],h):d.appendChild(k[g])}while(f=f.nextSibling)}}}}})();a.b("virtualElements",a.h);a.b("virtualElements.allowedBindings",a.h.ea);a.b("virtualElements.emptyNode",a.h.Ea);a.b("virtualElements.insertAfter",a.h.Wb);a.b("virtualElements.prepend",a.h.Vc);a.b("virtualElements.setDomNodeChildren",a.h.va);(function(){a.ga=function(){this.nd={}};a.a.extend(a.ga.prototype,{nodeHasBindings:function(b){switch(b.nodeType){case 1:return null!=
b.getAttribute("data-bind")||a.j.getComponentNameForNode(b);case 8:return a.h.Cd(b);default:return!1}},getBindings:function(b,c){var d=this.getBindingsString(b,c),d=d?this.parseBindingsString(d,c,b):null;return a.j.tc(d,b,c,!1)},getBindingAccessors:function(b,c){var d=this.getBindingsString(b,c),d=d?this.parseBindingsString(d,c,b,{valueAccessors:!0}):null;return a.j.tc(d,b,c,!0)},getBindingsString:function(b){switch(b.nodeType){case 1:return b.getAttribute("data-bind");case 8:return a.h.Vd(b);default:return null}},
parseBindingsString:function(b,c,d,e){try{var f=this.nd,g=b+(e&&e.valueAccessors||""),h;if(!(h=f[g])){var m,k="with($context){with($data||{}){return{"+a.m.vb(b,e)+"}}}";m=new Function("$context","$element",k);h=f[g]=m}return h(c,d)}catch(l){throw l.message="Unable to parse bindings.\nBindings value: "+b+"\nMessage: "+l.message,l;}}});a.ga.instance=new a.ga})();a.b("bindingProvider",a.ga);(function(){function b(b){var c=(b=a.a.g.get(b,z))&&b.N;c&&(b.N=null,c.Tc())}function c(c,d,e){this.node=c;this.yc=
d;this.kb=[];this.H=!1;d.N||a.a.K.za(c,b);e&&e.N&&(e.N.kb.push(c),this.Kb=e)}function d(a){return function(){return a}}function e(a){return a()}function f(b){return a.a.Ga(a.u.G(b),function(a,c){return function(){return b()[c]}})}function g(b,c,e){return"function"===typeof b?f(b.bind(null,c,e)):a.a.Ga(b,d)}function h(a,b){return f(this.getBindings.bind(this,a,b))}function m(b,c){var d=a.h.firstChild(c);if(d){var e,f=a.ga.instance,l=f.preprocessNode;if(l){for(;e=d;)d=a.h.nextSibling(e),l.call(f,e);
d=a.h.firstChild(c)}for(;e=d;)d=a.h.nextSibling(e),k(b,e)}a.i.ma(c,a.i.H)}function k(b,c){var d=b,e=1===c.nodeType;e&&a.h.Sc(c);if(e||a.ga.instance.nodeHasBindings(c))d=p(c,null,b).bindingContextForDescendants;d&&!u[a.a.R(c)]&&m(d,c)}function l(b){var c=[],d={},e=[];a.a.P(b,function ca(f){if(!d[f]){var k=a.getBindingHandler(f);k&&(k.after&&(e.push(f),a.a.D(k.after,function(c){if(b[c]){if(-1!==a.a.A(e,c))throw Error("Cannot combine the following bindings, because they have a cyclic dependency: "+e.join(", "));
ca(c)}}),e.length--),c.push({key:f,Mc:k}));d[f]=!0}});return c}function p(b,c,d){var f=a.a.g.Ub(b,z,{}),k=f.hd;if(!c){if(k)throw Error("You cannot apply bindings multiple times to the same element.");f.hd=!0}k||(f.context=d);f.Zb||(f.Zb={});var g;if(c&&"function"!==typeof c)g=c;else{var p=a.ga.instance,q=p.getBindingAccessors||h,m=a.$(function(){if(g=c?c(d,b):q.call(p,b,d)){if(d[t])d[t]();if(d[B])d[B]()}return g},null,{l:b});g&&m.ja()||(m=null)}var x=d,u;if(g){var J=function(){return a.a.Ga(m?m():
g,e)},r=m?function(a){return function(){return e(m()[a])}}:function(a){return g[a]};J.get=function(a){return g[a]&&e(r(a))};J.has=function(a){return a in g};a.i.H in g&&a.i.subscribe(b,a.i.H,function(){var c=(0,g[a.i.H])();if(c){var d=a.h.childNodes(b);d.length&&c(d,a.Ec(d[0]))}});a.i.pa in g&&(x=a.i.Cb(b,d),a.i.subscribe(b,a.i.pa,function(){var c=(0,g[a.i.pa])();c&&a.h.firstChild(b)&&c(b)}));f=l(g);a.a.D(f,function(c){var d=c.Mc.init,e=c.Mc.update,f=c.key;if(8===b.nodeType&&!a.h.ea[f])throw Error("The binding '"+
f+"' cannot be used with virtual elements");try{"function"==typeof d&&a.u.G(function(){var a=d(b,r(f),J,x.$data,x);if(a&&a.controlsDescendantBindings){if(u!==n)throw Error("Multiple bindings ("+u+" and "+f+") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.");u=f}}),"function"==typeof e&&a.$(function(){e(b,r(f),J,x.$data,x)},null,{l:b})}catch(k){throw k.message='Unable to process binding "'+f+": "+g[f]+'"\nMessage: '+k.message,
k;}})}f=u===n;return{shouldBindDescendants:f,bindingContextForDescendants:f&&x}}function q(b,c){return b&&b instanceof a.fa?b:new a.fa(b,n,n,c)}var t=a.a.Da("_subscribable"),x=a.a.Da("_ancestorBindingInfo"),B=a.a.Da("_dataDependency");a.c={};var u={script:!0,textarea:!0,template:!0};a.getBindingHandler=function(b){return a.c[b]};var J={};a.fa=function(b,c,d,e,f){function k(){var b=p?h():h,f=a.a.f(b);c?(a.a.extend(l,c),x in c&&(l[x]=c[x])):(l.$parents=[],l.$root=f,l.ko=a);l[t]=q;g?f=l.$data:(l.$rawData=
b,l.$data=f);d&&(l[d]=f);e&&e(l,c,f);if(c&&c[t]&&!a.S.o().Vb(c[t]))c[t]();m&&(l[B]=m);return l.$data}var l=this,g=b===J,h=g?n:b,p="function"==typeof h&&!a.O(h),q,m=f&&f.dataDependency;f&&f.exportDependencies?k():(q=a.xb(k),q.v(),q.ja()?q.equalityComparer=null:l[t]=n)};a.fa.prototype.createChildContext=function(b,c,d,e){!e&&c&&"object"==typeof c&&(e=c,c=e.as,d=e.extend);if(c&&e&&e.noChildContext){var f="function"==typeof b&&!a.O(b);return new a.fa(J,this,null,function(a){d&&d(a);a[c]=f?b():b},e)}return new a.fa(b,
this,c,function(a,b){a.$parentContext=b;a.$parent=b.$data;a.$parents=(b.$parents||[]).slice(0);a.$parents.unshift(a.$parent);d&&d(a)},e)};a.fa.prototype.extend=function(b,c){return new a.fa(J,this,null,function(c){a.a.extend(c,"function"==typeof b?b(c):b)},c)};var z=a.a.g.Z();c.prototype.Tc=function(){this.Kb&&this.Kb.N&&this.Kb.N.sd(this.node)};c.prototype.sd=function(b){a.a.Pa(this.kb,b);!this.kb.length&&this.H&&this.Cc()};c.prototype.Cc=function(){this.H=!0;this.yc.N&&!this.kb.length&&(this.yc.N=
null,a.a.K.yb(this.node,b),a.i.ma(this.node,a.i.pa),this.Tc())};a.i={H:"childrenComplete",pa:"descendantsComplete",subscribe:function(b,c,d,e,f){var k=a.a.g.Ub(b,z,{});k.Fa||(k.Fa=new a.T);f&&f.notifyImmediately&&k.Zb[c]&&a.u.G(d,e,[b]);return k.Fa.subscribe(d,e,c)},ma:function(b,c){var d=a.a.g.get(b,z);if(d&&(d.Zb[c]=!0,d.Fa&&d.Fa.notifySubscribers(b,c),c==a.i.H))if(d.N)d.N.Cc();else if(d.N===n&&d.Fa&&d.Fa.Wa(a.i.pa))throw Error("descendantsComplete event not supported for bindings on this node");
},Cb:function(b,d){var e=a.a.g.Ub(b,z,{});e.N||(e.N=new c(b,e,d[x]));return d[x]==e?d:d.extend(function(a){a[x]=e})}};a.Td=function(b){return(b=a.a.g.get(b,z))&&b.context};a.ib=function(b,c,d){1===b.nodeType&&a.h.Sc(b);return p(b,c,q(d))};a.ld=function(b,c,d){d=q(d);return a.ib(b,g(c,d,b),d)};a.Oa=function(a,b){1!==b.nodeType&&8!==b.nodeType||m(q(a),b)};a.vc=function(a,b,c){!v&&A.jQuery&&(v=A.jQuery);if(2>arguments.length){if(b=w.body,!b)throw Error("ko.applyBindings: could not find document.body; has the document been loaded?");
}else if(!b||1!==b.nodeType&&8!==b.nodeType)throw Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node");k(q(a,c),b)};a.Dc=function(b){return!b||1!==b.nodeType&&8!==b.nodeType?n:a.Td(b)};a.Ec=function(b){return(b=a.Dc(b))?b.$data:n};a.b("bindingHandlers",a.c);a.b("bindingEvent",a.i);a.b("bindingEvent.subscribe",a.i.subscribe);a.b("bindingEvent.startPossiblyAsyncContentBinding",a.i.Cb);a.b("applyBindings",a.vc);a.b("applyBindingsToDescendants",a.Oa);
a.b("applyBindingAccessorsToNode",a.ib);a.b("applyBindingsToNode",a.ld);a.b("contextFor",a.Dc);a.b("dataFor",a.Ec)})();(function(b){function c(c,e){var k=Object.prototype.hasOwnProperty.call(f,c)?f[c]:b,l;k?k.subscribe(e):(k=f[c]=new a.T,k.subscribe(e),d(c,function(b,d){var e=!(!d||!d.synchronous);g[c]={definition:b,Gd:e};delete f[c];l||e?k.notifySubscribers(b):a.na.zb(function(){k.notifySubscribers(b)})}),l=!0)}function d(a,b){e("getConfig",[a],function(c){c?e("loadComponent",[a,c],function(a){b(a,
c)}):b(null,null)})}function e(c,d,f,l){l||(l=a.j.loaders.slice(0));var g=l.shift();if(g){var q=g[c];if(q){var t=!1;if(q.apply(g,d.concat(function(a){t?f(null):null!==a?f(a):e(c,d,f,l)}))!==b&&(t=!0,!g.suppressLoaderExceptions))throw Error("Component loaders must supply values by invoking the callback, not by returning values synchronously.");}else e(c,d,f,l)}else f(null)}var f={},g={};a.j={get:function(d,e){var f=Object.prototype.hasOwnProperty.call(g,d)?g[d]:b;f?f.Gd?a.u.G(function(){e(f.definition)}):
a.na.zb(function(){e(f.definition)}):c(d,e)},Bc:function(a){delete g[a]},oc:e};a.j.loaders=[];a.b("components",a.j);a.b("components.get",a.j.get);a.b("components.clearCachedDefinition",a.j.Bc)})();(function(){function b(b,c,d,e){function g(){0===--B&&e(h)}var h={},B=2,u=d.template;d=d.viewModel;u?f(c,u,function(c){a.j.oc("loadTemplate",[b,c],function(a){h.template=a;g()})}):g();d?f(c,d,function(c){a.j.oc("loadViewModel",[b,c],function(a){h[m]=a;g()})}):g()}function c(a,b,d){if("function"===typeof b)d(function(a){return new b(a)});
else if("function"===typeof b[m])d(b[m]);else if("instance"in b){var e=b.instance;d(function(){return e})}else"viewModel"in b?c(a,b.viewModel,d):a("Unknown viewModel value: "+b)}function d(b){switch(a.a.R(b)){case "script":return a.a.ua(b.text);case "textarea":return a.a.ua(b.value);case "template":if(e(b.content))return a.a.Ca(b.content.childNodes)}return a.a.Ca(b.childNodes)}function e(a){return A.DocumentFragment?a instanceof DocumentFragment:a&&11===a.nodeType}function f(a,b,c){"string"===typeof b.require?
T||A.require?(T||A.require)([b.require],function(a){a&&"object"===typeof a&&a.Xd&&a["default"]&&(a=a["default"]);c(a)}):a("Uses require, but no AMD loader is present"):c(b)}function g(a){return function(b){throw Error("Component '"+a+"': "+b);}}var h={};a.j.register=function(b,c){if(!c)throw Error("Invalid configuration for "+b);if(a.j.tb(b))throw Error("Component "+b+" is already registered");h[b]=c};a.j.tb=function(a){return Object.prototype.hasOwnProperty.call(h,a)};a.j.unregister=function(b){delete h[b];
a.j.Bc(b)};a.j.Fc={getConfig:function(b,c){c(a.j.tb(b)?h[b]:null)},loadComponent:function(a,c,d){var e=g(a);f(e,c,function(c){b(a,e,c,d)})},loadTemplate:function(b,c,f){b=g(b);if("string"===typeof c)f(a.a.ua(c));else if(c instanceof Array)f(c);else if(e(c))f(a.a.la(c.childNodes));else if(c.element)if(c=c.element,A.HTMLElement?c instanceof HTMLElement:c&&c.tagName&&1===c.nodeType)f(d(c));else if("string"===typeof c){var h=w.getElementById(c);h?f(d(h)):b("Cannot find element with ID "+c)}else b("Unknown element type: "+
c);else b("Unknown template value: "+c)},loadViewModel:function(a,b,d){c(g(a),b,d)}};var m="createViewModel";a.b("components.register",a.j.register);a.b("components.isRegistered",a.j.tb);a.b("components.unregister",a.j.unregister);a.b("components.defaultLoader",a.j.Fc);a.j.loaders.push(a.j.Fc);a.j.dd=h})();(function(){function b(b,e){var f=b.getAttribute("params");if(f){var f=c.parseBindingsString(f,e,b,{valueAccessors:!0,bindingParams:!0}),f=a.a.Ga(f,function(c){return a.o(c,null,{l:b})}),g=a.a.Ga(f,
function(c){var e=c.v();return c.ja()?a.o({read:function(){return a.a.f(c())},write:a.Za(e)&&function(a){c()(a)},l:b}):e});Object.prototype.hasOwnProperty.call(g,"$raw")||(g.$raw=f);return g}return{$raw:{}}}a.j.getComponentNameForNode=function(b){var c=a.a.R(b);if(a.j.tb(c)&&(-1!=c.indexOf("-")||"[object HTMLUnknownElement]"==""+b||8>=a.a.W&&b.tagName===c))return c};a.j.tc=function(c,e,f,g){if(1===e.nodeType){var h=a.j.getComponentNameForNode(e);if(h){c=c||{};if(c.component)throw Error('Cannot use the "component" binding on a custom element matching a component');
var m={name:h,params:b(e,f)};c.component=g?function(){return m}:m}}return c};var c=new a.ga;9>a.a.W&&(a.j.register=function(a){return function(b){return a.apply(this,arguments)}}(a.j.register),w.createDocumentFragment=function(b){return function(){var c=b(),f=a.j.dd,g;for(g in f);return c}}(w.createDocumentFragment))})();(function(){function b(b,c,d){c=c.template;if(!c)throw Error("Component '"+b+"' has no template");b=a.a.Ca(c);a.h.va(d,b)}function c(a,b,c){var d=a.createViewModel;return d?d.call(a,
b,c):b}var d=0;a.c.component={init:function(e,f,g,h,m){function k(){var a=l&&l.dispose;"function"===typeof a&&a.call(l);q&&q.s();p=l=q=null}var l,p,q,t=a.a.la(a.h.childNodes(e));a.h.Ea(e);a.a.K.za(e,k);a.o(function(){var g=a.a.f(f()),h,u;"string"===typeof g?h=g:(h=a.a.f(g.name),u=a.a.f(g.params));if(!h)throw Error("No component name specified");var n=a.i.Cb(e,m),z=p=++d;a.j.get(h,function(d){if(p===z){k();if(!d)throw Error("Unknown component '"+h+"'");b(h,d,e);var f=c(d,u,{element:e,templateNodes:t});
d=n.createChildContext(f,{extend:function(a){a.$component=f;a.$componentTemplateNodes=t}});f&&f.koDescendantsComplete&&(q=a.i.subscribe(e,a.i.pa,f.koDescendantsComplete,f));l=f;a.Oa(d,e)}})},null,{l:e});return{controlsDescendantBindings:!0}}};a.h.ea.component=!0})();var V={"class":"className","for":"htmlFor"};a.c.attr={update:function(b,c){var d=a.a.f(c())||{};a.a.P(d,function(c,d){d=a.a.f(d);var g=c.indexOf(":"),g="lookupNamespaceURI"in b&&0<g&&b.lookupNamespaceURI(c.substr(0,g)),h=!1===d||null===
d||d===n;h?g?b.removeAttributeNS(g,c):b.removeAttribute(c):d=d.toString();8>=a.a.W&&c in V?(c=V[c],h?b.removeAttribute(c):b[c]=d):h||(g?b.setAttributeNS(g,c,d):b.setAttribute(c,d));"name"===c&&a.a.Yc(b,h?"":d)})}};(function(){a.c.checked={after:["value","attr"],init:function(b,c,d){function e(){var e=b.checked,f=g();if(!a.S.Ya()&&(e||!m&&!a.S.qa())){var k=a.u.G(c);if(l){var q=p?k.v():k,z=t;t=f;z!==f?e&&(a.a.Na(q,f,!0),a.a.Na(q,z,!1)):a.a.Na(q,f,e);p&&a.Za(k)&&k(q)}else h&&(f===n?f=e:e||(f=n)),a.m.eb(k,
d,"checked",f,!0)}}function f(){var d=a.a.f(c()),e=g();l?(b.checked=0<=a.a.A(d,e),t=e):b.checked=h&&e===n?!!d:g()===d}var g=a.xb(function(){if(d.has("checkedValue"))return a.a.f(d.get("checkedValue"));if(q)return d.has("value")?a.a.f(d.get("value")):b.value}),h="checkbox"==b.type,m="radio"==b.type;if(h||m){var k=c(),l=h&&a.a.f(k)instanceof Array,p=!(l&&k.push&&k.splice),q=m||l,t=l?g():n;m&&!b.name&&a.c.uniqueName.init(b,function(){return!0});a.o(e,null,{l:b});a.a.B(b,"click",e);a.o(f,null,{l:b});
k=n}}};a.m.wa.checked=!0;a.c.checkedValue={update:function(b,c){b.value=a.a.f(c())}}})();a.c["class"]={update:function(b,c){var d=a.a.Db(a.a.f(c()));a.a.Eb(b,b.__ko__cssValue,!1);b.__ko__cssValue=d;a.a.Eb(b,d,!0)}};a.c.css={update:function(b,c){var d=a.a.f(c());null!==d&&"object"==typeof d?a.a.P(d,function(c,d){d=a.a.f(d);a.a.Eb(b,c,d)}):a.c["class"].update(b,c)}};a.c.enable={update:function(b,c){var d=a.a.f(c());d&&b.disabled?b.removeAttribute("disabled"):d||b.disabled||(b.disabled=!0)}};a.c.disable=
{update:function(b,c){a.c.enable.update(b,function(){return!a.a.f(c())})}};a.c.event={init:function(b,c,d,e,f){var g=c()||{};a.a.P(g,function(g){"string"==typeof g&&a.a.B(b,g,function(b){var k,l=c()[g];if(l){try{var p=a.a.la(arguments);e=f.$data;p.unshift(e);k=l.apply(e,p)}finally{!0!==k&&(b.preventDefault?b.preventDefault():b.returnValue=!1)}!1===d.get(g+"Bubble")&&(b.cancelBubble=!0,b.stopPropagation&&b.stopPropagation())}})})}};a.c.foreach={Rc:function(b){return function(){var c=b(),d=a.a.bc(c);
if(!d||"number"==typeof d.length)return{foreach:c,templateEngine:a.ba.Ma};a.a.f(c);return{foreach:d.data,as:d.as,noChildContext:d.noChildContext,includeDestroyed:d.includeDestroyed,afterAdd:d.afterAdd,beforeRemove:d.beforeRemove,afterRender:d.afterRender,beforeMove:d.beforeMove,afterMove:d.afterMove,templateEngine:a.ba.Ma}}},init:function(b,c){return a.c.template.init(b,a.c.foreach.Rc(c))},update:function(b,c,d,e,f){return a.c.template.update(b,a.c.foreach.Rc(c),d,e,f)}};a.m.Ra.foreach=!1;a.h.ea.foreach=
!0;a.c.hasfocus={init:function(b,c,d){function e(e){b.__ko_hasfocusUpdating=!0;var f=b.ownerDocument;if("activeElement"in f){var g;try{g=f.activeElement}catch(l){g=f.body}e=g===b}f=c();a.m.eb(f,d,"hasfocus",e,!0);b.__ko_hasfocusLastValue=e;b.__ko_hasfocusUpdating=!1}var f=e.bind(null,!0),g=e.bind(null,!1);a.a.B(b,"focus",f);a.a.B(b,"focusin",f);a.a.B(b,"blur",g);a.a.B(b,"focusout",g);b.__ko_hasfocusLastValue=!1},update:function(b,c){var d=!!a.a.f(c());b.__ko_hasfocusUpdating||b.__ko_hasfocusLastValue===
d||(d?b.focus():b.blur(),!d&&b.__ko_hasfocusLastValue&&b.ownerDocument.body.focus(),a.u.G(a.a.Fb,null,[b,d?"focusin":"focusout"]))}};a.m.wa.hasfocus=!0;a.c.hasFocus=a.c.hasfocus;a.m.wa.hasFocus="hasfocus";a.c.html={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.fc(b,c())}};(function(){function b(b,d,e){a.c[b]={init:function(b,c,h,m,k){var l,p,q={},t,x,n;if(d){m=h.get("as");var u=h.get("noChildContext");n=!(m&&u);q={as:m,noChildContext:u,exportDependencies:n}}x=(t=
"render"==h.get("completeOn"))||h.has(a.i.pa);a.o(function(){var h=a.a.f(c()),m=!e!==!h,u=!p,r;if(n||m!==l){x&&(k=a.i.Cb(b,k));if(m){if(!d||n)q.dataDependency=a.S.o();r=d?k.createChildContext("function"==typeof h?h:c,q):a.S.qa()?k.extend(null,q):k}u&&a.S.qa()&&(p=a.a.Ca(a.h.childNodes(b),!0));m?(u||a.h.va(b,a.a.Ca(p)),a.Oa(r,b)):(a.h.Ea(b),t||a.i.ma(b,a.i.H));l=m}},null,{l:b});return{controlsDescendantBindings:!0}}};a.m.Ra[b]=!1;a.h.ea[b]=!0}b("if");b("ifnot",!1,!0);b("with",!0)})();a.c.let={init:function(b,
c,d,e,f){c=f.extend(c);a.Oa(c,b);return{controlsDescendantBindings:!0}}};a.h.ea.let=!0;var Q={};a.c.options={init:function(b){if("select"!==a.a.R(b))throw Error("options binding applies only to SELECT elements");for(;0<b.length;)b.remove(0);return{controlsDescendantBindings:!0}},update:function(b,c,d){function e(){return a.a.jb(b.options,function(a){return a.selected})}function f(a,b,c){var d=typeof b;return"function"==d?b(a):"string"==d?a[b]:c}function g(c,d){if(x&&l)a.i.ma(b,a.i.H);else if(t.length){var e=
0<=a.a.A(t,a.w.M(d[0]));a.a.Zc(d[0],e);x&&!e&&a.u.G(a.a.Fb,null,[b,"change"])}}var h=b.multiple,m=0!=b.length&&h?b.scrollTop:null,k=a.a.f(c()),l=d.get("valueAllowUnset")&&d.has("value"),p=d.get("optionsIncludeDestroyed");c={};var q,t=[];l||(h?t=a.a.Mb(e(),a.w.M):0<=b.selectedIndex&&t.push(a.w.M(b.options[b.selectedIndex])));k&&("undefined"==typeof k.length&&(k=[k]),q=a.a.jb(k,function(b){return p||b===n||null===b||!a.a.f(b._destroy)}),d.has("optionsCaption")&&(k=a.a.f(d.get("optionsCaption")),null!==
k&&k!==n&&q.unshift(Q)));var x=!1;c.beforeRemove=function(a){b.removeChild(a)};k=g;d.has("optionsAfterRender")&&"function"==typeof d.get("optionsAfterRender")&&(k=function(b,c){g(0,c);a.u.G(d.get("optionsAfterRender"),null,[c[0],b!==Q?b:n])});a.a.ec(b,q,function(c,e,g){g.length&&(t=!l&&g[0].selected?[a.w.M(g[0])]:[],x=!0);e=b.ownerDocument.createElement("option");c===Q?(a.a.Bb(e,d.get("optionsCaption")),a.w.cb(e,n)):(g=f(c,d.get("optionsValue"),c),a.w.cb(e,a.a.f(g)),c=f(c,d.get("optionsText"),g),
a.a.Bb(e,c));return[e]},c,k);if(!l){var B;h?B=t.length&&e().length<t.length:B=t.length&&0<=b.selectedIndex?a.w.M(b.options[b.selectedIndex])!==t[0]:t.length||0<=b.selectedIndex;B&&a.u.G(a.a.Fb,null,[b,"change"])}(l||a.S.Ya())&&a.i.ma(b,a.i.H);a.a.wd(b);m&&20<Math.abs(m-b.scrollTop)&&(b.scrollTop=m)}};a.c.options.$b=a.a.g.Z();a.c.selectedOptions={init:function(b,c,d){function e(){var e=c(),f=[];a.a.D(b.getElementsByTagName("option"),function(b){b.selected&&f.push(a.w.M(b))});a.m.eb(e,d,"selectedOptions",
f)}function f(){var d=a.a.f(c()),e=b.scrollTop;d&&"number"==typeof d.length&&a.a.D(b.getElementsByTagName("option"),function(b){var c=0<=a.a.A(d,a.w.M(b));b.selected!=c&&a.a.Zc(b,c)});b.scrollTop=e}if("select"!=a.a.R(b))throw Error("selectedOptions binding applies only to SELECT elements");var g;a.i.subscribe(b,a.i.H,function(){g?e():(a.a.B(b,"change",e),g=a.o(f,null,{l:b}))},null,{notifyImmediately:!0})},update:function(){}};a.m.wa.selectedOptions=!0;a.c.style={update:function(b,c){var d=a.a.f(c()||
{});a.a.P(d,function(c,d){d=a.a.f(d);if(null===d||d===n||!1===d)d="";if(v)v(b).css(c,d);else if(/^--/.test(c))b.style.setProperty(c,d);else{c=c.replace(/-(\w)/g,function(a,b){return b.toUpperCase()});var g=b.style[c];b.style[c]=d;d===g||b.style[c]!=g||isNaN(d)||(b.style[c]=d+"px")}})}};a.c.submit={init:function(b,c,d,e,f){if("function"!=typeof c())throw Error("The value for a submit binding must be a function");a.a.B(b,"submit",function(a){var d,e=c();try{d=e.call(f.$data,b)}finally{!0!==d&&(a.preventDefault?
a.preventDefault():a.returnValue=!1)}})}};a.c.text={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.Bb(b,c())}};a.h.ea.text=!0;(function(){if(A&&A.navigator){var b=function(a){if(a)return parseFloat(a[1])},c=A.navigator.userAgent,d,e,f,g,h;(d=A.opera&&A.opera.version&&parseInt(A.opera.version()))||(h=b(c.match(/Edge\/([^ ]+)$/)))||b(c.match(/Chrome\/([^ ]+)/))||(e=b(c.match(/Version\/([^ ]+) Safari/)))||(f=b(c.match(/Firefox\/([^ ]+)/)))||(g=a.a.W||b(c.match(/MSIE ([^ ]+)/)))||
(g=b(c.match(/rv:([^ )]+)/)))}if(8<=g&&10>g)var m=a.a.g.Z(),k=a.a.g.Z(),l=function(b){var c=this.activeElement;(c=c&&a.a.g.get(c,k))&&c(b)},p=function(b,c){var d=b.ownerDocument;a.a.g.get(d,m)||(a.a.g.set(d,m,!0),a.a.B(d,"selectionchange",l));a.a.g.set(b,k,c)};a.c.textInput={init:function(b,c,k){function l(c,d){a.a.B(b,c,d)}function m(){var d=a.a.f(c());if(null===d||d===n)d="";L!==n&&d===L?a.a.setTimeout(m,4):b.value!==d&&(y=!0,b.value=d,y=!1,v=b.value)}function r(){w||(L=b.value,w=a.a.setTimeout(z,
4))}function z(){clearTimeout(w);L=w=n;var d=b.value;v!==d&&(v=d,a.m.eb(c(),k,"textInput",d))}var v=b.value,w,L,A=9==a.a.W?r:z,y=!1;g&&l("keypress",z);11>g&&l("propertychange",function(a){y||"value"!==a.propertyName||A(a)});8==g&&(l("keyup",z),l("keydown",z));p&&(p(b,A),l("dragend",r));(!g||9<=g)&&l("input",A);5>e&&"textarea"===a.a.R(b)?(l("keydown",r),l("paste",r),l("cut",r)):11>d?l("keydown",r):4>f?(l("DOMAutoComplete",z),l("dragdrop",z),l("drop",z)):h&&"number"===b.type&&l("keydown",r);l("change",
z);l("blur",z);a.o(m,null,{l:b})}};a.m.wa.textInput=!0;a.c.textinput={preprocess:function(a,b,c){c("textInput",a)}}})();a.c.uniqueName={init:function(b,c){if(c()){var d="ko_unique_"+ ++a.c.uniqueName.rd;a.a.Yc(b,d)}}};a.c.uniqueName.rd=0;a.c.using={init:function(b,c,d,e,f){var g;d.has("as")&&(g={as:d.get("as"),noChildContext:d.get("noChildContext")});c=f.createChildContext(c,g);a.Oa(c,b);return{controlsDescendantBindings:!0}}};a.h.ea.using=!0;a.c.value={init:function(b,c,d){var e=a.a.R(b),f="input"==
e;if(!f||"checkbox"!=b.type&&"radio"!=b.type){var g=[],h=d.get("valueUpdate"),m=!1,k=null;h&&("string"==typeof h?g=[h]:g=a.a.wc(h),a.a.Pa(g,"change"));var l=function(){k=null;m=!1;var e=c(),f=a.w.M(b);a.m.eb(e,d,"value",f)};!a.a.W||!f||"text"!=b.type||"off"==b.autocomplete||b.form&&"off"==b.form.autocomplete||-1!=a.a.A(g,"propertychange")||(a.a.B(b,"propertychange",function(){m=!0}),a.a.B(b,"focus",function(){m=!1}),a.a.B(b,"blur",function(){m&&l()}));a.a.D(g,function(c){var d=l;a.a.Ud(c,"after")&&
(d=function(){k=a.w.M(b);a.a.setTimeout(l,0)},c=c.substring(5));a.a.B(b,c,d)});var p;p=f&&"file"==b.type?function(){var d=a.a.f(c());null===d||d===n||""===d?b.value="":a.u.G(l)}:function(){var f=a.a.f(c()),g=a.w.M(b);if(null!==k&&f===k)a.a.setTimeout(p,0);else if(f!==g||g===n)"select"===e?(g=d.get("valueAllowUnset"),a.w.cb(b,f,g),g||f===a.w.M(b)||a.u.G(l)):a.w.cb(b,f)};if("select"===e){var q;a.i.subscribe(b,a.i.H,function(){q?d.get("valueAllowUnset")?p():l():(a.a.B(b,"change",l),q=a.o(p,null,{l:b}))},
null,{notifyImmediately:!0})}else a.a.B(b,"change",l),a.o(p,null,{l:b})}else a.ib(b,{checkedValue:c})},update:function(){}};a.m.wa.value=!0;a.c.visible={update:function(b,c){var d=a.a.f(c()),e="none"!=b.style.display;d&&!e?b.style.display="":!d&&e&&(b.style.display="none")}};a.c.hidden={update:function(b,c){a.c.visible.update(b,function(){return!a.a.f(c())})}};(function(b){a.c[b]={init:function(c,d,e,f,g){return a.c.event.init.call(this,c,function(){var a={};a[b]=d();return a},e,f,g)}}})("click");
a.ca=function(){};a.ca.prototype.renderTemplateSource=function(){throw Error("Override renderTemplateSource");};a.ca.prototype.createJavaScriptEvaluatorBlock=function(){throw Error("Override createJavaScriptEvaluatorBlock");};a.ca.prototype.makeTemplateSource=function(b,c){if("string"==typeof b){c=c||w;var d=c.getElementById(b);if(!d)throw Error("Cannot find template with ID "+b);return new a.C.F(d)}if(1==b.nodeType||8==b.nodeType)return new a.C.ia(b);throw Error("Unknown template type: "+b);};a.ca.prototype.renderTemplate=
function(a,c,d,e){a=this.makeTemplateSource(a,e);return this.renderTemplateSource(a,c,d,e)};a.ca.prototype.isTemplateRewritten=function(a,c){return!1===this.allowTemplateRewriting?!0:this.makeTemplateSource(a,c).data("isRewritten")};a.ca.prototype.rewriteTemplate=function(a,c,d){a=this.makeTemplateSource(a,d);c=c(a.text());a.text(c);a.data("isRewritten",!0)};a.b("templateEngine",a.ca);a.kc=function(){function b(b,c,d,h){b=a.m.ac(b);for(var m=a.m.Ra,k=0;k<b.length;k++){var l=b[k].key;if(Object.prototype.hasOwnProperty.call(m,
l)){var p=m[l];if("function"===typeof p){if(l=p(b[k].value))throw Error(l);}else if(!p)throw Error("This template engine does not support the '"+l+"' binding within its templates");}}d="ko.__tr_ambtns(function($context,$element){return(function(){return{ "+a.m.vb(b,{valueAccessors:!0})+" } })()},'"+d.toLowerCase()+"')";return h.createJavaScriptEvaluatorBlock(d)+c}var c=/(<([a-z]+\d*)(?:\s+(?!data-bind\s*=\s*)[a-z0-9\-]+(?:=(?:\"[^\"]*\"|\'[^\']*\'|[^>]*))?)*\s+)data-bind\s*=\s*(["'])([\s\S]*?)\3/gi,
d=/\x3c!--\s*ko\b\s*([\s\S]*?)\s*--\x3e/g;return{xd:function(b,c,d){c.isTemplateRewritten(b,d)||c.rewriteTemplate(b,function(b){return a.kc.Ld(b,c)},d)},Ld:function(a,f){return a.replace(c,function(a,c,d,e,l){return b(l,c,d,f)}).replace(d,function(a,c){return b(c,"\x3c!-- ko --\x3e","#comment",f)})},md:function(b,c){return a.aa.Xb(function(d,h){var m=d.nextSibling;m&&m.nodeName.toLowerCase()===c&&a.ib(m,b,h)})}}}();a.b("__tr_ambtns",a.kc.md);(function(){a.C={};a.C.F=function(b){if(this.F=b){var c=
a.a.R(b);this.ab="script"===c?1:"textarea"===c?2:"template"==c&&b.content&&11===b.content.nodeType?3:4}};a.C.F.prototype.text=function(){var b=1===this.ab?"text":2===this.ab?"value":"innerHTML";if(0==arguments.length)return this.F[b];var c=arguments[0];"innerHTML"===b?a.a.fc(this.F,c):this.F[b]=c};var b=a.a.g.Z()+"_";a.C.F.prototype.data=function(c){if(1===arguments.length)return a.a.g.get(this.F,b+c);a.a.g.set(this.F,b+c,arguments[1])};var c=a.a.g.Z();a.C.F.prototype.nodes=function(){var b=this.F;
if(0==arguments.length){var e=a.a.g.get(b,c)||{},f=e.lb||(3===this.ab?b.content:4===this.ab?b:n);if(!f||e.jd){var g=this.text();g&&g!==e.bb&&(f=a.a.Md(g,b.ownerDocument),a.a.g.set(b,c,{lb:f,bb:g,jd:!0}))}return f}e=arguments[0];this.ab!==n&&this.text("");a.a.g.set(b,c,{lb:e})};a.C.ia=function(a){this.F=a};a.C.ia.prototype=new a.C.F;a.C.ia.prototype.constructor=a.C.ia;a.C.ia.prototype.text=function(){if(0==arguments.length){var b=a.a.g.get(this.F,c)||{};b.bb===n&&b.lb&&(b.bb=b.lb.innerHTML);return b.bb}a.a.g.set(this.F,
c,{bb:arguments[0]})};a.b("templateSources",a.C);a.b("templateSources.domElement",a.C.F);a.b("templateSources.anonymousTemplate",a.C.ia)})();(function(){function b(b,c,d){var e;for(c=a.h.nextSibling(c);b&&(e=b)!==c;)b=a.h.nextSibling(e),d(e,b)}function c(c,d){if(c.length){var e=c[0],f=c[c.length-1],g=e.parentNode,h=a.ga.instance,m=h.preprocessNode;if(m){b(e,f,function(a,b){var c=a.previousSibling,d=m.call(h,a);d&&(a===e&&(e=d[0]||b),a===f&&(f=d[d.length-1]||c))});c.length=0;if(!e)return;e===f?c.push(e):
(c.push(e,f),a.a.Ua(c,g))}b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.vc(d,b)});b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.aa.cd(b,[d])});a.a.Ua(c,g)}}function d(a){return a.nodeType?a:0<a.length?a[0]:null}function e(b,e,f,h,m){m=m||{};var n=(b&&d(b)||f||{}).ownerDocument,B=m.templateEngine||g;a.kc.xd(f,B,n);f=B.renderTemplate(f,h,m,n);if("number"!=typeof f.length||0<f.length&&"number"!=typeof f[0].nodeType)throw Error("Template engine must return an array of DOM nodes");n=!1;switch(e){case "replaceChildren":a.h.va(b,
f);n=!0;break;case "replaceNode":a.a.Xc(b,f);n=!0;break;case "ignoreTargetNode":break;default:throw Error("Unknown renderMode: "+e);}n&&(c(f,h),m.afterRender&&a.u.G(m.afterRender,null,[f,h[m.as||"$data"]]),"replaceChildren"==e&&a.i.ma(b,a.i.H));return f}function f(b,c,d){return a.O(b)?b():"function"===typeof b?b(c,d):b}var g;a.gc=function(b){if(b!=n&&!(b instanceof a.ca))throw Error("templateEngine must inherit from ko.templateEngine");g=b};a.dc=function(b,c,h,m,t){h=h||{};if((h.templateEngine||g)==
n)throw Error("Set a template engine before calling renderTemplate");t=t||"replaceChildren";if(m){var x=d(m);return a.$(function(){var g=c&&c instanceof a.fa?c:new a.fa(c,null,null,null,{exportDependencies:!0}),n=f(b,g.$data,g),g=e(m,t,n,g,h);"replaceNode"==t&&(m=g,x=d(m))},null,{Sa:function(){return!x||!a.a.Sb(x)},l:x&&"replaceNode"==t?x.parentNode:x})}return a.aa.Xb(function(d){a.dc(b,c,h,d,"replaceNode")})};a.Qd=function(b,d,g,h,m){function x(b,c){a.u.G(a.a.ec,null,[h,b,u,g,r,c]);a.i.ma(h,a.i.H)}
function r(a,b){c(b,v);g.afterRender&&g.afterRender(b,a);v=null}function u(a,c){v=m.createChildContext(a,{as:z,noChildContext:g.noChildContext,extend:function(a){a.$index=c;z&&(a[z+"Index"]=c)}});var d=f(b,a,v);return e(h,"ignoreTargetNode",d,v,g)}var v,z=g.as,w=!1===g.includeDestroyed||a.options.foreachHidesDestroyed&&!g.includeDestroyed;if(w||g.beforeRemove||!a.Pc(d))return a.$(function(){var b=a.a.f(d)||[];"undefined"==typeof b.length&&(b=[b]);w&&(b=a.a.jb(b,function(b){return b===n||null===b||
!a.a.f(b._destroy)}));x(b)},null,{l:h});x(d.v());var A=d.subscribe(function(a){x(d(),a)},null,"arrayChange");A.l(h);return A};var h=a.a.g.Z(),m=a.a.g.Z();a.c.template={init:function(b,c){var d=a.a.f(c());if("string"==typeof d||"name"in d)a.h.Ea(b);else if("nodes"in d){d=d.nodes||[];if(a.O(d))throw Error('The "nodes" option must be a plain, non-observable array.');var e=d[0]&&d[0].parentNode;e&&a.a.g.get(e,m)||(e=a.a.Yb(d),a.a.g.set(e,m,!0));(new a.C.ia(b)).nodes(e)}else if(d=a.h.childNodes(b),0<d.length)e=
a.a.Yb(d),(new a.C.ia(b)).nodes(e);else throw Error("Anonymous template defined, but no template content was provided");return{controlsDescendantBindings:!0}},update:function(b,c,d,e,f){var g=c();c=a.a.f(g);d=!0;e=null;"string"==typeof c?c={}:(g="name"in c?c.name:b,"if"in c&&(d=a.a.f(c["if"])),d&&"ifnot"in c&&(d=!a.a.f(c.ifnot)),d&&!g&&(d=!1));"foreach"in c?e=a.Qd(g,d&&c.foreach||[],c,b,f):d?(d=f,"data"in c&&(d=f.createChildContext(c.data,{as:c.as,noChildContext:c.noChildContext,exportDependencies:!0})),
e=a.dc(g,d,c,b)):a.h.Ea(b);f=e;(c=a.a.g.get(b,h))&&"function"==typeof c.s&&c.s();a.a.g.set(b,h,!f||f.ja&&!f.ja()?n:f)}};a.m.Ra.template=function(b){b=a.m.ac(b);return 1==b.length&&b[0].unknown||a.m.Id(b,"name")?null:"This template engine does not support anonymous templates nested within its templates"};a.h.ea.template=!0})();a.b("setTemplateEngine",a.gc);a.b("renderTemplate",a.dc);a.a.Kc=function(a,c,d){if(a.length&&c.length){var e,f,g,h,m;for(e=f=0;(!d||e<d)&&(h=a[f]);++f){for(g=0;m=c[g];++g)if(h.value===
m.value){h.moved=m.index;m.moved=h.index;c.splice(g,1);e=g=0;break}e+=g}}};a.a.Pb=function(){function b(b,d,e,f,g){var h=Math.min,m=Math.max,k=[],l,p=b.length,q,n=d.length,r=n-p||1,v=p+n+1,u,w,z;for(l=0;l<=p;l++)for(w=u,k.push(u=[]),z=h(n,l+r),q=m(0,l-1);q<=z;q++)u[q]=q?l?b[l-1]===d[q-1]?w[q-1]:h(w[q]||v,u[q-1]||v)+1:q+1:l+1;h=[];m=[];r=[];l=p;for(q=n;l||q;)n=k[l][q]-1,q&&n===k[l][q-1]?m.push(h[h.length]={status:e,value:d[--q],index:q}):l&&n===k[l-1][q]?r.push(h[h.length]={status:f,value:b[--l],index:l}):
(--q,--l,g.sparse||h.push({status:"retained",value:d[q]}));a.a.Kc(r,m,!g.dontLimitMoves&&10*p);return h.reverse()}return function(a,d,e){e="boolean"===typeof e?{dontLimitMoves:e}:e||{};a=a||[];d=d||[];return a.length<d.length?b(a,d,"added","deleted",e):b(d,a,"deleted","added",e)}}();a.b("utils.compareArrays",a.a.Pb);(function(){function b(b,c,d,h,m){var k=[],l=a.$(function(){var l=c(d,m,a.a.Ua(k,b))||[];0<k.length&&(a.a.Xc(k,l),h&&a.u.G(h,null,[d,l,m]));k.length=0;a.a.Nb(k,l)},null,{l:b,Sa:function(){return!a.a.kd(k)}});
return{Y:k,$:l.ja()?l:n}}var c=a.a.g.Z(),d=a.a.g.Z();a.a.ec=function(e,f,g,h,m,k){function l(b){y={Aa:b,pb:a.ta(w++)};v.push(y);r||F.push(y)}function p(b){y=t[b];w!==y.pb.v()&&D.push(y);y.pb(w++);a.a.Ua(y.Y,e);v.push(y)}function q(b,c){if(b)for(var d=0,e=c.length;d<e;d++)a.a.D(c[d].Y,function(a){b(a,d,c[d].Aa)})}f=f||[];"undefined"==typeof f.length&&(f=[f]);h=h||{};var t=a.a.g.get(e,c),r=!t,v=[],u=0,w=0,z=[],A=[],C=[],D=[],F=[],y,I=0;if(r)a.a.D(f,l);else{if(!k||t&&t._countWaitingForRemove){var E=
a.a.Mb(t,function(a){return a.Aa});k=a.a.Pb(E,f,{dontLimitMoves:h.dontLimitMoves,sparse:!0})}for(var E=0,G,H,K;G=k[E];E++)switch(H=G.moved,K=G.index,G.status){case "deleted":for(;u<K;)p(u++);H===n&&(y=t[u],y.$&&(y.$.s(),y.$=n),a.a.Ua(y.Y,e).length&&(h.beforeRemove&&(v.push(y),I++,y.Aa===d?y=null:C.push(y)),y&&z.push.apply(z,y.Y)));u++;break;case "added":for(;w<K;)p(u++);H!==n?(A.push(v.length),p(H)):l(G.value)}for(;w<f.length;)p(u++);v._countWaitingForRemove=I}a.a.g.set(e,c,v);q(h.beforeMove,D);a.a.D(z,
h.beforeRemove?a.oa:a.removeNode);var M,O,P;try{P=e.ownerDocument.activeElement}catch(N){}if(A.length)for(;(E=A.shift())!=n;){y=v[E];for(M=n;E;)if((O=v[--E].Y)&&O.length){M=O[O.length-1];break}for(f=0;u=y.Y[f];M=u,f++)a.h.Wb(e,u,M)}for(E=0;y=v[E];E++){y.Y||a.a.extend(y,b(e,g,y.Aa,m,y.pb));for(f=0;u=y.Y[f];M=u,f++)a.h.Wb(e,u,M);!y.Ed&&m&&(m(y.Aa,y.Y,y.pb),y.Ed=!0,M=y.Y[y.Y.length-1])}P&&e.ownerDocument.activeElement!=P&&P.focus();q(h.beforeRemove,C);for(E=0;E<C.length;++E)C[E].Aa=d;q(h.afterMove,D);
q(h.afterAdd,F)}})();a.b("utils.setDomNodeChildrenFromArrayMapping",a.a.ec);a.ba=function(){this.allowTemplateRewriting=!1};a.ba.prototype=new a.ca;a.ba.prototype.constructor=a.ba;a.ba.prototype.renderTemplateSource=function(b,c,d,e){if(c=(9>a.a.W?0:b.nodes)?b.nodes():null)return a.a.la(c.cloneNode(!0).childNodes);b=b.text();return a.a.ua(b,e)};a.ba.Ma=new a.ba;a.gc(a.ba.Ma);a.b("nativeTemplateEngine",a.ba);(function(){a.$a=function(){var a=this.Hd=function(){if(!v||!v.tmpl)return 0;try{if(0<=v.tmpl.tag.tmpl.open.toString().indexOf("__"))return 2}catch(a){}return 1}();
this.renderTemplateSource=function(b,e,f,g){g=g||w;f=f||{};if(2>a)throw Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.");var h=b.data("precompiled");h||(h=b.text()||"",h=v.template(null,"{{ko_with $item.koBindingContext}}"+h+"{{/ko_with}}"),b.data("precompiled",h));b=[e.$data];e=v.extend({koBindingContext:e},f.templateOptions);e=v.tmpl(h,b,e);e.appendTo(g.createElement("div"));v.fragments={};return e};this.createJavaScriptEvaluatorBlock=function(a){return"{{ko_code ((function() { return "+
a+" })()) }}"};this.addTemplate=function(a,b){w.write("<script type='text/html' id='"+a+"'>"+b+"\x3c/script>")};0<a&&(v.tmpl.tag.ko_code={open:"__.push($1 || '');"},v.tmpl.tag.ko_with={open:"with($1) {",close:"} "})};a.$a.prototype=new a.ca;a.$a.prototype.constructor=a.$a;var b=new a.$a;0<b.Hd&&a.gc(b);a.b("jqueryTmplTemplateEngine",a.$a)})()})})();})();


/***/ }),

/***/ "./node_modules/bootstrap/dist/css/bootstrap.min.css":
/*!***********************************************************!*\
  !*** ./node_modules/bootstrap/dist/css/bootstrap.min.css ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./src/morse/components/flaggedWordsAccordion/flaggedWordsAccordion.ts":
/*!*****************************************************************************!*\
  !*** ./src/morse/components/flaggedWordsAccordion/flaggedWordsAccordion.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _flaggedWordsAccordion_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./flaggedWordsAccordion.html */ "./src/morse/components/flaggedWordsAccordion/flaggedWordsAccordion.html");

class FlaggedWordsAccordion {
    constructor(params) {
        this.vm = params.root;
        // console.log(this.vm)
        // console.log(params)
    }
}
// https://keepinguptodate.com/pages/2019/12/using-typescript-with-knockout/
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ viewModel: FlaggedWordsAccordion, template: _flaggedWordsAccordion_html__WEBPACK_IMPORTED_MODULE_0__["default"] });


/***/ }),

/***/ "./src/morse/components/morseImage/simpleImage.ts":
/*!********************************************************!*\
  !*** ./src/morse/components/morseImage/simpleImage.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _simpleImageTemplate_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./simpleImageTemplate.html */ "./src/morse/components/morseImage/simpleImageTemplate.html");

class SimpleImageTemplate {
    constructor(params) {
        // console.log(params)
        this.height = params.height;
        this.width = params.width;
        this.labelText = `${params.labelText}`;
        this.src = params.root.morseLoadImages().getSrc(params.icon);
    }
}
// https://keepinguptodate.com/pages/2019/12/using-typescript-with-knockout/
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ viewModel: SimpleImageTemplate, template: _simpleImageTemplate_html__WEBPACK_IMPORTED_MODULE_0__["default"] });


/***/ }),

/***/ "./src/morse/components/noiseAccordion/noiseAccordion.ts":
/*!***************************************************************!*\
  !*** ./src/morse/components/noiseAccordion/noiseAccordion.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _noiseAccordion_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./noiseAccordion.html */ "./src/morse/components/noiseAccordion/noiseAccordion.html");

class NoiseAccordion {
    constructor(params) {
        this.vm = params.root;
        // console.log(this.vm)
        // console.log(params)
    }
}
// https://keepinguptodate.com/pages/2019/12/using-typescript-with-knockout/
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ viewModel: NoiseAccordion, template: _noiseAccordion_html__WEBPACK_IMPORTED_MODULE_0__["default"] });


/***/ }),

/***/ "./src/morse/components/rssAccordion/rssAccordion.ts":
/*!***********************************************************!*\
  !*** ./src/morse/components/rssAccordion/rssAccordion.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _rssAccordion_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rssAccordion.html */ "./src/morse/components/rssAccordion/rssAccordion.html");

class RssAccordion {
    constructor(params) {
        this.vm = params.root;
        // console.log(this.vm)
        // console.log(params)
    }
}
// https://keepinguptodate.com/pages/2019/12/using-typescript-with-knockout/
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ viewModel: RssAccordion, template: _rssAccordion_html__WEBPACK_IMPORTED_MODULE_0__["default"] });


/***/ }),

/***/ "./src/morse/cookies/morseCookies.ts":
/*!*******************************************!*\
  !*** ./src/morse/cookies/morseCookies.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseCookies": () => (/* binding */ MorseCookies)
/* harmony export */ });
/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ "./node_modules/js-cookie/dist/js.cookie.mjs");
/* harmony import */ var _configs_licwdefaults_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../configs/licwdefaults.json */ "./src/configs/licwdefaults.json");
/* harmony import */ var _utils_general__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/general */ "./src/morse/utils/general.ts");



class MorseCookies {
}
MorseCookies.registeredHandlers = [];
MorseCookies.registerHandler = (handler) => {
    MorseCookies.registeredHandlers.push(handler);
};
MorseCookies.loadCookiesOrDefaults = (ctxt, whiteList, ifLoadSettings) => {
    // load any existing cookie values
    const cks = js_cookie__WEBPACK_IMPORTED_MODULE_0__["default"].get();
    const cksKeys = [];
    for (const key in cks) {
        cksKeys.push(key);
    }
    // ignore setting for which there's a cookie
    const workAry = ifLoadSettings ? _configs_licwdefaults_json__WEBPACK_IMPORTED_MODULE_1__.startupSettings.filter((x) => cksKeys.indexOf(x.key) < 0) : cksKeys;
    const keyResolver = ifLoadSettings ? (x) => x.key : (x) => x;
    const valResolver = ifLoadSettings ? (x) => x.value : (x) => cks[x];
    const specialHandling = [];
    const xtraspecialHandling = [];
    const otherHandling = [];
    if (workAry) {
        workAry.forEach((setting) => {
            const key = keyResolver(setting);
            let val = valResolver(setting);
            if (!whiteList || whiteList.indexOf(key) > -1) {
                switch (key) {
                    case 'syncWpm':
                    case 'wpm':
                    case 'fwpm':
                    case 'syncFreq':
                    case 'ditFrequency':
                    case 'dahFrequency':
                        xtraspecialHandling.push({ key, val });
                        break;
                    default:
                        if (typeof ctxt[key] !== 'undefined') {
                            if (key === 'xtraWordSpaceDits' && parseInt(val) === 0) {
                                // prior functionality may have this at 0 so make it 1
                                val = 1;
                            }
                            ctxt[key](_utils_general__WEBPACK_IMPORTED_MODULE_2__.GeneralUtils.booleanize(val));
                        }
                        else {
                            otherHandling.push({ key, val });
                        }
                }
            }
        });
        MorseCookies.registeredHandlers.forEach((handler) => {
            handler.handleCookies(xtraspecialHandling);
            handler.handleCookies(otherHandling);
        });
        specialHandling.forEach((x) => {
            console.log('in special handling');
            ctxt[x.key](x.val);
        });
    }
};


/***/ }),

/***/ "./src/morse/flaggedWords/flaggedWords.ts":
/*!************************************************!*\
  !*** ./src/morse/flaggedWords/flaggedWords.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FlaggedWords": () => (/* binding */ FlaggedWords)
/* harmony export */ });
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_0__);

class FlaggedWords {
    constructor() {
        this.addFlaggedWord = (word) => {
            if (!this.flaggedWords().trim()) {
                this.flaggedWords(this.flaggedWords().trim() + word);
            }
            else {
                // deal with double click which is also used to pick a word
                const msNow = Date.now();
                const msPassedSince = msNow - this.lastFlaggedWordMs;
                this.lastFlaggedWordMs = msNow;
                const threshold = 500;
                const words = this.flaggedWords().trim().split(' ');
                const lastWord = words[words.length - 1];
                if (lastWord === word && (msPassedSince < threshold)) {
                    // we have a double click scenario so remove it
                    words.pop();
                }
                else {
                    words.push(word);
                }
                if (words.length === 0) {
                    this.flaggedWords('');
                }
                else {
                    this.flaggedWords(words.join(' '));
                }
            }
        };
        this.lastFlaggedWordMs = Date.now();
        this.flaggedWords = knockout__WEBPACK_IMPORTED_MODULE_0__.observable('');
        this.flaggedWordsCount = knockout__WEBPACK_IMPORTED_MODULE_0__.computed(() => {
            if (!this.flaggedWords().trim()) {
                return 0;
            }
            return this.flaggedWords().trim().split(' ').length;
        }, this);
    }
}


/***/ }),

/***/ "./src/morse/images/morseLoadImages.ts":
/*!*********************************************!*\
  !*** ./src/morse/images/morseLoadImages.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseLoadImages": () => (/* binding */ MorseLoadImages)
/* harmony export */ });
/* harmony import */ var _assets_CW_Club_logo_clear400_300x300_png__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../assets/CW-Club-logo-clear400-300x300.png */ "./src/assets/CW-Club-logo-clear400-300x300.png");
/* harmony import */ var bootstrap_icons_icons_download_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bootstrap-icons/icons/download.svg */ "./node_modules/bootstrap-icons/icons/download.svg");
/* harmony import */ var bootstrap_icons_icons_volume_up_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bootstrap-icons/icons/volume-up.svg */ "./node_modules/bootstrap-icons/icons/volume-up.svg");
/* harmony import */ var bootstrap_icons_icons_github_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bootstrap-icons/icons/github.svg */ "./node_modules/bootstrap-icons/icons/github.svg");
/* harmony import */ var bootstrap_icons_icons_book_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bootstrap-icons/icons/book.svg */ "./node_modules/bootstrap-icons/icons/book.svg");
/* harmony import */ var bootstrap_icons_icons_flag_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bootstrap-icons/icons/flag.svg */ "./node_modules/bootstrap-icons/icons/flag.svg");
/* harmony import */ var bootstrap_icons_icons_lock_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! bootstrap-icons/icons/lock.svg */ "./node_modules/bootstrap-icons/icons/lock.svg");
/* harmony import */ var bootstrap_icons_icons_unlock_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! bootstrap-icons/icons/unlock.svg */ "./node_modules/bootstrap-icons/icons/unlock.svg");
/* harmony import */ var bootstrap_icons_icons_check_lg_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! bootstrap-icons/icons/check-lg.svg */ "./node_modules/bootstrap-icons/icons/check-lg.svg");
/* harmony import */ var bootstrap_icons_icons_circle_svg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! bootstrap-icons/icons/circle.svg */ "./node_modules/bootstrap-icons/icons/circle.svg");
/* harmony import */ var bootstrap_icons_icons_play_circle_svg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! bootstrap-icons/icons/play-circle.svg */ "./node_modules/bootstrap-icons/icons/play-circle.svg");
/* harmony import */ var bootstrap_icons_icons_pause_circle_svg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! bootstrap-icons/icons/pause-circle.svg */ "./node_modules/bootstrap-icons/icons/pause-circle.svg");
/* harmony import */ var bootstrap_icons_icons_eye_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! bootstrap-icons/icons/eye.svg */ "./node_modules/bootstrap-icons/icons/eye.svg");
/* harmony import */ var bootstrap_icons_icons_eye_slash_svg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! bootstrap-icons/icons/eye-slash.svg */ "./node_modules/bootstrap-icons/icons/eye-slash.svg");
/* harmony import */ var bootstrap_icons_icons_speedometer2_svg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! bootstrap-icons/icons/speedometer2.svg */ "./node_modules/bootstrap-icons/icons/speedometer2.svg");
/* harmony import */ var bootstrap_icons_icons_music_note_svg__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! bootstrap-icons/icons/music-note.svg */ "./node_modules/bootstrap-icons/icons/music-note.svg");
/* harmony import */ var bootstrap_icons_icons_graph_up_arrow_svg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! bootstrap-icons/icons/graph-up-arrow.svg */ "./node_modules/bootstrap-icons/icons/graph-up-arrow.svg");
/* harmony import */ var bootstrap_icons_icons_graph_down_arrow_svg__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! bootstrap-icons/icons/graph-down-arrow.svg */ "./node_modules/bootstrap-icons/icons/graph-down-arrow.svg");
/* harmony import */ var bootstrap_icons_icons_volume_mute_svg__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! bootstrap-icons/icons/volume-mute.svg */ "./node_modules/bootstrap-icons/icons/volume-mute.svg");
/* harmony import */ var bootstrap_icons_icons_upload_svg__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! bootstrap-icons/icons/upload.svg */ "./node_modules/bootstrap-icons/icons/upload.svg");
/* harmony import */ var bootstrap_icons_icons_gear_svg__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! bootstrap-icons/icons/gear.svg */ "./node_modules/bootstrap-icons/icons/gear.svg");
/* harmony import */ var bootstrap_icons_icons_skip_start_circle_svg__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! bootstrap-icons/icons/skip-start-circle.svg */ "./node_modules/bootstrap-icons/icons/skip-start-circle.svg");
/* harmony import */ var bootstrap_icons_icons_skip_backward_circle_svg__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! bootstrap-icons/icons/skip-backward-circle.svg */ "./node_modules/bootstrap-icons/icons/skip-backward-circle.svg");
/* harmony import */ var bootstrap_icons_icons_skip_forward_circle_svg__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! bootstrap-icons/icons/skip-forward-circle.svg */ "./node_modules/bootstrap-icons/icons/skip-forward-circle.svg");
/* harmony import */ var bootstrap_icons_icons_stop_circle_svg__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! bootstrap-icons/icons/stop-circle.svg */ "./node_modules/bootstrap-icons/icons/stop-circle.svg");
/* harmony import */ var bootstrap_icons_icons_list_ol_svg__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! bootstrap-icons/icons/list-ol.svg */ "./node_modules/bootstrap-icons/icons/list-ol.svg");
/* harmony import */ var bootstrap_icons_icons_shuffle_svg__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! bootstrap-icons/icons/shuffle.svg */ "./node_modules/bootstrap-icons/icons/shuffle.svg");
/* harmony import */ var bootstrap_icons_icons_soundwave_svg__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! bootstrap-icons/icons/soundwave.svg */ "./node_modules/bootstrap-icons/icons/soundwave.svg");
/* harmony import */ var bootstrap_icons_icons_rss_svg__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! bootstrap-icons/icons/rss.svg */ "./node_modules/bootstrap-icons/icons/rss.svg");
/* harmony import */ var bootstrap_icons_icons_hourglass_split_svg__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! bootstrap-icons/icons/hourglass-split.svg */ "./node_modules/bootstrap-icons/icons/hourglass-split.svg");
/* harmony import */ var bootstrap_icons_icons_stopwatch_svg__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! bootstrap-icons/icons/stopwatch.svg */ "./node_modules/bootstrap-icons/icons/stopwatch.svg");
/* harmony import */ var bootstrap_icons_icons_trash_svg__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! bootstrap-icons/icons/trash.svg */ "./node_modules/bootstrap-icons/icons/trash.svg");
/* harmony import */ var bootstrap_icons_icons_arrow_left_svg__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! bootstrap-icons/icons/arrow-left.svg */ "./node_modules/bootstrap-icons/icons/arrow-left.svg");
/* harmony import */ var bootstrap_icons_icons_exclamation_octagon_svg__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! bootstrap-icons/icons/exclamation-octagon.svg */ "./node_modules/bootstrap-icons/icons/exclamation-octagon.svg");
/* harmony import */ var bootstrap_icons_icons_bar_chart_svg__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! bootstrap-icons/icons/bar-chart.svg */ "./node_modules/bootstrap-icons/icons/bar-chart.svg");
/* harmony import */ var bootstrap_icons_icons_chat_quote_svg__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! bootstrap-icons/icons/chat-quote.svg */ "./node_modules/bootstrap-icons/icons/chat-quote.svg");
/* harmony import */ var bootstrap_icons_icons_arrow_repeat_svg__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! bootstrap-icons/icons/arrow-repeat.svg */ "./node_modules/bootstrap-icons/icons/arrow-repeat.svg");
/* harmony import */ var bootstrap_icons_icons_grid_3x3_gap_svg__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! bootstrap-icons/icons/grid-3x3-gap.svg */ "./node_modules/bootstrap-icons/icons/grid-3x3-gap.svg");






































class MorseLoadImages {
    constructor() {
        this.info = [];
        /* This lets any element use data-bind="attr:{src: morseLoadImages().getSrc('xyzImage') }" */
        /* this means many elements can use the same image a little easier and works better for lazy added elements */
        this.getSrc = (key) => {
            const target = this.info.find(x => x.key === key);
            return target.src;
        };
        this.info.push({ key: 'logoImage', src: _assets_CW_Club_logo_clear400_300x300_png__WEBPACK_IMPORTED_MODULE_0__ });
        this.info.push({ key: 'volumemuteImage', src: bootstrap_icons_icons_volume_mute_svg__WEBPACK_IMPORTED_MODULE_18__ });
        this.info.push({ key: 'downloadImage', src: bootstrap_icons_icons_download_svg__WEBPACK_IMPORTED_MODULE_1__ });
        this.info.push({ key: 'githubImage', src: bootstrap_icons_icons_github_svg__WEBPACK_IMPORTED_MODULE_3__ });
        this.info.push({ key: 'lockImage', src: bootstrap_icons_icons_lock_svg__WEBPACK_IMPORTED_MODULE_6__ });
        this.info.push({ key: 'unlockImage', src: bootstrap_icons_icons_unlock_svg__WEBPACK_IMPORTED_MODULE_7__ });
        this.info.push({ key: 'checkImage', src: bootstrap_icons_icons_check_lg_svg__WEBPACK_IMPORTED_MODULE_8__ });
        this.info.push({ key: 'circleImage', src: bootstrap_icons_icons_circle_svg__WEBPACK_IMPORTED_MODULE_9__ });
        this.info.push({ key: 'eyeImage', src: bootstrap_icons_icons_eye_svg__WEBPACK_IMPORTED_MODULE_12__ });
        this.info.push({ key: 'eyeslashImage', src: bootstrap_icons_icons_eye_slash_svg__WEBPACK_IMPORTED_MODULE_13__ });
        this.info.push({ key: 'skipbackImage', src: bootstrap_icons_icons_skip_backward_circle_svg__WEBPACK_IMPORTED_MODULE_22__ });
        this.info.push({ key: 'soundwaveImage', src: bootstrap_icons_icons_soundwave_svg__WEBPACK_IMPORTED_MODULE_27__ });
        this.info.push({ key: 'rssImage', src: bootstrap_icons_icons_rss_svg__WEBPACK_IMPORTED_MODULE_28__ });
        this.info.push({ key: 'hourglassImage', src: bootstrap_icons_icons_hourglass_split_svg__WEBPACK_IMPORTED_MODULE_29__ });
        this.info.push({ key: 'stopwatchImage', src: bootstrap_icons_icons_stopwatch_svg__WEBPACK_IMPORTED_MODULE_30__ });
        this.info.push({ key: 'uploadImage', src: bootstrap_icons_icons_upload_svg__WEBPACK_IMPORTED_MODULE_19__ });
        this.info.push({ key: 'arrowleftImage', src: bootstrap_icons_icons_arrow_left_svg__WEBPACK_IMPORTED_MODULE_32__ });
        this.info.push({ key: 'exclamationoctagonImage', src: bootstrap_icons_icons_exclamation_octagon_svg__WEBPACK_IMPORTED_MODULE_33__ });
        this.info.push({ key: 'trashImage', src: bootstrap_icons_icons_trash_svg__WEBPACK_IMPORTED_MODULE_31__ });
        this.info.push({ key: 'shuffleImage', src: bootstrap_icons_icons_shuffle_svg__WEBPACK_IMPORTED_MODULE_26__ });
        this.info.push({ key: 'numlistImage', src: bootstrap_icons_icons_list_ol_svg__WEBPACK_IMPORTED_MODULE_25__ });
        this.info.push({ key: 'stopImage', src: bootstrap_icons_icons_stop_circle_svg__WEBPACK_IMPORTED_MODULE_24__ });
        this.info.push({ key: 'skipforwardImage', src: bootstrap_icons_icons_skip_forward_circle_svg__WEBPACK_IMPORTED_MODULE_23__ });
        this.info.push({ key: 'skipstartImage', src: bootstrap_icons_icons_skip_start_circle_svg__WEBPACK_IMPORTED_MODULE_21__ });
        this.info.push({ key: 'gearImage', src: bootstrap_icons_icons_gear_svg__WEBPACK_IMPORTED_MODULE_20__ });
        this.info.push({ key: 'volumeImage', src: bootstrap_icons_icons_volume_up_svg__WEBPACK_IMPORTED_MODULE_2__ });
        this.info.push({ key: 'graphuparrowImage', src: bootstrap_icons_icons_graph_up_arrow_svg__WEBPACK_IMPORTED_MODULE_16__ });
        this.info.push({ key: 'graphdownarrowImage', src: bootstrap_icons_icons_graph_down_arrow_svg__WEBPACK_IMPORTED_MODULE_17__ });
        this.info.push({ key: 'musicnoteImage', src: bootstrap_icons_icons_music_note_svg__WEBPACK_IMPORTED_MODULE_15__ });
        this.info.push({ key: 'speedometerImage', src: bootstrap_icons_icons_speedometer2_svg__WEBPACK_IMPORTED_MODULE_14__ });
        this.info.push({ key: 'pauseImage', src: bootstrap_icons_icons_pause_circle_svg__WEBPACK_IMPORTED_MODULE_11__ });
        this.info.push({ key: 'playImage', src: bootstrap_icons_icons_play_circle_svg__WEBPACK_IMPORTED_MODULE_10__ });
        this.info.push({ key: 'flagImage', src: bootstrap_icons_icons_flag_svg__WEBPACK_IMPORTED_MODULE_5__ });
        this.info.push({ key: 'bookImage', src: bootstrap_icons_icons_book_svg__WEBPACK_IMPORTED_MODULE_4__ });
        this.info.push({ key: 'barchartImage', src: bootstrap_icons_icons_bar_chart_svg__WEBPACK_IMPORTED_MODULE_34__ });
        this.info.push({ key: 'chatquoteImage', src: bootstrap_icons_icons_chat_quote_svg__WEBPACK_IMPORTED_MODULE_35__ });
        this.info.push({ key: 'arrowrepeatImage', src: bootstrap_icons_icons_arrow_repeat_svg__WEBPACK_IMPORTED_MODULE_36__ });
        this.info.push({ key: 'grid3x3gapImage', src: bootstrap_icons_icons_grid_3x3_gap_svg__WEBPACK_IMPORTED_MODULE_37__ });
        const dupes = [];
        /* Accomodate where id="xyzImage" This is discouraged because good practice not to duplicate ids */
        /* see below getSrc */
        this.info.forEach((i) => {
            const dupe = dupes.find(y => y === i.key);
            if (!dupe) {
                const target = document.getElementById(i.key);
                if (target) {
                    target.src = i.src;
                }
                dupes.push(i.key);
            }
            else {
                console.log(`Warning dupe image: ${i.key}`);
            }
        });
    }
}


/***/ }),

/***/ "./src/morse/koextenders/morseExtenders.ts":
/*!*************************************************!*\
  !*** ./src/morse/koextenders/morseExtenders.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseExtenders": () => (/* binding */ MorseExtenders)
/* harmony export */ });
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! js-cookie */ "./node_modules/js-cookie/dist/js.cookie.mjs");


class MorseExtenders {
}
MorseExtenders.init = (ctxt) => {
    knockout__WEBPACK_IMPORTED_MODULE_0__.extenders.saveCookie = (target, option) => {
        target.subscribe((newValue) => {
            js_cookie__WEBPACK_IMPORTED_MODULE_1__["default"].set(option, newValue, { expires: 365 });
        });
        return target;
    };
    knockout__WEBPACK_IMPORTED_MODULE_0__.extenders.showingChange = (target, option) => {
        target.subscribe((newValue) => {
            if (ctxt.showRaw()) {
                ctxt.rawText(newValue);
            }
        });
        return target;
    };
    knockout__WEBPACK_IMPORTED_MODULE_0__.extenders.showRawChange = (target, option) => {
        target.subscribe((newValue) => {
            // console.log(option + ": " + newValue);
            if (newValue) {
                ctxt.showingText(ctxt.rawText());
            }
            else {
                ctxt.showingText('');
            }
        });
        return target;
    };
    knockout__WEBPACK_IMPORTED_MODULE_0__.extenders.setVolume = (target, option) => {
        target.subscribe((newValue) => {
            ctxt.morseWordPlayer.setVolume(newValue);
        });
        return target;
    };
    knockout__WEBPACK_IMPORTED_MODULE_0__.extenders.setNoiseVolume = (target, option) => {
        target.subscribe((newValue) => {
            ctxt.morseWordPlayer.setNoiseVolume(newValue);
        });
        return target;
    };
    knockout__WEBPACK_IMPORTED_MODULE_0__.extenders.setNoiseType = (target, option) => {
        target.subscribe((newValue) => {
            const config = ctxt.getMorseStringToWavBufferConfig('');
            config.noise.type = ctxt.noiseEnabled() ? newValue : 'off';
            ctxt.morseWordPlayer.setNoiseType(config);
        });
        return target;
    };
    knockout__WEBPACK_IMPORTED_MODULE_0__.extenders.undoIsShuffled = (target, option) => {
        target.subscribe((newValue) => {
            if (ctxt.isShuffled()) {
                // we are shuffled, but are we showing the correct text?
                // idea is that if something changes the text, it breaks out of shuffle
                if (ctxt.lastShuffled !== newValue) {
                    ctxt.isShuffled(false);
                }
            }
        });
        return target;
    };
    knockout__WEBPACK_IMPORTED_MODULE_0__.extenders.dummyLogger = (target, option) => {
        target.subscribe((newValue) => {
            console.log(`dummyloggerextension option:${option} newValue:${newValue}`);
        });
        return target;
    };
};
MorseExtenders.apply = (ctxt) => {
    ctxt.hideList.extend({ saveCookie: 'hideList' });
    ctxt.showingText.extend({ showingChange: 'showingChange' });
    ctxt.showRaw.extend({ showRawChange: 'showRawChange' });
    ctxt.preSpace.extend({ saveCookie: 'preSpace' });
    ctxt.xtraWordSpaceDits.extend({ saveCookie: 'xtraWordSpaceDits' });
    ctxt.volume.extend({ saveCookie: 'volume' }).extend({ setVolume: 'volume' });
    ctxt.noiseVolume.extend({ saveCookie: 'noiseVolume' }).extend({ setNoiseVolume: 'noiseVolume' });
    ctxt.noiseType.extend({ saveCookie: 'noiseType' }).extend({ setNoiseType: 'noiseType' });
    // ctxt.rssEnabled.extend({ initRss: 'rssEnabled' })
    ctxt.showExpertSettings.extend({ saveCookie: 'showExpertSettings' });
    ctxt.cardFontPx.extend({ saveCookie: 'cardFontPx' });
    ctxt.rawText.extend({ undoIsShuffled: 'rawText' });
};


/***/ }),

/***/ "./src/morse/lessons/morseLessonPlugin.ts":
/*!************************************************!*\
  !*** ./src/morse/lessons/morseLessonPlugin.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MorseLessonPlugin)
/* harmony export */ });
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordfilesconfigs_wordlists_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../wordfilesconfigs/wordlists.json */ "./src/wordfilesconfigs/wordlists.json");
/* harmony import */ var _cookies_morseCookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cookies/morseCookies */ "./src/morse/cookies/morseCookies.ts");
/* harmony import */ var _morseLessonFinder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../morseLessonFinder */ "./src/morse/morseLessonFinder.js");
/* harmony import */ var _utils_general__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/general */ "./src/morse/utils/general.ts");





class MorseLessonPlugin {
    constructor(morseSettings, setTextCallBack, timeEstimateCallback) {
        // end constructor
        this.doCustomGroup = () => {
            if (this.customGroup()) {
                const data = { letters: this.customGroup().trim().replace(/ /g, '') };
                this.randomWordList(data, true);
                this.closeLessonAccordianIfAutoClosing();
            }
        };
        this.randomWordList = (data, ifCustom) => {
            let str = '';
            const splitWithProsignsAndStcikys = (s) => {
                let stickys = '';
                if (this.ifStickySets() && this.stickySets().trim()) {
                    stickys = '|' + this.stickySets().toUpperCase().trim().replace(/ {2}/g, ' ').replace(/ /g, '|');
                }
                const regStr = `<.*?>${stickys}|[^<.*?>]|\\W`;
                // console.log(regStr)
                const re = new RegExp(regStr, 'g');
                const match = s.toUpperCase().match(re);
                // console.log(match)
                return match;
            };
            const chars = splitWithProsignsAndStcikys(data.letters);
            let seconds = 0;
            const controlTime = (this.ifOverrideTime() || ifCustom) ? (this.overrideMins() * 60) : data.practiceSeconds;
            const minWordSize = (this.ifOverrideMinMax() || ifCustom) ? this.overrideMin() : data.minWordSize;
            const maxWordSize = (this.ifOverrideMinMax() || ifCustom) ? this.overrideMax() : data.maxWordSize;
            // Fn to generate random number min/max inclusive
            // https://www.geeksforgeeks.org/how-to-generate-random-number-in-given-range-using-javascript/
            const randomNumber = (min, max) => {
                min = Math.ceil(min);
                max = Math.floor(max);
                return Math.floor(Math.random() * (max - min + 1)) + min;
            };
            do {
                let word = '';
                if (this.randomizeLessons()) {
                    // determine word length
                    const wordLength = minWordSize === maxWordSize ? minWordSize : randomNumber(minWordSize, maxWordSize);
                    for (let j = 1; j <= wordLength; j++) { // for each letter
                        // determine the letter
                        word += chars[randomNumber(1, chars.length) - 1];
                    }
                }
                else {
                    word = data.letters;
                }
                str += seconds > 0 ? (' ' + word.toUpperCase()) : word.toUpperCase();
                const est = this.getTimeEstimate(str);
                seconds = est.timeCalcs.totalTime / 1000;
            } while (seconds < controlTime);
            this.setText(str);
        };
        this.getWordList = (filename) => {
            const isText = filename.endsWith('txt');
            const afterFound = (result) => {
                if (result.found) {
                    if (isText) {
                        this.setText(result.data);
                    }
                    else {
                        this.randomWordList(result.data, false);
                    }
                }
                else {
                    this.setText(`ERROR: Couldn't find ${filename} or it lacks .txt or .json extension.`);
                }
            };
            _morseLessonFinder__WEBPACK_IMPORTED_MODULE_3__.MorseLessonFileFinder.getMorseLessonFile(filename, afterFound);
        };
        this.setUserTargetInitialized = () => {
            this.userTargetInitialized = true;
        };
        this.setSelectedClassInitialized = () => {
            this.selectedClassInitialized = true;
        };
        this.setLetterGroupInitialized = () => {
            // console.log('setlettergroupinitialized')
            this.letterGroupInitialized = true;
        };
        this.setDisplaysInitialized = () => {
            this.displaysInitialized = true;
        };
        this.changeUserTarget = (userTarget) => {
            if (this.userTargetInitialized) {
                this.userTarget(userTarget);
                // console.log('usertarget')
            }
        };
        this.changeSelectedClass = (selectedClass) => {
            if (this.selectedClassInitialized) {
                this.selectedClass(selectedClass);
            }
        };
        this.setLetterGroup = (letterGroup) => {
            if (this.letterGroupInitialized) {
                console.log('setlettergroup');
                this.letterGroup(letterGroup);
            }
        };
        this.closeLessonAccordianIfAutoClosing = () => {
            if (this.autoCloseLessonAccordion()) {
                const elem = document.getElementById('lessonAccordianButton');
                elem.click();
            }
        };
        this.setDisplaySelected = (display) => {
            if (!display.isDummy) {
                if (this.displaysInitialized) {
                    this.selectedDisplay(display);
                    this.morseSettings.misc.newlineChunking(display.newlineChunking);
                    // setText(`when we have lesson files, load ${selectedDisplay().fileName}`)
                    this.getWordList(this.selectedDisplay().fileName);
                    this.closeLessonAccordianIfAutoClosing();
                }
            }
        };
        this.initializeWordList = () => {
            this.wordLists(_wordfilesconfigs_wordlists_json__WEBPACK_IMPORTED_MODULE_1__.fileOptions);
        };
        // cookie handling
        this.handleCookies = (cookies) => {
            if (!cookies) {
                return;
            }
            let target = cookies.find(x => x.key === this.autoCloseCookieName);
            if (target) {
                this.autoCloseLessonAccordion(_utils_general__WEBPACK_IMPORTED_MODULE_4__.GeneralUtils.booleanize(target.val));
            }
            target = cookies.find(x => x.key === 'stickySets');
            if (target) {
                this.stickySets(_utils_general__WEBPACK_IMPORTED_MODULE_4__.GeneralUtils.booleanize(target.val));
            }
            target = cookies.find(x => x.key === 'ifStickySets');
            if (target) {
                this.ifStickySets(_utils_general__WEBPACK_IMPORTED_MODULE_4__.GeneralUtils.booleanize(target.val));
            }
        };
        this.handleCookie = (cookie) => { };
        _cookies_morseCookies__WEBPACK_IMPORTED_MODULE_2__.MorseCookies.registerHandler(this);
        this.autoCloseCookieName = 'autoCloseLessonAccordian';
        this.morseSettings = morseSettings;
        this.autoCloseLessonAccordion = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(false).extend({ saveCookie: this.autoCloseCookieName });
        this.userTarget = knockout__WEBPACK_IMPORTED_MODULE_0__.observable('STUDENT');
        this.selectedClass = knockout__WEBPACK_IMPORTED_MODULE_0__.observable('');
        this.userTargetInitialized = false;
        this.selectedClassInitialized = false;
        this.letterGroupInitialized = false;
        this.displaysInitialized = false;
        this.letterGroup = knockout__WEBPACK_IMPORTED_MODULE_0__.observable('');
        this.selectedDisplay = knockout__WEBPACK_IMPORTED_MODULE_0__.observable({});
        this.wordLists = knockout__WEBPACK_IMPORTED_MODULE_0__.observableArray([]);
        this.setText = setTextCallBack;
        this.getTimeEstimate = timeEstimateCallback;
        this.ifStickySets = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(false);
        this.stickySets = knockout__WEBPACK_IMPORTED_MODULE_0__.observable('');
        this.randomizeLessons = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(true);
        this.ifOverrideTime = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(false);
        this.overrideMins = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(2);
        this.customGroup = knockout__WEBPACK_IMPORTED_MODULE_0__.observable('');
        this.ifOverrideMinMax = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(false);
        this.trueOverrideMin = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(3);
        this.trueOverrideMax = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(3);
        this.syncSize = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(true);
        this.overrideMin = knockout__WEBPACK_IMPORTED_MODULE_0__.pureComputed({
            read: () => {
                return this.trueOverrideMin();
            },
            write: (value) => {
                this.trueOverrideMin(value);
                if (this.syncSize()) {
                    this.trueOverrideMax(value);
                }
            },
            owner: this
        });
        this.overrideMax = knockout__WEBPACK_IMPORTED_MODULE_0__.pureComputed({
            read: () => {
                if (!this.syncSize()) {
                    return this.trueOverrideMax();
                }
                else {
                    this.trueOverrideMax(this.trueOverrideMin());
                    return this.trueOverrideMin();
                }
            },
            write: (value) => {
                if (value >= this.trueOverrideMin()) {
                    this.trueOverrideMax(value);
                }
            },
            owner: this
        });
        this.userTargets = knockout__WEBPACK_IMPORTED_MODULE_0__.computed(() => {
            const targs = [];
            this.wordLists().forEach((x) => {
                if (!targs.find((y) => y === x.userTarget)) {
                    targs.push(x.userTarget);
                }
            });
            return targs;
        }, this);
        this.classes = knockout__WEBPACK_IMPORTED_MODULE_0__.computed(() => {
            const cls = [];
            this.wordLists().forEach((x) => {
                if (!cls.find((y) => y === x.class)) {
                    cls.push(x.class);
                }
            });
            return cls;
        }, this);
        this.letterGroups = knockout__WEBPACK_IMPORTED_MODULE_0__.computed(() => {
            this.letterGroupInitialized = false;
            this.letterGroup('');
            const lgs = [];
            if (this.selectedClass() === '' || this.userTarget() === '') {
                const missing = [];
                if (this.selectedClass() === '') {
                    missing.push('class');
                }
                if (this.userTarget() === '') {
                    missing.push('user');
                }
                return [`Select ${missing.join(', ')}`];
            }
            this.wordLists().filter((list) => list.class === this.selectedClass() && list.userTarget === this.userTarget())
                .forEach((x) => {
                if (!lgs.find((y) => y === x.letterGroup)) {
                    lgs.push(x.letterGroup);
                }
            });
            return lgs;
        }, this);
        this.displays = knockout__WEBPACK_IMPORTED_MODULE_0__.computed(() => {
            this.displaysInitialized = false;
            this.selectedDisplay({});
            const dps = [];
            if (this.selectedClass() === '' || this.userTarget() === '' || this.letterGroup() === '') {
                return [{ display: 'Select wordlist', fileName: 'dummy.txt', isDummy: true }];
            }
            this.wordLists().filter((list) => list.class === this.selectedClass() &&
                list.userTarget === this.userTarget() &&
                list.letterGroup === this.letterGroup())
                .forEach((x) => {
                if (!dps.find((y) => y === x.display)) {
                    dps.push(x);
                }
            });
            return dps;
        }, this);
    }
}


/***/ }),

/***/ "./src/morse/morse.ts":
/*!****************************!*\
  !*** ./src/morse/morse.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseViewModel": () => (/* binding */ MorseViewModel)
/* harmony export */ });
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_morseStringUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/morseStringUtils */ "./src/morse/utils/morseStringUtils.ts");
/* harmony import */ var _player_soundmakers_SoundMakerConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player/soundmakers/SoundMakerConfig */ "./src/morse/player/soundmakers/SoundMakerConfig.ts");
/* harmony import */ var _player_morseWordPlayer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./player/morseWordPlayer */ "./src/morse/player/morseWordPlayer.ts");
/* harmony import */ var _lessons_morseLessonPlugin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lessons/morseLessonPlugin */ "./src/morse/lessons/morseLessonPlugin.ts");
/* harmony import */ var _images_morseLoadImages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./images/morseLoadImages */ "./src/morse/images/morseLoadImages.ts");
/* harmony import */ var _shortcutKeys_morseShortcutKeys__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./shortcutKeys/morseShortcutKeys */ "./src/morse/shortcutKeys/morseShortcutKeys.ts");
/* harmony import */ var _koextenders_morseExtenders__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./koextenders/morseExtenders */ "./src/morse/koextenders/morseExtenders.ts");
/* harmony import */ var _cookies_morseCookies__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./cookies/morseCookies */ "./src/morse/cookies/morseCookies.ts");
/* harmony import */ var _settings_settings__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./settings/settings */ "./src/morse/settings/settings.ts");
/* harmony import */ var _voice_MorseVoice__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./voice/MorseVoice */ "./src/morse/voice/MorseVoice.ts");
/* harmony import */ var _flaggedWords_flaggedWords__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./flaggedWords/flaggedWords */ "./src/morse/flaggedWords/flaggedWords.ts");
/* harmony import */ var _player_soundmakers_NoiseConfig__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./player/soundmakers/NoiseConfig */ "./src/morse/player/soundmakers/NoiseConfig.ts");
/* harmony import */ var _rss_morseRssPlugin__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./rss/morseRssPlugin */ "./src/morse/rss/morseRssPlugin.ts");
/* harmony import */ var _rss_RssConfig__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./rss/RssConfig */ "./src/morse/rss/RssConfig.ts");
/* harmony import */ var _components_morseImage_simpleImage__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/morseImage/simpleImage */ "./src/morse/components/morseImage/simpleImage.ts");
/* harmony import */ var _components_noiseAccordion_noiseAccordion__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/noiseAccordion/noiseAccordion */ "./src/morse/components/noiseAccordion/noiseAccordion.ts");
/* harmony import */ var _components_rssAccordion_rssAccordion__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/rssAccordion/rssAccordion */ "./src/morse/components/rssAccordion/rssAccordion.ts");
/* harmony import */ var _components_flaggedWordsAccordion_flaggedWordsAccordion__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/flaggedWordsAccordion/flaggedWordsAccordion */ "./src/morse/components/flaggedWordsAccordion/flaggedWordsAccordion.ts");



















class MorseViewModel {
    // END KO observables declarations
    constructor() {
        this.textBuffer = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable('');
        this.hideList = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(true);
        this.currentSentanceIndex = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(0);
        this.currentIndex = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(0);
        this.playerPlaying = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(false);
        this.lastFullPlayTime = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(new Date(1900, 0, 0).getMilliseconds());
        this.preSpace = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(0);
        this.preSpaceUsed = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(false);
        this.xtraWordSpaceDits = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(0);
        this.isShuffled = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(false);
        this.trailReveal = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(false);
        this.preShuffled = '';
        this.rawText = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable();
        this.showingText = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable('');
        this.showRaw = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(true);
        this.volume = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable();
        this.noiseEnabled = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(false);
        this.noiseVolume = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(2);
        this.noiseType = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable('off');
        this.lastPlayFullStart = null;
        this.ifParseSentences = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(false);
        this.runningPlayMs = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(0);
        this.lastPartialPlayStart = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable();
        this.isPaused = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(false);
        this.morseLoadImages = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable();
        this.showExpertSettings = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(false);
        this.cardFontPx = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable();
        this.loop = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(false);
        // note this is whether you see any cards at all,
        // not whether the words on them are obscured
        this.cardsVisible = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(true);
        this.trailPreDelay = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(0);
        this.trailPostDelay = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(0);
        this.trailFinal = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(1);
        this.maxRevealedTrail = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(-1);
        this.isDev = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(false);
        this.riseTimeConstant = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(0.001);
        this.decayTimeConstant = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(0.001);
        this.riseMsOffset = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(1.5);
        this.decayMsOffset = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(1.5);
        this.smoothing = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(true);
        this.morseDisabled = knockout__WEBPACK_IMPORTED_MODULE_0___default().observable(false);
        this.lastShuffled = '';
        this.flaggedWordsLogCount = 0;
        this.flaggedWordsLog = [];
        // END CONSTRUCTOR
        this.logToFlaggedWords = (s) => {
            /* this.flaggedWordsLogCount++
            // const myPieces = this.flaggedWords.flaggedWords().split('\n')
            // console.log(myPieces)
            this.flaggedWordsLog[0] = { timeStamp: 0, msg: `LOGGED LINES:${this.flaggedWordsLogCount}` }
            const timeStamp = new Date()
            this.flaggedWordsLog[this.flaggedWordsLog.length] = { timeStamp, msg: `${s}` }
            const myPieces = this.flaggedWordsLog.map((e, i, a) => {
              return `${i < 2 ? e.timeStamp : e.timeStamp - a[i - 1].timeStamp}: ${e.msg}`
            })
            const out = myPieces.filter(s => s).join('\n')
            this.flaggedWords.flaggedWords(out) */
        };
        // helper
        // https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript
        this.getParameterByName = (name, url = window.location.href) => {
            // eslint-disable-next-line no-useless-escape
            name = name.replace(/[\[\]]/g, '\\$&');
            const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');
            const results = regex.exec(url);
            if (!results)
                return null;
            if (!results[2])
                return '';
            return decodeURIComponent(results[2].replace(/\+/g, ' '));
        };
        this.changeSentance = () => {
            this.currentIndex(0);
        };
        this.setText = (s) => {
            if (this.showRaw()) {
                this.showingText(s);
            }
            else {
                this.rawText(s);
            }
        };
        this.sentences = knockout__WEBPACK_IMPORTED_MODULE_0___default().computed(() => {
            if (!this.rawText()) {
                return [];
            }
            return _utils_morseStringUtils__WEBPACK_IMPORTED_MODULE_1__["default"].getSentences(this.rawText(), !this.ifParseSentences(), this.settings.misc.newlineChunking());
        }, this);
        this.sentenceMax = knockout__WEBPACK_IMPORTED_MODULE_0___default().computed(() => {
            return this.sentences().length - 1;
        }, this);
        this.words = knockout__WEBPACK_IMPORTED_MODULE_0___default().computed(() => {
            return this.sentences()[this.currentSentanceIndex()];
        }, this);
        this.shuffleWords = (fromLoopRestart = false) => {
            // if it's not currently shuffled, or we're in a loop, re-shuffle
            if (!this.isShuffled() || fromLoopRestart) {
                const hasPhrases = this.rawText().indexOf('\n') !== -1 && this.settings.misc.newlineChunking();
                // if we're in a loop or otherwise already shuffled, we don't want to loose the preShuffled
                if (!this.isShuffled()) {
                    this.preShuffled = this.rawText();
                }
                this.lastShuffled = this.rawText().split(hasPhrases ? '\n' : ' ').sort(() => { return 0.5 - Math.random(); }).join(hasPhrases ? '\n' : ' ');
                this.setText(this.lastShuffled);
                if (!this.isShuffled()) {
                    this.isShuffled(true);
                }
            }
            else {
                // otherwise, user wants things put back the way they were
                this.setText(this.preShuffled);
                this.isShuffled(false);
            }
        };
        this.incrementIndex = () => {
            if (this.currentIndex() < this.words().length - 1) {
                this.currentIndex(this.currentIndex() + 1);
            }
            else {
                // move to next sentence
                if (this.currentSentanceIndex() < this.sentenceMax()) {
                    this.currentSentanceIndex(Number(this.currentSentanceIndex()) + 1);
                    this.currentIndex(0);
                }
            }
        };
        this.decrementIndex = () => {
            this.morseWordPlayer.pause(() => {
                if (this.currentIndex() > 0 && this.words().length > 1) {
                    this.currentIndex(this.currentIndex() - 1);
                    // experience shows it is good to put a little pause here
                    // so they dont' blur together
                    setTimeout(this.doPlay, 1000);
                }
            }, false);
        };
        this.fullRewind = () => {
            this.currentSentanceIndex(0);
            this.currentIndex(0);
        };
        this.sentanceRewind = () => {
            this.currentIndex(0);
        };
        this.setWordIndex = (index) => {
            if (!this.playerPlaying()) {
                this.currentIndex(index);
            }
            else {
                this.doPause(false, false, false);
                this.currentIndex(index);
                this.doPlay(false, false);
            }
        };
        this.setFlagged = () => {
            if (this.flaggedWords.flaggedWords().trim()) {
                this.doPause(true, false, false);
                this.setText(this.flaggedWords.flaggedWords());
                this.fullRewind();
                document.getElementById('btnFlaggedWordsAccordianButton').click();
            }
        };
        this.getMorseStringToWavBufferConfig = (text) => {
            const config = new _player_soundmakers_SoundMakerConfig__WEBPACK_IMPORTED_MODULE_2__.SoundMakerConfig();
            config.word = _utils_morseStringUtils__WEBPACK_IMPORTED_MODULE_1__["default"].doReplacements(text);
            config.wpm = parseInt(this.settings.speed.wpm());
            config.fwpm = parseInt(this.settings.speed.fwpm());
            config.ditFrequency = parseInt(this.settings.frequency.ditFrequency());
            config.dahFrequency = parseInt(this.settings.frequency.dahFrequency());
            config.prePaddingMs = this.preSpaceUsed() ? 0 : this.preSpace() * 1000;
            // note this was changed so UI is min 1 meaning 0, 1=>7, 2=>14 etc
            config.xtraWordSpaceDits = (parseInt(this.xtraWordSpaceDits()) - 1) * 7;
            config.volume = parseInt(this.volume());
            config.noise = new _player_soundmakers_NoiseConfig__WEBPACK_IMPORTED_MODULE_12__.NoiseConfig();
            config.noise.type = this.noiseEnabled() ? this.noiseType() : 'off';
            config.noise.volume = parseInt(this.noiseVolume());
            config.playerPlaying = this.playerPlaying();
            config.riseTimeConstant = parseFloat(this.riseTimeConstant());
            config.decayTimeConstant = parseFloat(this.decayTimeConstant());
            config.riseMsOffset = parseFloat(this.riseMsOffset());
            config.decayMsOffset = parseFloat(this.decayMsOffset());
            // suppress wordspaces when using speak so "thinking time" will control
            if (this.morseVoice) {
                config.trimLastWordSpace = this.morseVoice.voiceEnabled();
                config.voiceEnabled = this.morseVoice.voiceEnabled();
            }
            config.morseDisabled = this.morseDisabled();
            return config;
        };
        this.doPlay = (playJustEnded, fromPlayButton) => {
            if (!this.rawText().trim()) {
                return;
            }
            // we get here several ways:
            // 1. user presses play for the first time
            // 1a. set prespaceused to false, so it will get used.
            // 1b. set the elapsed ms to 0
            // 2. user presses play after a pause
            // 2a. set prespaceused to false, so it will get used again.
            // 3. we just finished playing a word
            // 4. user might press play to re-play a word
            const wasPlayerPlaying = this.playerPlaying();
            const freshStart = fromPlayButton && !wasPlayerPlaying;
            if (!this.lastPlayFullStart || (this.lastFullPlayTime() > this.lastPlayFullStart)) {
                this.lastPlayFullStart = Date.now();
            }
            this.isPaused(false);
            this.playerPlaying(true);
            if (!playJustEnded) {
                this.preSpaceUsed(false);
            }
            if (freshStart) {
                this.runningPlayMs(0);
                // clear the voice cache
                this.voiceBuffer = [];
                // prime the pump for safari
                this.morseVoice.primeThePump();
            }
            // experience shows it is good to put a little pause here when user forces us here,
            // e.g. hitting back or play b/c word was misunderstood,
            // so they dont' blur together.
            if (this.doPlayTimeout) {
                clearTimeout(this.doPlayTimeout);
            }
            // set a time which will cause pause (in case something else was playing),
            // passing in a callback to then play
            this.doPlayTimeout = setTimeout(() => {
                this.morseWordPlayer.pause(() => {
                    // help trailing reveal, max should always be one behind before we're about to play
                    this.maxRevealedTrail(this.currentIndex() - 1);
                    const config = this.getMorseStringToWavBufferConfig(this.words()[this.currentIndex()]);
                    this.morseWordPlayer.play(config, this.playEnded);
                    this.lastPartialPlayStart(Date.now());
                    this.preSpaceUsed(true);
                    // pause wants killNoiseparater
                }, false);
            }, 
            // timeout parameters
            playJustEnded || fromPlayButton ? 0 : 1000);
        };
        this.playEnded = (fromVoiceOrTrail) => {
            // voice or trail have timers that might call this after user has hit stop
            // specifically they have built in pauses for "thinking time" during which the user
            // might have hit stop
            // note that if speaking and trailing, speaking is "in the driver's seat"
            // and the trailing delays are ignored
            // TODO: the code here is getting a little nasty. probably needs to be refactored to manage the states
            // and rules (once they're all finalized). leaving as is because rules are still a little unstable.
            if (fromVoiceOrTrail && !this.playerPlaying()) {
                return;
            }
            // where are we in the words to process?
            const isNotLastWord = this.currentIndex() < this.words().length - 1;
            const isNotLastSentence = this.currentSentanceIndex() < this.sentenceMax();
            const anyNewLines = this.rawText().indexOf('\n') !== -1;
            const needToSpeak = this.morseVoice.voiceEnabled() && !fromVoiceOrTrail;
            const needToTrail = this.trailReveal() && !fromVoiceOrTrail;
            const speakAndTrail = needToSpeak && needToTrail;
            const noDelays = !needToSpeak && !needToTrail;
            const advanceTrail = () => {
                // note we eliminate the trail delays if speaking
                if (this.trailReveal()) {
                    setTimeout(() => {
                        this.maxRevealedTrail(this.maxRevealedTrail() + 1);
                        setTimeout(() => {
                            // if speak is in the driver's seat it will call this,
                            // if not then trail will
                            if (!speakAndTrail) {
                                this.playEnded(true);
                            }
                        }, speakAndTrail ? 0 : this.trailPostDelay() * 1000);
                    }, speakAndTrail ? 0 : this.trailPreDelay() * 1000);
                }
            };
            const finalizeTrail = (finalCallback) => {
                if (this.trailReveal()) {
                    setTimeout(() => {
                        this.maxRevealedTrail(-1);
                        finalCallback();
                    }, this.trailFinal() * 1000);
                }
            };
            if (noDelays) {
                // no speaking, so play more morse
                this.runningPlayMs(this.runningPlayMs() + (Date.now() - this.lastPartialPlayStart()));
                if (isNotLastWord) {
                    this.incrementIndex();
                    this.doPlay(true, false);
                }
                else if (isNotLastSentence) {
                    // move to next sentence
                    this.currentSentanceIndex(Number(this.currentSentanceIndex()) + 1);
                    this.currentIndex(0);
                    this.doPlay(true, false);
                }
                else {
                    // nothing more to play
                    const finalToDo = () => this.doPause(true, false, false);
                    // trailing may want a linger
                    if (this.trailReveal()) {
                        finalizeTrail(finalToDo);
                    }
                    else {
                        finalToDo();
                    }
                }
            }
            if (needToSpeak) {
                // speak the voice buffer if there's a newline or nothing more to play
                const currentWord = this.words()[this.currentIndex()];
                const hasNewline = currentWord.indexOf('\n') !== -1;
                this.morseVoice.voiceBuffer.push(currentWord);
                this.logToFlaggedWords(`currentWord:${currentWord}`);
                this.logToFlaggedWords(`hasNewline:${hasNewline} isNotLastWord: ${isNotLastWord} anyNewLines:${anyNewLines}`);
                const speakCondition = hasNewline || !isNotLastWord || !anyNewLines || !this.settings.misc.newlineChunking();
                this.logToFlaggedWords(`speakCondition:${speakCondition}`);
                if (speakCondition) {
                    this.logToFlaggedWords(`about to wordify:'${this.morseVoice.voiceBuffer.join(' ')}'`);
                    let phraseToSpeak;
                    try {
                        phraseToSpeak = _utils_morseStringUtils__WEBPACK_IMPORTED_MODULE_1__["default"].wordifyPunctuation(this.morseVoice.voiceBuffer.join(' '));
                        phraseToSpeak = phraseToSpeak.replace(/\n/g, ' ').trim();
                    }
                    catch (e) {
                        this.logToFlaggedWords(`caught after wordify:${e}`);
                    }
                    this.logToFlaggedWords(`phraseToSpeak:'${phraseToSpeak}'`);
                    // clear the buffer
                    this.morseVoice.voiceBuffer = [];
                    this.logToFlaggedWords(`voiceThinkingTime:${this.morseVoice.voiceThinkingTime()}`);
                    setTimeout(() => {
                        this.logToFlaggedWords('aboutToSpeak...');
                        this.morseVoice.speakPhrase(phraseToSpeak, () => {
                            this.logToFlaggedWords('returned from speaking...');
                            // what gets called after speaking
                            this.logToFlaggedWords(`needToTrail:${needToTrail}`);
                            if (needToTrail) {
                                advanceTrail();
                            }
                            this.playEnded(true);
                        });
                    }, this.morseVoice.voiceThinkingTime() * 1000);
                }
                else {
                    this.playEnded(true);
                }
            }
            // if trail is turned on but not speaking
            if (needToTrail && !speakAndTrail) {
                advanceTrail();
            }
        };
        this.doPause = (fullRewind, fromPauseButton, fromStopButton) => {
            if (fromPauseButton) {
                this.runningPlayMs(this.runningPlayMs() + (Date.now() - this.lastPartialPlayStart()));
                this.isPaused(!this.isPaused());
            }
            else {
                this.isPaused(false);
            }
            this.playerPlaying(false);
            this.morseWordPlayer.pause(() => {
                // we're here if a complete rawtext finished
                // console.log('settinglastfullplaytime')
                this.lastFullPlayTime(Date.now());
                // console.log(`playtime:${this.lastFullPlayTime() - this.lastPlayFullStart}`)
                // TODO make this more generic for any future "plugins"
                if (this.rss.rssPlayCallback) {
                    this.rss.rssPlayCallback(false);
                }
                this.preSpaceUsed(false);
                if (this.loop() && !fromStopButton && !fromPauseButton) {
                    // as if user pressed play again
                    // shuffle before we loop again
                    this.shuffleWords(true);
                    this.doPlay(false, true);
                }
            }, true);
            if (fullRewind) {
                this.fullRewind();
            }
        };
        this.inputFileChange = (element) => {
            // thanks to https://newbedev.com/how-to-access-file-input-with-knockout-binding
            // console.log(file)
            const file = element.files[0];
            console.log(element.value);
            const fr = new FileReader();
            fr.onload = (data) => {
                this.setText(data.target.result);
                // need to clear or else won't fire if use clears the text area
                // and then tries to reload the same again
                element.value = null;
                // request to undo "apply" after file load
                this.lessons.selectedDisplay({});
            };
            fr.readAsText(file);
        };
        this.doDownload = async () => {
            let allWords = '';
            const sentences = this.sentences();
            sentences.forEach((sentence) => {
                sentence.forEach((word) => {
                    allWords += allWords.length > 0 ? ' ' + word : word;
                });
            });
            const config = this.getMorseStringToWavBufferConfig(allWords);
            const wav = await this.morseWordPlayer.getWavAndSample(config);
            const ary = new Uint8Array(wav);
            const link = document.getElementById('downloadLink');
            const blob = new Blob([ary], { type: 'audio/wav' });
            link.href = URL.createObjectURL(blob);
            link.download = 'morse.wav';
            link.dispatchEvent(new MouseEvent('click'));
        };
        this.dummy = () => {
            console.log('dummy');
        };
        this.changeSoundMaker = (data, event) => {
            // console.log(data.smoothing())
            // console.log(event)
            this.morseWordPlayer.setSoundMaker(data.smoothing());
        };
        this.timeEstimate = knockout__WEBPACK_IMPORTED_MODULE_0___default().computed(() => {
            // this computed doesn't seem bound to anything but .rawText, but for some reason it is
            // still recomputing on wpm/fwpm/xtra changes, so...ok
            if (!this.rawText()) {
                return { minutes: 0, seconds: 0, normedSeconds: '00' };
            }
            const config = this.getMorseStringToWavBufferConfig(this.rawText());
            const est = this.morseWordPlayer.getTimeEstimate(config);
            const minutes = Math.floor(est.timeCalcs.totalTime / 60000);
            const seconds = ((est.timeCalcs.totalTime % 60000) / 1000).toFixed(0);
            const normedSeconds = (parseInt(seconds) < 10 ? '0' : '') + seconds;
            const timeFigures = { minutes, seconds, normedSeconds };
            // console.log(timeFigures)
            // console.log(est)
            return timeFigures;
        }, this);
        this.playingTime = knockout__WEBPACK_IMPORTED_MODULE_0___default().computed(() => {
            const minutes = Math.floor(this.runningPlayMs() / 60000);
            const seconds = ((this.runningPlayMs() % 60000) / 1000).toFixed(0);
            const normedSeconds = (parseInt(seconds) < 10 ? '0' : '') + seconds;
            const timeFigures = { minutes, seconds, normedSeconds };
            // console.log(timeFigures)
            // console.log(est)
            return timeFigures;
        }, this);
        this.doClear = () => {
            // stop playing
            this.doPause(true, false, false);
            this.setText('');
        };
        // initialize the images/icons
        this.morseLoadImages(new _images_morseLoadImages__WEBPACK_IMPORTED_MODULE_5__.MorseLoadImages());
        // create the helper extenders
        _koextenders_morseExtenders__WEBPACK_IMPORTED_MODULE_7__.MorseExtenders.init(this);
        // create settings (note do this after extenders)
        this.settings = new _settings_settings__WEBPACK_IMPORTED_MODULE_9__.MorseSettings();
        // apply extenders
        _koextenders_morseExtenders__WEBPACK_IMPORTED_MODULE_7__.MorseExtenders.apply(this);
        // initialize the main rawText
        this.rawText(this.showingText());
        this.lessons = new _lessons_morseLessonPlugin__WEBPACK_IMPORTED_MODULE_4__["default"](this.settings, (s) => { this.setText(s); }, (str) => {
            const config = this.getMorseStringToWavBufferConfig(str);
            const est = this.morseWordPlayer.getTimeEstimate(config);
            return est;
        });
        this.rss = new _rss_morseRssPlugin__WEBPACK_IMPORTED_MODULE_13__["default"](new _rss_RssConfig__WEBPACK_IMPORTED_MODULE_14__.RssConfig(this.setText, this.fullRewind, this.doPlay, this.lastFullPlayTime, this.playerPlaying));
        // check for RSS feature turned on
        if (this.getParameterByName('rssEnabled')) {
            this.rss.rssEnabled(true);
            // this.initializeRss(null)
        }
        // check for noise feature turned on
        if (this.getParameterByName('noiseEnabled')) {
            this.noiseEnabled(this.getParameterByName('noiseEnabled') === 'true');
        }
        // check for noise feature turned on
        if (this.getParameterByName('morseDisabled')) {
            this.morseDisabled(this.getParameterByName('morseDisabled') === 'true');
        }
        // seems to need to happen early
        // this.morseWordPlayer = new MorseWordPlayer(new MorseWavBufferPlayer())
        this.morseWordPlayer = new _player_morseWordPlayer__WEBPACK_IMPORTED_MODULE_3__.MorseWordPlayer();
        this.morseWordPlayer.setSoundMaker(this.smoothing());
        // load defaults
        _cookies_morseCookies__WEBPACK_IMPORTED_MODULE_8__.MorseCookies.loadCookiesOrDefaults(this, null, true);
        // load cookies
        _cookies_morseCookies__WEBPACK_IMPORTED_MODULE_8__.MorseCookies.loadCookiesOrDefaults(this, null, false);
        // initialize the wordlist
        this.lessons.initializeWordList();
        this.flaggedWords = new _flaggedWords_flaggedWords__WEBPACK_IMPORTED_MODULE_11__.FlaggedWords();
        // voice
        this.morseVoice = new _voice_MorseVoice__WEBPACK_IMPORTED_MODULE_10__.MorseVoice(this);
        // check for voice feature turned on
        if (this.getParameterByName('voiceEnabled')) {
            this.morseVoice.voiceEnabled(true);
        }
        this.shortCutKeys = new _shortcutKeys_morseShortcutKeys__WEBPACK_IMPORTED_MODULE_6__.MorseShortcutKeys(this.settings);
        // are we on the dev site?
        this.isDev(window.location.href.toLowerCase().indexOf('/dev/') > -1);
        // images
        knockout__WEBPACK_IMPORTED_MODULE_0___default().components.register('simpleimage', _components_morseImage_simpleImage__WEBPACK_IMPORTED_MODULE_15__["default"]);
        knockout__WEBPACK_IMPORTED_MODULE_0___default().components.register('noiseaccordion', _components_noiseAccordion_noiseAccordion__WEBPACK_IMPORTED_MODULE_16__["default"]);
        knockout__WEBPACK_IMPORTED_MODULE_0___default().components.register('rssaccordion', _components_rssAccordion_rssAccordion__WEBPACK_IMPORTED_MODULE_17__["default"]);
        knockout__WEBPACK_IMPORTED_MODULE_0___default().components.register('flaggedwordsaccordion', _components_flaggedWordsAccordion_flaggedWordsAccordion__WEBPACK_IMPORTED_MODULE_18__["default"]);
    }
}


/***/ }),

/***/ "./src/morse/player/morseWordPlayer.ts":
/*!*********************************************!*\
  !*** ./src/morse/player/morseWordPlayer.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseWordPlayer": () => (/* binding */ MorseWordPlayer)
/* harmony export */ });
/* harmony import */ var _soundmakers_WavBufferPlayer_morseWavBufferPlayer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./soundmakers/WavBufferPlayer/morseWavBufferPlayer */ "./src/morse/player/soundmakers/WavBufferPlayer/morseWavBufferPlayer.ts");
/* harmony import */ var _soundmakers_SmoothedSounds_SmoothedSoundsPlayer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./soundmakers/SmoothedSounds/SmoothedSoundsPlayer */ "./src/morse/player/soundmakers/SmoothedSounds/SmoothedSoundsPlayer.ts");
/* harmony import */ var _wav_morseStringToWavBuffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wav/morseStringToWavBuffer */ "./src/morse/player/wav/morseStringToWavBuffer.ts");



class MorseWordPlayer {
    constructor() {
        this.setSoundMaker = (smoothing) => {
            if (smoothing) {
                this.soundMaker = new _soundmakers_SmoothedSounds_SmoothedSoundsPlayer__WEBPACK_IMPORTED_MODULE_1__["default"]();
            }
            else {
                this.soundMaker = new _soundmakers_WavBufferPlayer_morseWavBufferPlayer__WEBPACK_IMPORTED_MODULE_0__["default"]();
            }
        };
        this.setVolume = (volume) => {
            this.soundMaker.setVolume(volume / 10);
        };
        this.setNoiseVolume = (volume) => {
            this.soundMaker.setNoiseVolume(volume / 10);
        };
        this.setNoiseType = (config) => {
            config.noise.scaledNoiseVolume = config.noise.volume / 10;
            this.soundMaker.handleNoiseSettings(config);
        };
        this.play = (config, onEnded) => {
            this.soundMaker.play(config, onEnded);
        };
        this.pause = (pauseCallBack, killNoise) => {
            this.soundMaker.forceStop(pauseCallBack, killNoise);
        };
        this.getWavAndSample = (config) => {
            return this.soundMaker.getWav(config);
        };
        this.getTimeEstimate = (config) => {
            return _wav_morseStringToWavBuffer__WEBPACK_IMPORTED_MODULE_2__.MorseStringToWavBuffer.estimatePlayTime(config);
        };
    }
}


/***/ }),

/***/ "./src/morse/player/soundmakers/NoiseConfig.ts":
/*!*****************************************************!*\
  !*** ./src/morse/player/soundmakers/NoiseConfig.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NoiseConfig": () => (/* binding */ NoiseConfig)
/* harmony export */ });
class NoiseConfig {
}


/***/ }),

/***/ "./src/morse/player/soundmakers/SmoothedSounds/SmoothedSoundsContext.ts":
/*!******************************************************************************!*\
  !*** ./src/morse/player/soundmakers/SmoothedSounds/SmoothedSoundsContext.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SmoothedSoundsContext": () => (/* binding */ SmoothedSoundsContext)
/* harmony export */ });
class SmoothedSoundsContext {
    constructor(offline, offlineDurationMs) {
        this.rebuildAll = () => {
            this.getAudioContext();
            this.getGainNode();
            this.getOscillatorNode();
            this.getBandPassNode();
            this.connectNodes();
            this.startOscillatorSilenced();
        };
        this.getGainNode = () => {
            this.gainNode = this.audioContext.createGain();
        };
        this.getOscillatorNode = () => {
            // console.log('got oscillator node')
            this.oscillatorNode = this.audioContext.createOscillator();
            this.oscillatorNode.type = 'sine';
        };
        this.getBandPassNode = () => {
            this.bandpassNode = this.audioContext.createBiquadFilter();
            this.bandpassNode.type = 'bandpass';
            this.bandpassNode.Q.setValueAtTime(1, 0);
        };
        this.connectNodes = () => {
            this.oscillatorNode.connect(this.gainNode);
            this.gainNode.connect(this.bandpassNode);
            this.bandpassNode.connect(this.audioContext.destination);
        };
        this.startOscillatorSilenced = () => {
            this.gainNode.gain.setValueAtTime(0, this.audioContext.currentTime);
            this.oscillatorNode.start(this.audioContext.currentTime);
        };
        this.getAudioContext = () => {
            this.audioContext = this.offline ? new OfflineAudioContext(2, 44100 * (this.offlineDurationMs / 1000), 44100) : new AudioContext();
            this.contextClosed = false;
        };
        this.stopAndCloseContext = (afterCloseCallback = null) => {
            if (this.oscillatorNode) {
                this.oscillatorNode.stop();
            }
            const doAfterClose = () => {
                if (afterCloseCallback) {
                    afterCloseCallback();
                }
            };
            if (this.audioContext.close) {
                this.audioContext.close().then(() => {
                    this.contextClosed = true;
                    doAfterClose();
                });
            }
            else {
                this.contextClosed = true;
                doAfterClose();
            }
        };
        this.offline = offline;
        this.offlineDurationMs = offlineDurationMs;
        this.rebuildAll();
    }
}


/***/ }),

/***/ "./src/morse/player/soundmakers/SmoothedSounds/SmoothedSoundsPlayer.ts":
/*!*****************************************************************************!*\
  !*** ./src/morse/player/soundmakers/SmoothedSounds/SmoothedSoundsPlayer.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SmoothedSoundsPlayer)
/* harmony export */ });
/* harmony import */ var _wav_morseStringToWavBuffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../wav/morseStringToWavBuffer */ "./src/morse/player/wav/morseStringToWavBuffer.ts");
/* harmony import */ var _SmoothedSoundsContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SmoothedSoundsContext */ "./src/morse/player/soundmakers/SmoothedSounds/SmoothedSoundsContext.ts");
/* harmony import */ var audiobuffer_to_wav__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! audiobuffer-to-wav */ "./node_modules/audiobuffer-to-wav/index.js");
/* harmony import */ var audiobuffer_to_wav__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(audiobuffer_to_wav__WEBPACK_IMPORTED_MODULE_2__);
/* abstract away the playing of wav buffer in case browser issues come up, etc
can change the code here and other code won't be affected.
*/



class SmoothedSoundsPlayer {
    constructor() {
        this.sourceEnded = true;
        this.noisePlaying = false;
        this.lastNoiseType = 'off';
        this.nodesConnected = false;
        this.startNoise = (config) => {
            let noiseNodeMaker = null;
            const afterImport = (def) => {
                def.install();
                noiseNodeMaker();
                this.ssContext.noiseGainNode = this.ssContext.audioContext.createGain();
                this.setNoiseVolume(config.noise.scaledNoiseVolume);
                this.ssContext.noiseNode.connect(this.ssContext.noiseGainNode);
                this.ssContext.noiseGainNode.connect(this.ssContext.audioContext.destination);
                this.ssContext.noiseNode.start();
                console.log('started a noise node');
                this.noisePlaying = true;
            };
            switch (config.noise.type) {
                case 'white':
                    noiseNodeMaker = () => { this.ssContext.noiseNode = this.ssContext.audioContext.createWhiteNoise(); };
                    __webpack_require__.e(/*! import() */ "node_modules_white-noise-node_index_js").then(__webpack_require__.t.bind(__webpack_require__, /*! white-noise-node */ "./node_modules/white-noise-node/index.js", 23)).then(({ default: def }) => {
                        afterImport(def);
                    });
                    break;
                case 'brown':
                    noiseNodeMaker = () => { this.ssContext.noiseNode = this.ssContext.audioContext.createBrownNoise(); };
                    __webpack_require__.e(/*! import() */ "node_modules_brown-noise-node_index_js").then(__webpack_require__.t.bind(__webpack_require__, /*! brown-noise-node */ "./node_modules/brown-noise-node/index.js", 23)).then(({ default: def }) => {
                        afterImport(def);
                    });
                    break;
                case 'pink':
                    noiseNodeMaker = () => { this.ssContext.noiseNode = this.ssContext.audioContext.createPinkNoise(); };
                    __webpack_require__.e(/*! import() */ "node_modules_pink-noise-node_index_js").then(__webpack_require__.t.bind(__webpack_require__, /*! pink-noise-node */ "./node_modules/pink-noise-node/index.js", 23)).then(({ default: def }) => {
                        afterImport(def);
                    });
            }
        };
        this.setVolume = (scaledVolume) => {
            this.scaledVolume = scaledVolume;
        };
        this.setNoiseVolume = (scaledVolume) => {
            if (this.ssContext.audioContext) {
                this.ssContext.noiseGainNode.gain.setValueAtTime(scaledVolume, this.ssContext.audioContext.currentTime);
            }
        };
        this.stopNoise = () => {
            if (this.ssContext.noiseNode && this.noisePlaying) {
                this.ssContext.noiseNode.stop();
                this.noisePlaying = false;
            }
        };
        this.handleNoiseSettings = (config) => {
            if (this.ssContext) {
                const noiseWasPlaying = this.noisePlaying;
                const typeChanged = config.noise.type !== this.lastNoiseType;
                const typeIsOff = config.noise.type === 'off';
                if ((typeChanged && this.noisePlaying) || typeIsOff) {
                    this.stopNoise();
                }
                if (!typeIsOff && config.playerPlaying) {
                    if ((noiseWasPlaying && typeChanged) || (!noiseWasPlaying)) {
                        this.startNoise(config);
                    }
                }
                this.lastNoiseType = config.noise.type;
            }
        };
        this.setGainTimings = (wavInfo, scaledVolume, config) => {
            const currentTimeSecs = this.ssContext.audioContext.currentTime;
            const currentTimeMs = currentTimeSecs * 1000;
            // console.log(`currentTimeMs:${currentTimeMs}`)
            wavInfo.timeLine.forEach((soundEvent) => {
                const eventType = soundEvent.event;
                const time = soundEvent.time + currentTimeMs;
                // const eventDuration = time - lastTime
                const riseTimeTarget = (time / 1000); // - (config.riseMsOffset / 1000)
                switch (eventType) {
                    case 'prepad_start':
                        this.ssContext.gainNode.gain.setValueAtTime(0, time);
                        break;
                    case 'dah_start':
                    case 'dit_start':
                        // https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/setTargetAtTime
                        this.ssContext.oscillatorNode.frequency.setValueAtTime(eventType === 'dit_start' ? config.ditFrequency : config.dahFrequency, riseTimeTarget);
                        this.ssContext.bandpassNode.frequency.setValueAtTime(eventType === 'dit_start' ? config.ditFrequency : config.dahFrequency, riseTimeTarget);
                        this.ssContext.gainNode.gain.setTargetAtTime(scaledVolume, riseTimeTarget, config.riseTimeConstant);
                        break;
                    case 'dah_end':
                    case 'dit_end':
                        this.ssContext.gainNode.gain.setTargetAtTime(0, (time / 1000) - (config.decayMsOffset / 1000), config.decayTimeConstant);
                        break;
                    default:
                        // gainNode.gain.setTargetAtTime(0, time / 1000, decayTimeConstant)
                        break;
                }
                // lastTime = time
            });
        };
        this.play = (config, onEnded) => {
            const wavInfo = !config.morseDisabled ? _wav_morseStringToWavBuffer__WEBPACK_IMPORTED_MODULE_0__.MorseStringToWavBuffer.createWav(config, false) : null;
            config.noise.scaledNoiseVolume = config.noise.volume / 10;
            this.doPlay(wavInfo, config.volume / 10, config, onEnded);
        };
        this.doPlay = async (wavInfo, scaledVolume, config, onEnded) => {
            this.scaledVolume = scaledVolume;
            this.wavInfo = wavInfo;
            this.config = config;
            this.sourceEnded = false;
            this.sourceEndedCallBack = onEnded;
            const endTime = !config.morseDisabled ? this.getEndTime(wavInfo, config) : 0;
            if (!config.morseDisabled) {
                this.getContext(endTime);
                this.setGainTimings(wavInfo, scaledVolume, config);
                // only do noise if not an offline recording
                if (!this.config.offline) {
                    this.handleNoiseSettings(config);
                }
            }
            // if its not an offline, we know by the endtime when it will end
            if (!this.config.offline) {
                setTimeout(() => {
                    const closeOutCallback = () => {
                        this.sourceEnded = true;
                        this.sourceEndedCallBack();
                    };
                    closeOutCallback();
                }, endTime);
            }
            else {
                // offline so schedule the oscillator stop
                this.ssContext.oscillatorNode.stop(endTime / 1000);
                const renderedBuffer = await this.ssContext.audioContext.startRendering();
                this.sourceEndedCallBack(renderedBuffer);
            }
        };
        this.getContext = (endTime) => {
            const makeNewContext = () => {
                this.ssContext = new _SmoothedSoundsContext__WEBPACK_IMPORTED_MODULE_1__.SmoothedSoundsContext(this.config.offline, endTime);
            };
            // no context, just create a new one
            if (!this.ssContext) {
                makeNewContext();
                return;
            }
            // there's a context
            // last context was used for downloading, just use a fresh one
            if (this.ssContext.offline) {
                makeNewContext();
                return;
            }
            // we're downloading, so use a fresh one
            if (this.config.offline) {
                makeNewContext();
                return;
            }
            // if we got this far we're just going to re-use the context, but rebuild if closed
            if (this.ssContext.contextClosed) {
                this.ssContext.rebuildAll();
            }
        };
        this.getEndTime = (wavInfo, config) => {
            const l = wavInfo.timeLine.length;
            const wordSpaceTime = wavInfo.timingUnits.wordSpaceMultiplier * wavInfo.timingUnits.calculatedFWUnitsMs;
            const xtraWordSpaceDits = this.config.xtraWordSpaceDits * wavInfo.timingUnits.calculatedFWUnitsMs * wavInfo.timingUnits.ditUnitMultiPlier;
            const endTime = config.trimLastWordSpace ? 0 : wordSpaceTime + xtraWordSpaceDits;
            return wavInfo.timeLine[l - 1].time + endTime;
        };
        this.forceStop = (pauseCallBack, killNoise) => {
            if (!this.ssContext) {
                pauseCallBack();
            }
            else {
                if (killNoise) {
                    this.stopNoise();
                }
                if (this.ssContext) {
                    if (!this.sourceEnded) {
                        this.sourceEndedCallBack = pauseCallBack;
                        this.ssContext.stopAndCloseContext();
                    }
                    else {
                        pauseCallBack();
                    }
                }
                else {
                    pauseCallBack();
                }
            }
        };
        this.getWav = (config) => {
            const myPromise = new Promise((resolve, reject) => {
                config.offline = true;
                this.play(config, (renderedBuffer) => {
                    this.sourceEnded = true;
                    const myWav = audiobuffer_to_wav__WEBPACK_IMPORTED_MODULE_2__(renderedBuffer);
                    resolve(myWav);
                });
            });
            return myPromise;
        };
    }
}


/***/ }),

/***/ "./src/morse/player/soundmakers/SoundMakerConfig.ts":
/*!**********************************************************!*\
  !*** ./src/morse/player/soundmakers/SoundMakerConfig.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SoundMakerConfig": () => (/* binding */ SoundMakerConfig)
/* harmony export */ });
class SoundMakerConfig {
    constructor() {
        this.offline = false;
        this.trimLastWordSpace = false;
        this.morseDisabled = false;
        this.voiceEnabled = false;
    }
    get frequency() { return this.ditFrequency; }
}


/***/ }),

/***/ "./src/morse/player/soundmakers/WavBufferPlayer/morseWavBufferPlayer.ts":
/*!******************************************************************************!*\
  !*** ./src/morse/player/soundmakers/WavBufferPlayer/morseWavBufferPlayer.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MorseWavBufferPlayer)
/* harmony export */ });
/* harmony import */ var _wav_morseStringToWavBuffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../wav/morseStringToWavBuffer */ "./src/morse/player/wav/morseStringToWavBuffer.ts");
/* abstract away the playing of wav buffer in case browser issues come up, etc
can change the code here and other code won't be affected.
*/

class MorseWavBufferPlayer {
    constructor() {
        this.sourceEnded = true;
        this.noisePlaying = false;
        this.lastNoiseType = 'off';
        this.startNoise = (config) => {
            let noiseNodeMaker = null;
            const afterImport = (def) => {
                def.install();
                noiseNodeMaker();
                this.noiseGainNode = this.myAudioContext.createGain();
                this.setNoiseVolume(config.noise.scaledNoiseVolume);
                this.noiseNode.connect(this.noiseGainNode);
                this.noiseGainNode.connect(this.myAudioContext.destination);
                this.noiseNode.start();
                console.log('started a noise node');
                this.noisePlaying = true;
            };
            switch (config.noise.type) {
                case 'white':
                    noiseNodeMaker = () => { this.noiseNode = this.myAudioContext.createWhiteNoise(); };
                    __webpack_require__.e(/*! import() */ "node_modules_white-noise-node_index_js").then(__webpack_require__.t.bind(__webpack_require__, /*! white-noise-node */ "./node_modules/white-noise-node/index.js", 23)).then(({ default: def }) => {
                        afterImport(def);
                    });
                    break;
                case 'brown':
                    noiseNodeMaker = () => { this.noiseNode = this.myAudioContext.createBrownNoise(); };
                    __webpack_require__.e(/*! import() */ "node_modules_brown-noise-node_index_js").then(__webpack_require__.t.bind(__webpack_require__, /*! brown-noise-node */ "./node_modules/brown-noise-node/index.js", 23)).then(({ default: def }) => {
                        afterImport(def);
                    });
                    break;
                case 'pink':
                    noiseNodeMaker = () => { this.noiseNode = this.myAudioContext.createPinkNoise(); };
                    __webpack_require__.e(/*! import() */ "node_modules_pink-noise-node_index_js").then(__webpack_require__.t.bind(__webpack_require__, /*! pink-noise-node */ "./node_modules/pink-noise-node/index.js", 23)).then(({ default: def }) => {
                        afterImport(def);
                    });
            }
        };
        this.setVolume = (scaledVolume) => {
            if (this.myAudioContext) {
                this.gainNode.gain.setValueAtTime(scaledVolume, this.myAudioContext.currentTime);
            }
        };
        this.setNoiseVolume = (scaledVolume) => {
            if (this.myAudioContext) {
                this.noiseGainNode.gain.setValueAtTime(scaledVolume, this.myAudioContext.currentTime);
            }
        };
        this.stopNoise = () => {
            if (this.noiseNode && this.noisePlaying) {
                this.noiseNode.stop();
                this.noisePlaying = false;
            }
        };
        this.handleNoiseSettings = (config) => {
            if (this.myAudioContext) {
                const noiseWasPlaying = this.noisePlaying;
                const typeChanged = config.noise.type !== this.lastNoiseType;
                const typeIsOff = config.noise.type === 'off';
                if ((typeChanged && this.noisePlaying) || typeIsOff) {
                    this.stopNoise();
                }
                if (!typeIsOff && config.playerPlaying) {
                    if ((noiseWasPlaying && typeChanged) || (!noiseWasPlaying)) {
                        this.startNoise(config);
                    }
                }
                this.lastNoiseType = config.noise.type;
            }
        };
        this.play = (config, onEnded) => {
            const wav = _wav_morseStringToWavBuffer__WEBPACK_IMPORTED_MODULE_0__.MorseStringToWavBuffer.createWav(config, true);
            config.noise.scaledNoiseVolume = config.noise.volume / 10;
            this.doPlay(wav.wav, config.volume / 10, config, onEnded);
        };
        this.doPlay = (wav, scaledVolume, config, onEnded) => {
            this.sourceEnded = false;
            this.sourceEndedCallBack = onEnded;
            if (typeof (this.myAudioContext) === 'undefined') {
                this.myAudioContext = new AudioContext();
            }
            this.gainNode = this.myAudioContext.createGain();
            this.source = this.myAudioContext.createBufferSource();
            this.source.addEventListener('ended', () => {
                // this.noiseNode.stop()
                this.sourceEnded = true;
                this.sourceEndedCallBack();
            });
            const mybuf = new Int8Array(wav).buffer;
            let mybuf2;
            this.myAudioContext.decodeAudioData(mybuf, (x) => {
                // thanks https://middleearmedia.com/web-audio-api-audio-buffer/
                mybuf2 = x;
                this.source.buffer = mybuf2;
                this.setVolume(scaledVolume);
                this.source.connect(this.gainNode);
                this.gainNode.connect(this.myAudioContext.destination);
                this.handleNoiseSettings(config);
                this.source.start(0);
            }, (e) => {
                console.log('error');
                console.log(e);
            });
        };
        this.forceStop = (pauseCallBack, killNoise) => {
            if (typeof (this.myAudioContext) === 'undefined') {
                pauseCallBack();
            }
            else {
                if (killNoise) {
                    this.stopNoise();
                }
                if (typeof (this.source) !== 'undefined') {
                    if (!this.sourceEnded) {
                        this.sourceEndedCallBack = pauseCallBack;
                        this.source.stop();
                    }
                    else {
                        pauseCallBack();
                    }
                }
                else {
                    pauseCallBack();
                }
            }
        };
        this.getWav = (config) => {
            const myPromise = new Promise((resolve, reject) => {
                const wav = _wav_morseStringToWavBuffer__WEBPACK_IMPORTED_MODULE_0__.MorseStringToWavBuffer.createWav(config, true);
                resolve(wav.wav);
            });
            return myPromise;
        };
    }
}


/***/ }),

/***/ "./src/morse/player/wav/CreatedWav.ts":
/*!********************************************!*\
  !*** ./src/morse/player/wav/CreatedWav.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreatedWav": () => (/* binding */ CreatedWav)
/* harmony export */ });
class CreatedWav {
}


/***/ }),

/***/ "./src/morse/player/wav/morseStringToWavBuffer.ts":
/*!********************************************************!*\
  !*** ./src/morse/player/wav/morseStringToWavBuffer.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseStringToWavBuffer": () => (/* binding */ MorseStringToWavBuffer)
/* harmony export */ });
/* harmony import */ var _morse_pro_morse_pro_cw_wave_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../morse-pro/morse-pro-cw-wave.js */ "./src/morse-pro/morse-pro-cw-wave.js");
/* harmony import */ var _morse_pro_morse_pro_util_riffwave_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../morse-pro/morse-pro-util-riffwave.js */ "./src/morse-pro/morse-pro-util-riffwave.js");
/* harmony import */ var _timing_MorseCountUnits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../timing/MorseCountUnits */ "./src/morse/timing/MorseCountUnits.ts");
/* harmony import */ var _timing_morseTimingCalculator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../timing/morseTimingCalculator */ "./src/morse/timing/morseTimingCalculator.ts");
/* harmony import */ var _CreatedWav__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CreatedWav */ "./src/morse/player/wav/CreatedWav.ts");
var _a;





class MorseStringToWavBuffer {
}
_a = MorseStringToWavBuffer;
MorseStringToWavBuffer.getInit = (config) => {
    const useProsigns = true;
    const sampleRate = 8000;
    const timingUnits = _timing_morseTimingCalculator__WEBPACK_IMPORTED_MODULE_3__.MorseTimingCalculator.getTimingUnits(config.wpm, config.fwpm);
    const countUnits = new _timing_MorseCountUnits__WEBPACK_IMPORTED_MODULE_2__.MorseCountUnits();
    countUnits.extraWordSpacingDitsCount = config.xtraWordSpaceDits;
    // const unit = 1200 / config.fwpm
    // const wordSpace = (unit * 7) + (unit * config.xtraWordSpaceDits)
    const morseCWWave = new _morse_pro_morse_pro_cw_wave_js__WEBPACK_IMPORTED_MODULE_0__["default"](useProsigns, config.wpm, config.fwpm, { dit: config.ditFrequency, dah: config.dahFrequency }, sampleRate);
    morseCWWave.translate(config.word, false);
    return { morseCWWave, timingUnits, countUnits };
};
MorseStringToWavBuffer.createWav = (config, generateSampleAndWav) => {
    const init = _a.getInit(config);
    const ret = new _CreatedWav__WEBPACK_IMPORTED_MODULE_4__.CreatedWav();
    // get wordspace
    const calcs = _timing_morseTimingCalculator__WEBPACK_IMPORTED_MODULE_3__.MorseTimingCalculator.getTimes(init.timingUnits, init.countUnits);
    const timeLine = _timing_morseTimingCalculator__WEBPACK_IMPORTED_MODULE_3__.MorseTimingCalculator.getTimeLine(init.morseCWWave, init.timingUnits, config);
    if (generateSampleAndWav) {
        ret.sample = init.morseCWWave.getSample(calcs.singleWordSpaceTime, config.prePaddingMs);
        const wav = _morse_pro_morse_pro_util_riffwave_js__WEBPACK_IMPORTED_MODULE_1__.getData(ret.sample);
        ret.wav = wav;
    }
    ret.timeLine = timeLine;
    ret.timingUnits = init.timingUnits;
    return ret;
};
MorseStringToWavBuffer.estimatePlayTime = (config) => {
    const init = _a.getInit(config);
    const timingUnits = init.timingUnits;
    const unitCounts = _timing_morseTimingCalculator__WEBPACK_IMPORTED_MODULE_3__.MorseTimingCalculator.countUnits(init.morseCWWave, init.countUnits);
    const timeCalcs = _timing_morseTimingCalculator__WEBPACK_IMPORTED_MODULE_3__.MorseTimingCalculator.getTimes(timingUnits, unitCounts);
    const timeLine = _timing_morseTimingCalculator__WEBPACK_IMPORTED_MODULE_3__.MorseTimingCalculator.getTimeLine(init.morseCWWave, timingUnits, config);
    return { morse: init.morseCWWave.morse, word: config.word, timingUnits, unitCounts, timeCalcs, timeLine };
};


/***/ }),

/***/ "./src/morse/rss/RssConfig.ts":
/*!************************************!*\
  !*** ./src/morse/rss/RssConfig.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RssConfig": () => (/* binding */ RssConfig)
/* harmony export */ });
class RssConfig {
    constructor(setText, fullRewind, doPlay, lastFullPlayTime, playerPlaying) {
        this.setText = setText;
        this.fullRewind = fullRewind;
        this.doPlay = doPlay;
        this.lastFullPlayTime = lastFullPlayTime;
        this.playerPlaying = playerPlaying;
    }
}


/***/ }),

/***/ "./src/morse/rss/RssTitle.ts":
/*!***********************************!*\
  !*** ./src/morse/rss/RssTitle.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RssTitle": () => (/* binding */ RssTitle)
/* harmony export */ });
class RssTitle {
    constructor(title, played = false) {
        this.title = title;
        this.played = played;
    }
}


/***/ }),

/***/ "./src/morse/rss/morseRssPlugin.ts":
/*!*****************************************!*\
  !*** ./src/morse/rss/morseRssPlugin.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MorseRssPlugin)
/* harmony export */ });
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cookies_morseCookies__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cookies/morseCookies */ "./src/morse/cookies/morseCookies.ts");
/* harmony import */ var _RssTitle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RssTitle */ "./src/morse/rss/RssTitle.ts");



class MorseRssPlugin {
    constructor(rssConfig) {
        this.rssFeedUrl = knockout__WEBPACK_IMPORTED_MODULE_0__.observable('https://moxie.foxnews.com/feedburner/latest.xml').extend({ saveCookie: 'rssFeedUrl' });
        this.proxydUrl = knockout__WEBPACK_IMPORTED_MODULE_0__.observable('http://127.0.0.1:8085/').extend({ saveCookie: 'proxydUrl' });
        this.rssPlayMins = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(5).extend({ saveCookie: 'rssPlayMins' });
        this.rssPollMins = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(5).extend({ saveCookie: 'rssPollMins' });
        this.rssCookieWhiteList = ['rssFeedUrl', 'proxydUrl', 'rssPlayMins', 'rssPollMins'];
        this.rssTitlesQueue = knockout__WEBPACK_IMPORTED_MODULE_0__.observableArray();
        this.rssPlayOn = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(false);
        this.lastRSSPoll = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(new Date(1900, 0, 0).getMilliseconds());
        this.rssPlayTimerHandle = null;
        this.rssPollTimerHandle = null;
        this.rssMinsToWait = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(-1);
        this.rssPollMinsToWait = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(-1);
        this.rssPollingOn = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(false);
        this.rssPolling = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(false);
        this.rssPlayWaitingBadgeText = knockout__WEBPACK_IMPORTED_MODULE_0__.observable('');
        this.rssEnabled = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(false);
        this.unreadRssCount = knockout__WEBPACK_IMPORTED_MODULE_0__.computed(() => {
            const unread = this.rssTitlesQueue().filter(x => !x.played);
            // console.log("unread:");
            // console.log(unread);
            return !unread ? 0 : unread.length;
        }, this);
        this.playRssButtonText = knockout__WEBPACK_IMPORTED_MODULE_0__.computed(() => {
            const minsToWait = this.rssMinsToWait();
            let waitingText = '';
            if (minsToWait > 0 && this.rssPlayOn()) {
                waitingText = ' Waiting ';
                if (minsToWait > 1) {
                    waitingText += Math.round(minsToWait).toString() + ' min';
                }
                else {
                    waitingText += Math.round(60 * minsToWait).toString() + ' sec';
                }
            }
            // help the badge
            console.log(waitingText);
            this.rssPlayWaitingBadgeText(waitingText);
            return (this.rssPlayOn() ? 'Stop' : 'Play') + ' RSS (' + this.unreadRssCount() + ')' + waitingText;
        }, this);
        this.pollRssButtonText = knockout__WEBPACK_IMPORTED_MODULE_0__.computed(() => {
            const minsToWait = this.rssPollMinsToWait();
            let waitingText = '';
            if (minsToWait > 0 && this.rssPollingOn()) {
                waitingText = ' Waiting ';
                if (minsToWait > 1) {
                    waitingText += Math.round(minsToWait).toString() + ' min';
                }
                else {
                    waitingText += Math.round(60 * minsToWait).toString() + ' sec';
                }
            }
            return (this.rssPollingOn() ? 'Polling' : 'Poll') + ' RSS' + waitingText;
        }, this);
        this.rssPlayCallback = (ignoreWait) => {
            if (this.rssPlayOn()) {
                const msSince = Date.now() - this.rssConfig.lastFullPlayTime();
                const minSince = msSince / 1000 / 60;
                const enoughWait = (minSince > this.rssPlayMins());
                if (!this.rssConfig.playerPlaying()) {
                    if (enoughWait || ignoreWait) {
                        this.rssMinsToWait(-1);
                        if (this.unreadRssCount() > 0) {
                            const target = this.rssTitlesQueue().find(x => !x.played);
                            const replacement = new _RssTitle__WEBPACK_IMPORTED_MODULE_2__.RssTitle(target.title, true);
                            this.rssTitlesQueue.replace(target, replacement);
                            this.rssConfig.setText(target.title);
                            this.rssConfig.fullRewind();
                            this.rssConfig.doPlay(false, false);
                        }
                    }
                    else {
                        this.rssMinsToWait(this.rssPlayMins() - minSince);
                    }
                }
                this.rssPlayTimerHandle = setTimeout(this.rssPlayCallback, 20 * 1000);
            }
        };
        this.doRSSReset = () => {
            this.rssTitlesQueue(this.rssTitlesQueue().map(x => {
                x.played = true;
                return x;
            }));
        };
        this.doRssPlay = () => {
            this.rssPlayOn(!this.rssPlayOn());
            if (this.rssPlayOn()) {
                this.rssPlayCallback(true);
            }
            else {
                if (this.rssPlayTimerHandle) {
                    clearTimeout(this.rssPlayTimerHandle);
                }
            }
            document.getElementById('btnRssAccordionButton').click();
        };
        this.doRSSCallback = () => {
            if (this.rssPollingOn() && !this.rssPolling()) {
                const msSince = Date.now() - this.lastRSSPoll();
                const minSince = msSince / 1000 / 60;
                const enoughWait = (minSince > this.rssPollMins());
                if (enoughWait) {
                    this.rssPolling(true);
                    this.rssPollMinsToWait(-1);
                    // https://github.com/rbren/rss-parser
                    // this helped resolve polyfill problems:
                    // https://blog.alchemy.com/blog/how-to-polyfill-node-core-modules-in-webpack-5
                    // note that the rss-parser module is loaded dynamically, so only if the
                    // user actually goes ahead and uses RSS.
                    Promise.all(/*! import() | rss-parser */[__webpack_require__.e("vendors-node_modules_rss-parser_index_js"), __webpack_require__.e("rss-parser")]).then(__webpack_require__.t.bind(__webpack_require__, /*! rss-parser */ "./node_modules/rss-parser/index.js", 23)).then(({ default: RSSParser }) => {
                        const parser = new RSSParser();
                        // Note: some RSS feeds can't be loaded in the browser due to CORS security.
                        // To get around this, you can use a proxy.
                        parser.parseURL(this.proxydUrl() + this.rssFeedUrl().toString(), (err, feed) => {
                            if (err) {
                                this.lastRSSPoll(Date.now());
                                alert('rss error');
                                this.rssPolling(false);
                                throw err;
                            }
                            // console.log(feed.title);
                            // note the reversal to get a fifo
                            feed.items.reverse().forEach((entry) => {
                                // console.log(entry.title + ':' + entry.link);
                                if (!this.rssTitlesQueue().find(x => x.title === entry.title)) {
                                    this.rssTitlesQueue.push(new _RssTitle__WEBPACK_IMPORTED_MODULE_2__.RssTitle(entry.title, false));
                                }
                            });
                            this.lastRSSPoll(Date.now());
                            this.rssPollMinsToWait(this.rssPollMins());
                            this.rssPolling(false);
                        });
                    });
                }
                else {
                    this.rssPollMinsToWait(this.rssPollMins() - minSince);
                }
            }
            if (this.rssPollingOn()) {
                this.rssPollTimerHandle = setTimeout(this.doRSSCallback, 15 * 1000);
            }
            else {
                if (this.rssPollTimerHandle) {
                    clearTimeout(this.rssPollTimerHandle);
                }
            }
        };
        this.doRSS = () => {
            this.rssPollingOn(!this.rssPollingOn());
            if (this.rssPollingOn()) {
                this.doRSSCallback();
            }
            else {
                if (this.rssPollTimerHandle) {
                    clearTimeout(this.rssPollTimerHandle);
                }
            }
        };
        // cookie handlers
        this.handleCookies = (cookies) => {
            // 'rssFeedUrl', 'proxydUrl', 'rssPlayMins', 'rssPollMins'
            if (!cookies) {
                return;
            }
            let target = cookies.find(x => x.key === 'rssFeedUrl');
            if (target) {
                this.rssFeedUrl(target.val);
            }
            target = cookies.find(x => x.key === 'proxydUrl');
            if (target) {
                this.proxydUrl(target.val);
            }
            target = cookies.find(x => x.key === 'rssPlayMins');
            if (target) {
                this.rssPlayMins(parseInt(target.val));
            }
            target = cookies.find(x => x.key === 'rssPollMins');
            if (target) {
                this.rssPollMins(parseInt(target.val));
            }
        };
        this.handleCookie = (cookie) => { };
        _cookies_morseCookies__WEBPACK_IMPORTED_MODULE_1__.MorseCookies.registerHandler(this);
        this.rssConfig = rssConfig;
    }
}


/***/ }),

/***/ "./src/morse/settings/frequencySettings.ts":
/*!*************************************************!*\
  !*** ./src/morse/settings/frequencySettings.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FrequencySettings": () => (/* binding */ FrequencySettings)
/* harmony export */ });
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cookies_morseCookies__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cookies/morseCookies */ "./src/morse/cookies/morseCookies.ts");
/* harmony import */ var _utils_general__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/general */ "./src/morse/utils/general.ts");



class FrequencySettings {
    constructor() {
        // cookie handlers
        this.handleCookies = (cookies) => {
            if (!cookies) {
                return;
            }
            let target = cookies.find(x => x.key === 'syncFreq');
            if (target) {
                this.syncFreq(_utils_general__WEBPACK_IMPORTED_MODULE_2__.GeneralUtils.booleanize(target.val));
            }
            target = cookies.find(x => x.key === 'ditFrequency');
            if (target) {
                this.ditFrequency(parseInt(target.val));
            }
            target = cookies.find(x => x.key === 'dahFrequency');
            if (target) {
                this.dahFrequency(parseInt(target.val));
            }
        };
        this.handleCookie = (cookie) => { };
        _cookies_morseCookies__WEBPACK_IMPORTED_MODULE_1__.MorseCookies.registerHandler(this);
        this.trudDitFrequency = knockout__WEBPACK_IMPORTED_MODULE_0__.observable();
        this.truDahFrequency = knockout__WEBPACK_IMPORTED_MODULE_0__.observable();
        this.syncFreq = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(true);
        this.ditFrequency = knockout__WEBPACK_IMPORTED_MODULE_0__.pureComputed({
            read: () => {
                return this.trudDitFrequency();
            },
            write: (value) => {
                this.trudDitFrequency(value);
                if (this.syncFreq()) {
                    this.truDahFrequency(value);
                }
            },
            owner: this
        });
        this.dahFrequency = knockout__WEBPACK_IMPORTED_MODULE_0__.pureComputed({
            read: () => {
                if (!this.syncFreq()) {
                    return this.truDahFrequency();
                }
                else {
                    this.truDahFrequency(this.trudDitFrequency());
                    return this.trudDitFrequency();
                }
            },
            write: (value) => {
                this.truDahFrequency(value);
            },
            owner: this
        });
        this.ditFrequency.extend({ saveCookie: 'ditFrequency' });
        this.dahFrequency.extend({ saveCookie: 'dahFrequency' });
        this.syncFreq.extend({ saveCookie: 'syncFreq' });
    }
}


/***/ }),

/***/ "./src/morse/settings/miscSettings.ts":
/*!********************************************!*\
  !*** ./src/morse/settings/miscSettings.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MiscSettings": () => (/* binding */ MiscSettings)
/* harmony export */ });
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_0__);

class MiscSettings {
    constructor() {
        this.newlineChunking = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(false);
    }
}


/***/ }),

/***/ "./src/morse/settings/settings.ts":
/*!****************************************!*\
  !*** ./src/morse/settings/settings.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseSettings": () => (/* binding */ MorseSettings)
/* harmony export */ });
/* harmony import */ var _frequencySettings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./frequencySettings */ "./src/morse/settings/frequencySettings.ts");
/* harmony import */ var _miscSettings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./miscSettings */ "./src/morse/settings/miscSettings.ts");
/* harmony import */ var _speedSettings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./speedSettings */ "./src/morse/settings/speedSettings.ts");
// import * as ko from 'knockout'



class MorseSettings {
    constructor() {
        this.speed = new _speedSettings__WEBPACK_IMPORTED_MODULE_2__.SpeedSettings();
        this.misc = new _miscSettings__WEBPACK_IMPORTED_MODULE_1__.MiscSettings();
        this.frequency = new _frequencySettings__WEBPACK_IMPORTED_MODULE_0__.FrequencySettings();
    }
}


/***/ }),

/***/ "./src/morse/settings/speedSettings.ts":
/*!*********************************************!*\
  !*** ./src/morse/settings/speedSettings.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SpeedSettings": () => (/* binding */ SpeedSettings)
/* harmony export */ });
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cookies_morseCookies__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cookies/morseCookies */ "./src/morse/cookies/morseCookies.ts");
/* harmony import */ var _utils_general__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/general */ "./src/morse/utils/general.ts");



class SpeedSettings {
    constructor() {
        this.handleCookies = (cookies) => {
            if (!cookies) {
                return;
            }
            let target = cookies.find(x => x.key === 'syncWpm');
            if (target) {
                this.syncWpm(_utils_general__WEBPACK_IMPORTED_MODULE_2__.GeneralUtils.booleanize(target.val));
            }
            target = cookies.find(x => x.key === 'wpm');
            if (target) {
                this.wpm(parseInt(target.val));
            }
            target = cookies.find(x => x.key === 'fwpm');
            if (target) {
                this.fwpm(parseInt(target.val));
            }
        };
        this.handleCookie = (cookie) => { };
        _cookies_morseCookies__WEBPACK_IMPORTED_MODULE_1__.MorseCookies.registerHandler(this);
        this.trueWpm = knockout__WEBPACK_IMPORTED_MODULE_0__.observable();
        this.trueFwpm = knockout__WEBPACK_IMPORTED_MODULE_0__.observable();
        this.syncWpm = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(true);
        this.wpm = knockout__WEBPACK_IMPORTED_MODULE_0__.pureComputed({
            read: () => {
                return this.trueWpm();
            },
            write: (value) => {
                this.trueWpm(value);
                if (this.syncWpm() || parseInt(value) < parseInt(this.trueFwpm())) {
                    this.trueFwpm(value);
                }
            },
            owner: this
        });
        this.fwpm = knockout__WEBPACK_IMPORTED_MODULE_0__.pureComputed({
            read: () => {
                if (!this.syncWpm()) {
                    if (parseInt(this.trueFwpm()) <= parseInt(this.trueWpm())) {
                        return this.trueFwpm();
                    }
                    else {
                        return this.trueWpm();
                    }
                }
                else {
                    this.trueFwpm(this.trueWpm());
                    return this.trueFwpm();
                }
            },
            write: (value) => {
                if (parseInt(value) <= parseInt(this.trueWpm())) {
                    this.trueFwpm(value);
                }
            },
            owner: this
        });
        this.wpm.extend({ saveCookie: 'wpm' });
        this.fwpm.extend({ saveCookie: 'fwpm' });
        this.syncWpm.extend({ saveCookie: 'syncWpm' });
    }
}


/***/ }),

/***/ "./src/morse/shortcutKeys/morseShortcutKeys.ts":
/*!*****************************************************!*\
  !*** ./src/morse/shortcutKeys/morseShortcutKeys.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseShortcutKeys": () => (/* binding */ MorseShortcutKeys)
/* harmony export */ });
class MorseShortcutKeys {
    constructor(morseSettings) {
        this.routeShortcutKey = (key) => {
            // console.log('routing shortcut key')
            switch (key) {
                case 'z':
                    this.changeFarnsworth(-1);
                    break;
                case 'x':
                    this.changeFarnsworth(1);
                    break;
            }
        };
        this.changeFarnsworth = (x) => {
            // console.log('changing farnsworth')
            const newWpm = parseInt(this.morseSettings.speed.wpm()) + x;
            const newFwpm = parseInt(this.morseSettings.speed.fwpm()) + x;
            if (newWpm < 1 || newFwpm < 1) {
                return;
            }
            if (this.morseSettings.speed.syncWpm()) {
                this.morseSettings.speed.wpm(newWpm);
                return;
            }
            if (newFwpm > this.morseSettings.speed.wpm()) {
                this.morseSettings.speed.wpm(newWpm);
            }
            this.morseSettings.speed.fwpm(newFwpm);
        };
        this.morseSettings = morseSettings;
        // add the shortcut key listener
        document.addEventListener('keypress', (e) => {
            const tagName = e.target.tagName;
            if (tagName !== 'INPUT' && tagName !== 'TEXTAREA') {
                // var input = document.querySelector(".my-input");
                // input.focus();
                // input.value = e.key;
                // console.log(e.target.tagName)
                // console.log(e.key)
                this.routeShortcutKey(e.key);
                e.preventDefault();
            }
        });
    }
}


/***/ }),

/***/ "./src/morse/timing/ComputedTimes.ts":
/*!*******************************************!*\
  !*** ./src/morse/timing/ComputedTimes.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComputedTimes": () => (/* binding */ ComputedTimes)
/* harmony export */ });
class ComputedTimes {
    constructor(timingUnits, countUnits) {
        this.ditTime = countUnits.ditCount * timingUnits.ditUnitMultiPlier * timingUnits.calculatedUnitsMs;
        this.dahTime = countUnits.dahCount * timingUnits.dahUnitMultiplier * timingUnits.calculatedUnitsMs;
        this.intraCharacterSpaceTime = countUnits.intraCharacterSpaceCount * timingUnits.intraCharacterSpaceMultiplier * timingUnits.calculatedUnitsMs;
        // these are farnsworthed
        this.interCharacterSpaceTime = countUnits.interCharacterSpaceCount * timingUnits.interCharacterSpaceMultiplier * timingUnits.calculatedFWUnitsMs;
        this.wordSpaceTime = countUnits.wordSpacesCount * timingUnits.wordSpaceMultiplier * timingUnits.calculatedFWUnitsMs;
        this.extraWordSpacingDitsTime = countUnits.wordSpacesCount * countUnits.extraWordSpacingDitsCount * timingUnits.ditUnitMultiPlier * timingUnits.calculatedFWUnitsMs;
        this.totalTime = this.ditTime + this.dahTime + this.intraCharacterSpaceTime + this.interCharacterSpaceTime + this.wordSpaceTime + this.extraWordSpacingDitsTime;
        // single wordspace
        this.singleWordSpaceTime = timingUnits.wordSpaceMultiplier * timingUnits.calculatedFWUnitsMs + countUnits.extraWordSpacingDitsCount * timingUnits.ditUnitMultiPlier * timingUnits.calculatedFWUnitsMs;
        this.totalPlusTrail = this.totalTime + this.singleWordSpaceTime;
    }
}


/***/ }),

/***/ "./src/morse/timing/MorseCountUnits.ts":
/*!*********************************************!*\
  !*** ./src/morse/timing/MorseCountUnits.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseCountUnits": () => (/* binding */ MorseCountUnits)
/* harmony export */ });
class MorseCountUnits {
    constructor() {
        this.interCharacterSpaceCount = 0;
        this.intraCharacterSpaceCount = 0;
        this.ditCount = 0;
        this.dahCount = 0;
        this.wordSpacesCount = 0;
        this.extraWordSpacingDitsCount = 0;
    }
}


/***/ }),

/***/ "./src/morse/timing/UnitTimingsAndMultipliers.ts":
/*!*******************************************************!*\
  !*** ./src/morse/timing/UnitTimingsAndMultipliers.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UnitTimingsAndMultipliers": () => (/* binding */ UnitTimingsAndMultipliers)
/* harmony export */ });
class UnitTimingsAndMultipliers {
    constructor(wpm, fwpm) {
        this.ditUnitMultiPlier = 1;
        this.dahUnitMultiplier = 3;
        this.intraCharacterSpaceMultiplier = 1;
        this.interCharacterSpaceMultiplier = 3;
        this.wordSpaceMultiplier = 7;
        const calculatedSecondsPerDit = 60 / (50 * wpm);
        this.calculatedUnitsMs = calculatedSecondsPerDit * 1000;
        const calculatedFWUnitSeconds = ((60 / fwpm) - 31 * calculatedSecondsPerDit) / 19;
        this.calculatedFWUnitsMs = calculatedFWUnitSeconds * 1000;
    }
}


/***/ }),

/***/ "./src/morse/timing/morseTimingCalculator.ts":
/*!***************************************************!*\
  !*** ./src/morse/timing/morseTimingCalculator.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseTimingCalculator": () => (/* binding */ MorseTimingCalculator)
/* harmony export */ });
/* harmony import */ var _ComputedTimes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ComputedTimes */ "./src/morse/timing/ComputedTimes.ts");
/* harmony import */ var _MorseCountUnits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MorseCountUnits */ "./src/morse/timing/MorseCountUnits.ts");
/* harmony import */ var _UnitTimingsAndMultipliers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UnitTimingsAndMultipliers */ "./src/morse/timing/UnitTimingsAndMultipliers.ts");



class MorseTimingCalculator {
}
// based on https://morsecode.world/international/timing.html
MorseTimingCalculator.getTimingUnits = (wpm, fwpm) => {
    return new _UnitTimingsAndMultipliers__WEBPACK_IMPORTED_MODULE_2__.UnitTimingsAndMultipliers(wpm, fwpm);
};
MorseTimingCalculator.countUnits = (morsecwwav, prePopulated) => {
    let cnts;
    if (prePopulated) {
        cnts = prePopulated;
    }
    else {
        cnts = new _MorseCountUnits__WEBPACK_IMPORTED_MODULE_1__.MorseCountUnits();
    }
    const morseWords = morsecwwav.morse.split('/');
    cnts.wordSpacesCount = morseWords.length - 1;
    morseWords.forEach((word) => {
        const characters = word.trim().split(' ');
        cnts.interCharacterSpaceCount += characters.length - 1;
        characters.forEach((character) => {
            cnts.intraCharacterSpaceCount += character.length - 1;
            cnts.ditCount += character.split('').filter((x) => x === '.').length;
            cnts.dahCount += character.split('').filter((x) => x === '-').length;
        });
    });
    return cnts;
};
MorseTimingCalculator.getTimes = (timingUnits, countUnits) => {
    return new _ComputedTimes__WEBPACK_IMPORTED_MODULE_0__.ComputedTimes(timingUnits, countUnits);
};
MorseTimingCalculator.getTimeLine = (morsecwwav, timingUnits, config) => {
    if (isNaN(timingUnits.calculatedUnitsMs) || isNaN(timingUnits.calculatedFWUnitsMs)) {
        return [];
    }
    const morseWords = morsecwwav.morse.split('/').map(x => x.trim());
    // console.log(`morsewords:${''}`)
    // console.log(morseWords)
    let time = 0;
    const events = [];
    // const dummyTime = 0.002
    events.push({ event: 'prepad_start', time });
    time += config.prePaddingMs;
    events.push({ event: 'prepad_end', time });
    let lastWordPiece = '';
    const addIntraCharacter = () => {
        if (lastWordPiece === '.' || lastWordPiece === '-') {
            events.push({ event: 'intrachar_start', time });
            time += timingUnits.calculatedUnitsMs * timingUnits.intraCharacterSpaceMultiplier;
            events.push({ event: 'intrachar_end', time });
        }
    };
    morseWords.forEach((morseWord) => {
        if (time > 0) {
            events.push({ event: 'wordspace_start', time });
            time += timingUnits.calculatedFWUnitsMs * timingUnits.wordSpaceMultiplier;
            events.push({ event: 'wordspace_end', time });
        }
        const wordPieces = morseWord.split('');
        lastWordPiece = '';
        wordPieces.forEach((wordPiece) => {
            switch (wordPiece) {
                case '.':
                    addIntraCharacter();
                    events.push({ event: 'dit_start', time });
                    time += timingUnits.calculatedUnitsMs * timingUnits.ditUnitMultiPlier;
                    events.push({ event: 'dit_end', time });
                    break;
                case '-':
                    addIntraCharacter();
                    events.push({ event: 'dah_start', time });
                    time += timingUnits.calculatedUnitsMs * timingUnits.dahUnitMultiplier;
                    events.push({ event: 'dah_end', time });
                    break;
                case ' ':
                    events.push({ event: 'interchar_start', time });
                    time += timingUnits.calculatedFWUnitsMs * timingUnits.interCharacterSpaceMultiplier;
                    events.push({ event: 'interchar_end', time });
                    break;
            }
            lastWordPiece = wordPiece;
        });
    });
    return events;
};


/***/ }),

/***/ "./src/morse/utils/general.ts":
/*!************************************!*\
  !*** ./src/morse/utils/general.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GeneralUtils": () => (/* binding */ GeneralUtils)
/* harmony export */ });
class GeneralUtils {
}
GeneralUtils.booleanize = (x) => {
    if (x === 'true ' || x === 'false') {
        return x === 'true';
    }
    else {
        return x;
    }
};


/***/ }),

/***/ "./src/morse/utils/morseStringUtils.ts":
/*!*********************************************!*\
  !*** ./src/morse/utils/morseStringUtils.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MorseStringUtils)
/* harmony export */ });
/* harmony import */ var _configs_wordify_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../configs/wordify.json */ "./src/configs/wordify.json");
var _a;

class MorseStringUtils {
}
_a = MorseStringUtils;
MorseStringUtils.doReplacements = (s) => {
    const afterReplaced = s
        // a few ad-hoc attempts to fix unicode or other problems
        // seems like apostraphe is not morse-able
        .replace(/â€™/g, '')
        .replace(/â€˜/g, '')
        .replace(/'/g, '')
        // turn percent sign into pct abbreviation
        .replace(/%/g, 'pct')
        // in the square brackets we add all symbols supported by morse-pro (see more-pro.js), otherwise replace with space
        // note we will preserve \r and \n for voice which uses these are phrase delimiters
        // eslint-disable-next-line no-useless-escape
        .replace(/(?![\.\,\:\?\\\-\/\(\)\"\@\=\&\+\!\<\>\r\n])\W/g, ' ');
    return afterReplaced;
};
MorseStringUtils.splitIntoSentences = (replaced) => {
    // split on period or question mark or exclamation mark
    // eslint-disable-next-line no-useless-escape
    const splitSents = replaced.split(/([\.\?\!])/);
    // example
    //  "hello there. how are you? I am fine".split(/([\.\?])/)
    // eslint-disable-next-line no-irregular-whitespace
    // eslint-disable-next-line no-irregular-whitespace
    // (5)Â ['hello there', '.', ' how are you', '?', ' I am fine']
    // now put the punctuation back on the end of sentences
    const splitsGlued = splitSents.map((val, i, ary) => {
        if (i === 0 || i % 2 === 0) {
            return val + (((i + 1) < ary.length) ? ary[i + 1] : '');
        }
        else {
            return '';
        }
    }).filter(y => y !== '');
    return splitsGlued;
};
MorseStringUtils.getSentences = (s, dontSplit, newlineChunking) => {
    const replaced = _a.doReplacements(s);
    const splitsGlued = dontSplit ? [replaced] : _a.splitIntoSentences(replaced);
    const sents = splitsGlued
        .map((sentence) => {
        const hasNewLine = newlineChunking; // sentence.indexOf('\n') !== -1
        return sentence
            .trim()
            // remove double spaces
            // eslint-disable-next-line no-regex-spaces
            .replace(/  /g, ' ')
            // add spaces after newlines
            .replace(/\n/g, '\n ')
            // split up into words
            .split(hasNewLine ? '\n ' : ' ')
            // add back newline to the end of each for voice
            .map((word) => hasNewLine ? `${word}\n` : word)
            // get rid fo stray empties
            .filter(x => x.trim().length > 0);
    })
        .filter(x => x.length > 1 || x[0] !== '.');
    return sents;
};
MorseStringUtils.wordifyPunctuation = (s) => {
    let fixed = s.replace(/\r/g, '').replace(/\n/g, '');
    _configs_wordify_json__WEBPACK_IMPORTED_MODULE_0__.wordifications.forEach(w => {
        let myChars = w.characters;
        const before = w.characters;
        myChars = myChars.replace(/\?/g, '\\?')
            .replace(/\./g, '\\.')
            .replace(/\//g, '\\/');
        /*  if (before === 'HW?') {
          console.log(myChars)
        } */
        const fakeSpace = '|';
        if (!w.onlyAlone) {
            /* if (myChars === '<AR>') {
              console.log(`mychars:${myChars}`)
              console.log(`fixed:${fixed}`)
            } */
            const myRegex = new RegExp(`${myChars}`, 'gi');
            fixed = fixed.replace(myRegex, `${fakeSpace}${w.replacement}${fakeSpace}`);
        }
        else {
            // console.log(`mychars:${myChars}`)
            // guard state abbreviations from being part of a prosign
            // not all browsers suppor this
            // const myRegex = new RegExp(`\\b(?<!<)${myChars}\\b`, 'gi')
            // fixed = fixed.replace(myRegex, ` ${w.replacement} `)
            // if (before === 'HW?') {
            //   console.log(`fixed:${fixed}`)
            // }
            // TODO: for now we ignore multiline/spaces
            if (before.length === fixed.length) {
                const myRegex = new RegExp(`${myChars}`, 'gi');
                fixed = fixed.replace(myRegex, `${fakeSpace}${w.replacement}${fakeSpace}`);
            }
        }
    });
    return fixed;
};


/***/ }),

/***/ "./src/morse/voice/MorseVoice.ts":
/*!***************************************!*\
  !*** ./src/morse/voice/MorseVoice.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseVoice": () => (/* binding */ MorseVoice)
/* harmony export */ });
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _MorseVoiceInfo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MorseVoiceInfo */ "./src/morse/voice/MorseVoiceInfo.ts");
/* harmony import */ var _easyspeech_easyspeech_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../easyspeech/easyspeech.js */ "./src/easyspeech/easyspeech.js");



class MorseVoice {
    constructor(context) {
        this.voices = [];
        this.voicesInited = false;
        this.initEasySpeech = async () => {
            // let easySpeechInitStatus
            _easyspeech_easyspeech_js__WEBPACK_IMPORTED_MODULE_2__["default"].init().then((e) => {
                this.logToFlaggedWords(`easyspeechinit: ${e}`);
                this.populateVoiceList();
            }).catch((e) => {
                this.logToFlaggedWords(`error in easyspeechinit: ${e}`);
            });
        };
        this.logToFlaggedWords = (s) => {
            this.ctxt.logToFlaggedWords(s);
        };
        this.populateVoiceList = () => {
            if (!this.voiceCapable()) {
                return;
            }
            const easySpeechStatus = _easyspeech_easyspeech_js__WEBPACK_IMPORTED_MODULE_2__["default"].status();
            let idx = 0;
            if (easySpeechStatus.voices && easySpeechStatus.voices.length) {
                this.voices = easySpeechStatus.voices;
                this.voices.forEach(v => {
                    this.logToFlaggedWords(`voiceAvailable:${v.name}  lang:${v.lang} voiceURI:${v.voiceURI}`);
                });
                this.voices = this.voices.filter(x => x.lang === 'en-US').map((v) => {
                    v.idx = idx++;
                    return v;
                });
                this.voiceVoices(this.voices);
                this.logToFlaggedWords(`loaded voices:${this.voices.length}`);
            }
            else {
                this.logToFlaggedWords('no voices');
            }
        };
        this.speakInfo = (morseVoiceInfo) => {
            try {
                const esConfig = {
                    logger: this.logToFlaggedWords,
                    text: morseVoiceInfo.textToSpeak,
                    pitch: morseVoiceInfo.pitch,
                    rate: morseVoiceInfo.rate,
                    end: e => {
                        this.logToFlaggedWords('end event');
                        morseVoiceInfo.onEnd();
                        this.logToFlaggedWords('onEnd called');
                    },
                    volume: morseVoiceInfo.volume,
                    voice: morseVoiceInfo.voice ? morseVoiceInfo.voice : null,
                    lang: morseVoiceInfo.voice ? morseVoiceInfo.voice.lang : null,
                    voiceURI: morseVoiceInfo.voice ? morseVoiceInfo.voice.voiceURI : null,
                    error: e => {
                        this.logToFlaggedWords(`error event during speak:${e}`);
                        morseVoiceInfo.onEnd();
                    },
                    boundary: e => this.logToFlaggedWords('boundary event'),
                    mark: e => this.logToFlaggedWords('mark event'),
                    pause: e => this.logToFlaggedWords('pause event'),
                    force: true
                };
                _easyspeech_easyspeech_js__WEBPACK_IMPORTED_MODULE_2__["default"].speak(esConfig);
            }
            catch (e) {
                this.logToFlaggedWords(`caught in speakInfo2:${e}`);
                morseVoiceInfo.onEnd();
            }
        };
        this.initMorseVoiceInfo = (phraseToSpeak) => {
            const morseVoiceInfo = new _MorseVoiceInfo__WEBPACK_IMPORTED_MODULE_1__.MorseVoiceInfo();
            morseVoiceInfo.textToSpeak = phraseToSpeak.toLowerCase();
            const target = document.getElementById('selectVoiceDropdown');
            this.logToFlaggedWords(`target:${target ? 'target found' : 'target not found'}`);
            // const selectedIndex = target ? (target as any).selectedIndex : -1
            const selectedVal = target && target.value ? parseInt(`${target.value}`) : -1;
            const idx = this.voiceVoiceIdx() ? this.voiceVoiceIdx() : -1;
            this.logToFlaggedWords(`selectedVal:${selectedVal}`);
            this.logToFlaggedWords(`idx:${idx}`);
            if (idx !== selectedVal) {
                this.voiceVoiceIdx(selectedVal);
            }
            if (this.voiceVoice()) {
                this.logToFlaggedWords(`user selected a voice ${this.voiceVoice().name} ${this.voiceVoice().lang}`);
                morseVoiceInfo.voice = this.voiceVoice();
            }
            else {
                this.logToFlaggedWords('user did not select a voice');
                if (this.voices.length > 0) {
                    this.logToFlaggedWords(`selecting default 0 voice ${this.voices[0].name} ${this.voices[0].lang}`);
                    morseVoiceInfo.voice = this.voices[0];
                }
                else {
                    this.logToFlaggedWords('no voices');
                    morseVoiceInfo.voice = null;
                }
            }
            morseVoiceInfo.volume = this.voiceVolume() / 10;
            morseVoiceInfo.rate = this.voiceRate();
            morseVoiceInfo.pitch = this.voicePitch();
            // console.log(morseVoiceInfo.voice)
            return morseVoiceInfo;
        };
        this.speakPhrase = (phraseToSpeak, onEndCallBack) => {
            // console.log(this.voiceVoice().name)
            try {
                const morseVoiceInfo = this.initMorseVoiceInfo(phraseToSpeak);
                morseVoiceInfo.onEnd = onEndCallBack;
                this.speakInfo(morseVoiceInfo);
            }
            catch (e) {
                this.logToFlaggedWords(`caught in speakPhrase:${e}`);
                onEndCallBack();
            }
        };
        this.primeThePump = () => {
            const morseVoiceInfo = this.initMorseVoiceInfo('i');
            morseVoiceInfo.volume = 0;
            morseVoiceInfo.rate = 5;
            morseVoiceInfo.pitch = 1;
            morseVoiceInfo.onEnd = () => { this.logToFlaggedWords('pump primed'); };
            this.speakInfo(morseVoiceInfo);
        };
        this.speakerSelect = (e, f) => {
            // do a double-check for safari
            const idx = f.target.selectedIndex;
            // we assume if voiceVoice has already been set, or skipped
            const voiceName = !this.voiceVoice() || typeof this.voiceVoice().name === 'undefined' ? '' : this.voiceVoice.name;
            // if no voice just set to null
            if (idx === 0 && voiceName) {
                this.voiceVoice(null);
                return;
            }
            if (idx > 0) {
                const target = this.voiceVoices()[idx - 1];
                if (voiceName !== target.name) {
                    this.voiceVoice(target);
                }
            }
        };
        this.ctxt = context;
        this.voiceEnabled = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(false);
        this.voiceCapable = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(false);
        this.voiceThinkingTime = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(0);
        // this.voiceVoice = ko.observable()
        this.voiceVoiceIdx = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(-1);
        this.voiceVolume = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(10);
        this.voiceRate = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(1);
        this.voicePitch = knockout__WEBPACK_IMPORTED_MODULE_0__.observable(1);
        this.voiceLang = knockout__WEBPACK_IMPORTED_MODULE_0__.observable('en-us');
        this.voiceVoices = knockout__WEBPACK_IMPORTED_MODULE_0__.observableArray([]);
        this.voiceBuffer = [];
        const speechDetection = _easyspeech_easyspeech_js__WEBPACK_IMPORTED_MODULE_2__["default"].detect();
        if (speechDetection.speechSynthesis && speechDetection.speechSynthesisUtterance) {
            this.logToFlaggedWords('Speech Available');
            this.voiceCapable(true);
        }
        else {
            this.logToFlaggedWords(`Synthesis: ${speechDetection.speechSynthesis} Utterance:${speechDetection.speechSynthesisUtterance}`);
        }
        this.initEasySpeech();
        this.voiceVoice = knockout__WEBPACK_IMPORTED_MODULE_0__.computed(() => {
            if (this.voiceVoiceIdx() === -1) {
                return null;
            }
            return this.voiceVoices()[this.voiceVoiceIdx()];
        }, this);
    }
}


/***/ }),

/***/ "./src/morse/voice/MorseVoiceInfo.ts":
/*!*******************************************!*\
  !*** ./src/morse/voice/MorseVoiceInfo.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MorseVoiceInfo": () => (/* binding */ MorseVoiceInfo)
/* harmony export */ });
class MorseVoiceInfo {
}


/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/arrow-left.svg":
/*!***********************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/arrow-left.svg ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "arrow-left.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/arrow-repeat.svg":
/*!*************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/arrow-repeat.svg ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "arrow-repeat.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/bar-chart.svg":
/*!**********************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/bar-chart.svg ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "bar-chart.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/book.svg":
/*!*****************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/book.svg ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "book.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/chat-quote.svg":
/*!***********************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/chat-quote.svg ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "chat-quote.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/check-lg.svg":
/*!*********************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/check-lg.svg ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "check-lg.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/circle.svg":
/*!*******************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/circle.svg ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "circle.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/download.svg":
/*!*********************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/download.svg ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "download.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/exclamation-octagon.svg":
/*!********************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/exclamation-octagon.svg ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "exclamation-octagon.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/eye-slash.svg":
/*!**********************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/eye-slash.svg ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "eye-slash.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/eye.svg":
/*!****************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/eye.svg ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "eye.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/flag.svg":
/*!*****************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/flag.svg ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "flag.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/gear.svg":
/*!*****************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/gear.svg ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "gear.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/github.svg":
/*!*******************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/github.svg ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "github.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/graph-down-arrow.svg":
/*!*****************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/graph-down-arrow.svg ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "graph-down-arrow.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/graph-up-arrow.svg":
/*!***************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/graph-up-arrow.svg ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "graph-up-arrow.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/grid-3x3-gap.svg":
/*!*************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/grid-3x3-gap.svg ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "grid-3x3-gap.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/hourglass-split.svg":
/*!****************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/hourglass-split.svg ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "hourglass-split.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/list-ol.svg":
/*!********************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/list-ol.svg ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "list-ol.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/lock.svg":
/*!*****************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/lock.svg ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "lock.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/music-note.svg":
/*!***********************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/music-note.svg ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "music-note.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/pause-circle.svg":
/*!*************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/pause-circle.svg ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "pause-circle.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/play-circle.svg":
/*!************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/play-circle.svg ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "play-circle.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/rss.svg":
/*!****************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/rss.svg ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "rss.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/shuffle.svg":
/*!********************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/shuffle.svg ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "shuffle.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/skip-backward-circle.svg":
/*!*********************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/skip-backward-circle.svg ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "skip-backward-circle.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/skip-forward-circle.svg":
/*!********************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/skip-forward-circle.svg ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "skip-forward-circle.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/skip-start-circle.svg":
/*!******************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/skip-start-circle.svg ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "skip-start-circle.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/soundwave.svg":
/*!**********************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/soundwave.svg ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "soundwave.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/speedometer2.svg":
/*!*************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/speedometer2.svg ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "speedometer2.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/stop-circle.svg":
/*!************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/stop-circle.svg ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "stop-circle.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/stopwatch.svg":
/*!**********************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/stopwatch.svg ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "stopwatch.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/trash.svg":
/*!******************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/trash.svg ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "trash.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/unlock.svg":
/*!*******************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/unlock.svg ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "unlock.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/upload.svg":
/*!*******************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/upload.svg ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "upload.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/volume-mute.svg":
/*!************************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/volume-mute.svg ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "volume-mute.svg";

/***/ }),

/***/ "./node_modules/bootstrap-icons/icons/volume-up.svg":
/*!**********************************************************!*\
  !*** ./node_modules/bootstrap-icons/icons/volume-up.svg ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "volume-up.svg";

/***/ }),

/***/ "./src/assets/CW-Club-logo-clear400-300x300.png":
/*!******************************************************!*\
  !*** ./src/assets/CW-Club-logo-clear400-300x300.png ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "CW-Club-logo-clear400-300x300.png";

/***/ }),

/***/ "./node_modules/js-cookie/dist/js.cookie.mjs":
/*!***************************************************!*\
  !*** ./node_modules/js-cookie/dist/js.cookie.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*! js-cookie v3.0.1 | MIT */
/* eslint-disable no-var */
function assign (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      target[key] = source[key];
    }
  }
  return target
}
/* eslint-enable no-var */

/* eslint-disable no-var */
var defaultConverter = {
  read: function (value) {
    if (value[0] === '"') {
      value = value.slice(1, -1);
    }
    return value.replace(/(%[\dA-F]{2})+/gi, decodeURIComponent)
  },
  write: function (value) {
    return encodeURIComponent(value).replace(
      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,
      decodeURIComponent
    )
  }
};
/* eslint-enable no-var */

/* eslint-disable no-var */

function init (converter, defaultAttributes) {
  function set (key, value, attributes) {
    if (typeof document === 'undefined') {
      return
    }

    attributes = assign({}, defaultAttributes, attributes);

    if (typeof attributes.expires === 'number') {
      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);
    }
    if (attributes.expires) {
      attributes.expires = attributes.expires.toUTCString();
    }

    key = encodeURIComponent(key)
      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)
      .replace(/[()]/g, escape);

    var stringifiedAttributes = '';
    for (var attributeName in attributes) {
      if (!attributes[attributeName]) {
        continue
      }

      stringifiedAttributes += '; ' + attributeName;

      if (attributes[attributeName] === true) {
        continue
      }

      // Considers RFC 6265 section 5.2:
      // ...
      // 3.  If the remaining unparsed-attributes contains a %x3B (";")
      //     character:
      // Consume the characters of the unparsed-attributes up to,
      // not including, the first %x3B (";") character.
      // ...
      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];
    }

    return (document.cookie =
      key + '=' + converter.write(value, key) + stringifiedAttributes)
  }

  function get (key) {
    if (typeof document === 'undefined' || (arguments.length && !key)) {
      return
    }

    // To prevent the for loop in the first place assign an empty array
    // in case there are no cookies at all.
    var cookies = document.cookie ? document.cookie.split('; ') : [];
    var jar = {};
    for (var i = 0; i < cookies.length; i++) {
      var parts = cookies[i].split('=');
      var value = parts.slice(1).join('=');

      try {
        var foundKey = decodeURIComponent(parts[0]);
        jar[foundKey] = converter.read(value, foundKey);

        if (key === foundKey) {
          break
        }
      } catch (e) {}
    }

    return key ? jar[key] : jar
  }

  return Object.create(
    {
      set: set,
      get: get,
      remove: function (key, attributes) {
        set(
          key,
          '',
          assign({}, attributes, {
            expires: -1
          })
        );
      },
      withAttributes: function (attributes) {
        return init(this.converter, assign({}, this.attributes, attributes))
      },
      withConverter: function (converter) {
        return init(assign({}, this.converter, converter), this.attributes)
      }
    },
    {
      attributes: { value: Object.freeze(defaultAttributes) },
      converter: { value: Object.freeze(converter) }
    }
  )
}

var api = init(defaultConverter, { path: '/' });
/* eslint-enable no-var */

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (api);


/***/ }),

/***/ "./src/configs/licwdefaults.json":
/*!***************************************!*\
  !*** ./src/configs/licwdefaults.json ***!
  \***************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"startupSettings":[{"key":"dummykey","value":"dummyvalue","comment":"PROBABLY YOU ONLY WANT TO EDIT \'value\'S, DO NOT TOUCH \'key\'S UNLESS YOU ARE SURE!","comment2":"remember numbers and true/false don\'t need quotes, just quote text"},{"key":"showingText","value":"CQ LICW","comment":"text that shows up every time browser refreshed. advise you keep something here so newb can just hit play..."},{"key":"wpm","value":20,"comment":""},{"key":"fwpm","value":20,"comment":"remember if this deviates from wpm, set syncWpm below to false"},{"key":"ditFrequency","value":600,"comment":""},{"key":"dahFrequency","value":600,"comment":"remember if dit dah are different, set syncFreq below to false"},{"key":"preSpace","value":1,"comment":"seconds of silence before playing first word, for blue tooth etc"},{"key":"xtraWordSpaceDits","value":1,"comment":"1=normal wordspacing, 2=2x wordspacing, etc"},{"key":"volume","value":10,"comment":""},{"key":"stickySets","value":"BK","comment":"put a space between sets"},{"key":"ifStickySets","value":false,"comment":"whether stickysets functionality on"},{"key":"syncWpm","value":true,"comment":"make this false if wpm and fwpm are different above"},{"key":"syncFreq","value":true,"comment":"make this false if dit and dah are different"},{"key":"hideList","value":true,"comment":"by default hide the word list boxes/cards that get generated i.e. don\'t reveal"},{"key":"showRaw","value":true,"comment":"by default dont hide the main top text area"},{"key":"autoCloseLessonAccordian","value":false,"comment":""},{"key":"cardFontPx","value":15,"comment":"controls the font size of the cards may help with visibility"}]}');

/***/ }),

/***/ "./src/configs/wordify.json":
/*!**********************************!*\
  !*** ./src/configs/wordify.json ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"wordifications":[{"characters":",","replacement":"comma","onlyAlone":false},{"characters":".","replacement":"period","onlyAlone":false},{"characters":"HW?","replacement":"How copy","onlyAlone":true},{"characters":"?","replacement":"question mark","onlyAlone":false},{"characters":"/","replacement":"stroke","onlyAlone":false},{"characters":":","replacement":"colon","onlyAlone":false},{"characters":"!","replacement":"exclamation","onlyAlone":false},{"characters":"-","replacement":"dash","onlyAlone":false},{"characters":"<AR>","replacement":"end of message","onlyAlone":false},{"characters":"<BT>","replacement":"pause","onlyAlone":false},{"characters":"<SK>","replacement":"end of contact","onlyAlone":false},{"characters":"AL","replacement":"Alabama","onlyAlone":true},{"characters":"AK","replacement":"Alaska","onlyAlone":true},{"characters":"AZ","replacement":"Arizona","onlyAlone":true},{"characters":"AR","replacement":"Arkansas","onlyAlone":true},{"characters":"CA","replacement":"California","onlyAlone":true},{"characters":"CO","replacement":"Colorado","onlyAlone":true},{"characters":"CT","replacement":"Connecticut","onlyAlone":true},{"characters":"FL","replacement":"Florida","onlyAlone":true},{"characters":"GA","replacement":"Georgia","onlyAlone":true},{"characters":"HI","replacement":"Hawaii","onlyAlone":true},{"characters":"ID","replacement":"Idaho","onlyAlone":true},{"characters":"IL","replacement":"Illinois","onlyAlone":true},{"characters":"IN","replacement":"Indiana","onlyAlone":true},{"characters":"IA","replacement":"Iowa","onlyAlone":true},{"characters":"KS","replacement":"Kansas","onlyAlone":true},{"characters":"KY","replacement":"Kentucky","onlyAlone":true},{"characters":"LA","replacement":"Louisiana","onlyAlone":true},{"characters":"ME","replacement":"Maine","onlyAlone":true},{"characters":"MD","replacement":"Maryland","onlyAlone":true},{"characters":"MA","replacement":"Massachusetts","onlyAlone":true},{"characters":"MI","replacement":"Michigan","onlyAlone":true},{"characters":"MN","replacement":"Minnesota","onlyAlone":true},{"characters":"MS","replacement":"Mississippi","onlyAlone":true},{"characters":"MO","replacement":"Missouri","onlyAlone":true},{"characters":"MT","replacement":"Montana","onlyAlone":true},{"characters":"NE","replacement":"Nebraska","onlyAlone":true},{"characters":"NV","replacement":"Nevada","onlyAlone":true},{"characters":"NH","replacement":"New Hampshire","onlyAlone":true},{"characters":"NJ","replacement":"New Jersey","onlyAlone":true},{"characters":"NM","replacement":"New Mexico","onlyAlone":true},{"characters":"NY","replacement":"New York","onlyAlone":true},{"characters":"NC","replacement":"North Carolina","onlyAlone":true},{"characters":"ND","replacement":"North Dakota","onlyAlone":true},{"characters":"OH","replacement":"Ohio","onlyAlone":true},{"characters":"OK","replacement":"Oklahoma","onlyAlone":true},{"characters":"PA","replacement":"Pennsylvania","onlyAlone":true},{"characters":"RI","replacement":"Rhode Island","onlyAlone":true},{"characters":"SC","replacement":"South Carolina","onlyAlone":true},{"characters":"SD","replacement":"South Dakota","onlyAlone":true},{"characters":"TN","replacement":"Tennessee","onlyAlone":true},{"characters":"TX","replacement":"Texas","onlyAlone":true},{"characters":"UT","replacement":"Utah","onlyAlone":true},{"characters":"VT","replacement":"Vermont","onlyAlone":true},{"characters":"VA","replacement":"Virginia","onlyAlone":true},{"characters":"WA","replacement":"Washington","onlyAlone":true},{"characters":"WV","replacement":"West Virginia","onlyAlone":true},{"characters":"WI","replacement":"Wisconsin","onlyAlone":true},{"characters":"WY","replacement":"Wyoming","onlyAlone":true},{"characters":"5NN","replacement":"599","onlyAlone":true},{"characters":"ABT","replacement":"About","onlyAlone":true},{"characters":"AGN","replacement":"Again","onlyAlone":true},{"characters":"ANT","replacement":"Antenna","onlyAlone":true},{"characters":"B4","replacement":"Before","onlyAlone":true},{"characters":"BK","replacement":"Break","onlyAlone":true},{"characters":"CFM","replacement":"Confirm","onlyAlone":true},{"characters":"CPI","replacement":"Copy","onlyAlone":true},{"characters":"CU","replacement":"See you","onlyAlone":true},{"characters":"CUAGN","replacement":"See you again","onlyAlone":true},{"characters":"CUL","replacement":"See you later","onlyAlone":true},{"characters":"DN","replacement":"Down","onlyAlone":true},{"characters":"DR","replacement":"Dear","onlyAlone":true},{"characters":"EL","replacement":"Element","onlyAlone":true},{"characters":"ES","replacement":"And","onlyAlone":true},{"characters":"FB","replacement":"Fine business","onlyAlone":true},{"characters":"FER","replacement":"For","onlyAlone":true},{"characters":"FM","replacement":"From","onlyAlone":true},{"characters":"FT","replacement":"Feet","onlyAlone":true},{"characters":"GA","replacement":"Good afternoon","onlyAlone":true},{"characters":"GE","replacement":"Good evening","onlyAlone":true},{"characters":"GM","replacement":"Good morning","onlyAlone":true},{"characters":"GN","replacement":"Good night","onlyAlone":true},{"characters":"GND","replacement":"Ground","onlyAlone":true},{"characters":"GUD","replacement":"Good","onlyAlone":true},{"characters":"HPE","replacement":"Hope","onlyAlone":true},{"characters":"HR","replacement":"Hear","onlyAlone":true},{"characters":"HW","replacement":"How","onlyAlone":true},{"characters":"OM","replacement":"Old man","onlyAlone":true},{"characters":"OP","replacement":"Operatoe","onlyAlone":true},{"characters":"OT","replacement":"Old timer","onlyAlone":true},{"characters":"PSE","replacement":"Please","onlyAlone":true},{"characters":"PWR","replacement":"Power","onlyAlone":true},{"characters":"RPRT","replacement":"Report","onlyAlone":true},{"characters":"RPT","replacement":"Repeat","onlyAlone":true},{"characters":"RR","replacement":"Roger roger","onlyAlone":true},{"characters":"RX","replacement":"Receiver","onlyAlone":true},{"characters":"SIG","replacement":"Signal","onlyAlone":true},{"characters":"SKED","replacement":"Schedule","onlyAlone":true},{"characters":"SRI","replacement":"Sorry","onlyAlone":true},{"characters":"SSB","replacement":"Single side band","onlyAlone":true},{"characters":"Temp","replacement":"Temperature","onlyAlone":true},{"characters":"TKS","replacement":"Thanks","onlyAlone":true},{"characters":"TNX","replacement":"Thanks","onlyAlone":true},{"characters":"TU","replacement":"Thank you","onlyAlone":true},{"characters":"U","replacement":"You","onlyAlone":true},{"characters":"UR","replacement":"Your","onlyAlone":true},{"characters":"VERT","replacement":"Vertical","onlyAlone":true},{"characters":"VY","replacement":"Very","onlyAlone":true},{"characters":"WID","replacement":"With","onlyAlone":true},{"characters":"WPM","replacement":"Words per minute","onlyAlone":true},{"characters":"WUD","replacement":"Would","onlyAlone":true},{"characters":"WX","replacement":"Weather","onlyAlone":true},{"characters":"YRS","replacement":"Years","onlyAlone":true},{"characters":"DE","replacement":"From","onlyAlone":true}]}');

/***/ }),

/***/ "./src/wordfilesconfigs/wordlists.json":
/*!*********************************************!*\
  !*** ./src/wordfilesconfigs/wordlists.json ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"fileOptions":[{"sort":1,"userTarget":"STUDENT","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA","fileName":"SB1REA1.json"},{"sort":2,"userTarget":"STUDENT","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA UWB","fileName":"SB1REA2.json"},{"sort":3,"userTarget":"STUDENT","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA UWB HOF","fileName":"SB1REA3.json"},{"sort":4,"userTarget":"STUDENT","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA UWB HOF LCD","fileName":"SB1REA4.json"},{"sort":5,"userTarget":"STUDENT","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA UWB HOF LCD PGS","fileName":"SB1REA5.json"},{"sort":6,"userTarget":"STUDENT","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA UWB HOF LCD PGS TIN","fileName":"SB1REA6.json"},{"sort":7,"userTarget":"STUDENT","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN","fileName":"SB1TIN1.json"},{"sort":8,"userTarget":"STUDENT","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN REA","fileName":"SB1TIN2.json"},{"sort":9,"userTarget":"STUDENT","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN REA UWB","fileName":"SB1TIN3.json"},{"sort":10,"userTarget":"STUDENT","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN REA UWB HOF","fileName":"SB1TIN4.json"},{"sort":11,"userTarget":"STUDENT","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN REA UWB HOF LCD","fileName":"SB1TIN5.json"},{"sort":12,"userTarget":"STUDENT","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN REA UWB HOF LCD PGS","fileName":"SB1TIN6.json"},{"sort":13,"userTarget":"STUDENT","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS","fileName":"SB1PGS1.json"},{"sort":14,"userTarget":"STUDENT","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS TIN","fileName":"SB1PGS2.json"},{"sort":15,"userTarget":"STUDENT","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS TIN REA","fileName":"SB1PGS3.json"},{"sort":16,"userTarget":"STUDENT","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS TIN REA UWB","fileName":"SB1PGS4.json"},{"sort":17,"userTarget":"STUDENT","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS TIN REA UWB HOF","fileName":"SB1PGS5.json"},{"sort":18,"userTarget":"STUDENT","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS TIN REA UWB HOF LCD","fileName":"SB1PGS6.json"},{"sort":19,"userTarget":"STUDENT","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD","fileName":"SB1LCD1.json"},{"sort":20,"userTarget":"STUDENT","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD PGS","fileName":"SB1LCD2.json"},{"sort":21,"userTarget":"STUDENT","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD PGS TIN","fileName":"SB1LCD3.json"},{"sort":22,"userTarget":"STUDENT","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD PGS TIN REA","fileName":"SB1LCD4.json"},{"sort":23,"userTarget":"STUDENT","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD PGS TIN REA UWB","fileName":"SB1LCD5.json"},{"sort":24,"userTarget":"STUDENT","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD PGS TIN REA UWB HOF","fileName":"SB1LCD6.json"},{"sort":25,"userTarget":"STUDENT","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF","fileName":"SB1HOF1.json"},{"sort":26,"userTarget":"STUDENT","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF LCD","fileName":"SB1HOF2.json"},{"sort":27,"userTarget":"STUDENT","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF LCD PGS","fileName":"SB1HOF3.json"},{"sort":28,"userTarget":"STUDENT","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF LCD PGS TIN","fileName":"SB1HOF4.json"},{"sort":29,"userTarget":"STUDENT","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF LCD PGS TIN REA","fileName":"SB1HOF5.json"},{"sort":30,"userTarget":"STUDENT","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF LCD PGS TIN REA UWB","fileName":"SB1HOF6.json"},{"sort":31,"userTarget":"STUDENT","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB","fileName":"SB1UWB1.json"},{"sort":32,"userTarget":"STUDENT","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB HOF","fileName":"SB1UWB2.json"},{"sort":33,"userTarget":"STUDENT","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB HOF LCD","fileName":"SB1UWB3.json"},{"sort":34,"userTarget":"STUDENT","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB HOF LCD PGS","fileName":"SB1UWB4.json"},{"sort":35,"userTarget":"STUDENT","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB HOF LCD PGS TIN","fileName":"SB1UWB5.json"},{"sort":36,"userTarget":"STUDENT","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB HOF LCD PGS TIN REA","fileName":"SB1UWB6.json"},{"sort":37,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"KMY","fileName":"SB2KMY2.json"},{"sort":38,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"B1 REVIEW","fileName":"B1.json"},{"sort":39,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"B1 KMY","fileName":"SB2KMY6.json"},{"sort":40,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"B1 KMY 40","fileName":"SB2KMY7.json"},{"sort":41,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"B1 KMY 40 28BK","fileName":"SB2KMY8.json"},{"sort":42,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"B1 KMY 40 28BK ZJ/","fileName":"SB2KMY9.json"},{"sort":43,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"B1 KMY 40 28BK  ZJ/ 16.","fileName":"SB2KMY10.json"},{"sort":44,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"B1 KMY 40 28BK  ZJ/ 16. <AR><SK><BT>","fileName":"SB2KMY11.json"},{"sort":45,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"B1 KMY 40 28BK  ZJ/ 16. <AR><SK><BT> 73?","fileName":"SB2KMY12.json"},{"sort":46,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"B1 KMY 40 28BK  ZJ/ 16. <AR><SK><BT> 73? QXV","fileName":"SB2KMY13.json"},{"sort":47,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"B1 KMY 40 28BK  ZJ/ 16. <AR><SK><BT> 73? QXV 59,","fileName":"B1B2.json"},{"sort":48,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"STATES","fileName":"SB2KMY5.txt"},{"sort":49,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"SB2KMY3.txt"},{"sort":50,"userTarget":"STUDENT","class":"B2","letterGroup":"KMY","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"SB2KMY4.txt"},{"sort":51,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"59,","fileName":"SB2592.json"},{"sort":52,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"B1 REVIEW","fileName":"B1.json"},{"sort":53,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"B1 59,","fileName":"SB2597.json"},{"sort":54,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"B1 59, KMY","fileName":"SB2598.json"},{"sort":55,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"B1 59, KMY 40","fileName":"SB2599.json"},{"sort":56,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"B1 59, KMY 40 28BK","fileName":"SB25910.json"},{"sort":57,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"B1 59, KMY 40 28BK ZJ/","fileName":"SB25911.json"},{"sort":58,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"B1 59, KMY 40 28BK ZJ/ 16.","fileName":"SB25912.json"},{"sort":59,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"B1 59, KMY 40 28BK ZJ/ 16. <AR><SK><BT>","fileName":"SB25913.json"},{"sort":60,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"B1 59, KMY 40 28BK ZJ/ 16. <AR><SK><BT> 73?","fileName":"SB25914.json"},{"sort":61,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"B1 59, KMY 40 28BK ZJ/ 16. <AR><SK><BT> 73? QXV","fileName":"B1B2.json"},{"sort":62,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"CALLSIGNS","fileName":"SB2595.txt"},{"sort":63,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"STATES","fileName":"SB2596.txt"},{"sort":64,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"SB2593.txt"},{"sort":65,"userTarget":"STUDENT","class":"B2","letterGroup":"59,","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"SB2594.txt"},{"sort":66,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"QXV","fileName":"SB2QXV2.json"},{"sort":67,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"B1 REVIEW","fileName":"B1.json"},{"sort":68,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"B1 QXV","fileName":"SB2QXV6.json"},{"sort":69,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"B1 QXV 59,","fileName":"SB2QXV7.json"},{"sort":70,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"B1 QXV 59, KMY","fileName":"SB2QXV8.json"},{"sort":71,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"B1 QXV 59, KMY 40","fileName":"SB2QXV9.json"},{"sort":72,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"B1 QXV 59, KMY 40 28BK","fileName":"SB2QXV10.json"},{"sort":73,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"B1 QXV 59, KMY 40 28BK ZJ/","fileName":"SB2QXV11.json"},{"sort":74,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"B1 QXV 59, KMY 40 28BK ZJ/ 16.","fileName":"SB2QXV12.json"},{"sort":75,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"B1 QXV 59, KMY 40 28BK ZJ/ 16. <AR><SK><BT>","fileName":"SB2QXV13.json"},{"sort":76,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"B1 QXV 59, KMY 40 28BK ZJ/ 16. <AR><SK><BT> 73?","fileName":"B1B2.json"},{"sort":77,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"STATES","fileName":"SB2QXV5.txt"},{"sort":78,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"SB2QXV3.txt"},{"sort":79,"userTarget":"STUDENT","class":"B2","letterGroup":"QXV","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"SB2QXV4.txt"},{"sort":80,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"73?","fileName":"SB2732.json"},{"sort":81,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"B1 REVIEW","fileName":"B1.json"},{"sort":82,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"B1 73?","fileName":"SB2737.json"},{"sort":83,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"B1 73? QXV","fileName":"SB2738.json"},{"sort":84,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"B1 73? QXV 59,","fileName":"SB2739.json"},{"sort":85,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"B1 73? QXV 59, KMY","fileName":"SB27310.json"},{"sort":86,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"B1 73? QXV 59, KMY 40","fileName":"SB27311.json"},{"sort":87,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"B1 73? QXV 59, KMY 40 28BK","fileName":"SB27312.json"},{"sort":88,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"B1 73? QXV 59, KMY 40 28BK ZJ/","fileName":"SB27313.json"},{"sort":89,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"B1 73? QXV 59, KMY 40 28BK ZJ/ 16.","fileName":"SB27314.json"},{"sort":90,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"B1 73? QXV 59, KMY 40 28BK ZJ/ 16. <AR><SK><BT>","fileName":"B1B2.json"},{"sort":91,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"CALLSIGNS","fileName":"SB2735.txt"},{"sort":92,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"STATES","fileName":"SB2736.txt"},{"sort":93,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"SB2733.txt"},{"sort":94,"userTarget":"STUDENT","class":"B2","letterGroup":"73?","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"SB2734.txt"},{"sort":95,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"<AR><SK><BT>","fileName":"SB2ARSKBT2.json"},{"sort":96,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"B1 REVIEW","fileName":"B1.json"},{"sort":97,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"B1 <AR><SK><BT>","fileName":"SB2ARSKBT6.json"},{"sort":98,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"B1 <AR><SK><BT> 73?","fileName":"SB2ARSKBT7.json"},{"sort":99,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"B1 <AR><SK><BT> 73? QXV","fileName":"SB2ARSKBT8.json"},{"sort":100,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"B1 <AR><SK><BT> 73? QXV 59,","fileName":"SB2ARSKBT9.json"},{"sort":101,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"B1 <AR><SK><BT> 73? QXV 59, KMY","fileName":"SB2ARSKBT10.json"},{"sort":102,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"B1 <AR><SK><BT> 73? QXV 59, KMY 40","fileName":"SB2ARSKBT11.json"},{"sort":103,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"B1 <AR><SK><BT> 73? QXV 59, KMY 40 28BK","fileName":"SB2ARSKBT12.json"},{"sort":104,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"B1 <AR><SK><BT> 73? QXV 59, KMY 40 28BK ZJ/","fileName":"SB2ARSKBT13.json"},{"sort":105,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"B1 <AR><SK><BT> 73? QXV 59, KMY 40 28BK ZJ/ 16.","fileName":"B1B2.json"},{"sort":106,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"STATES","fileName":"SB2ARSKBT5.txt"},{"sort":107,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"SB2ARSKBT3.txt"},{"sort":108,"userTarget":"STUDENT","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"SB2ARSKBT4.txt"},{"sort":109,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"16.","fileName":"SB2162.json"},{"sort":110,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"B1 REVIEW","fileName":"B1.json"},{"sort":111,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"B1 16.","fileName":"SB2167.json"},{"sort":112,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"B1 16. <AR><SK><BT>","fileName":"SB2168.json"},{"sort":113,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"B1 16. <AR><SK><BT> 73?","fileName":"SB2169.json"},{"sort":114,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"B1 16. <AR><SK><BT> 73? QXV","fileName":"SB21610.json"},{"sort":115,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"B1 16. <AR><SK><BT> 73? QXV 59,","fileName":"SB21611.json"},{"sort":116,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"B1 16. <AR><SK><BT> 73? QXV 59, KMY","fileName":"SB21612.json"},{"sort":117,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"B1 16. <AR><SK><BT> 73? QXV 59, KMY 40","fileName":"SB21613.json"},{"sort":118,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"B1 16. <AR><SK><BT> 73? QXV 59, KMY 40 28BK","fileName":"SB21614.json"},{"sort":119,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"B1 16. <AR><SK><BT> 73? QXV 59, KMY 40 28BK ZJ/","fileName":"B1B2.json"},{"sort":120,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"CALLSIGNS","fileName":"SB2165.txt"},{"sort":121,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"STATES","fileName":"SB2166.txt"},{"sort":122,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"SB2163.txt"},{"sort":123,"userTarget":"STUDENT","class":"B2","letterGroup":"16.","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"SB2164.txt"},{"sort":124,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"ZJ/","fileName":"SB2ZJ2.json"},{"sort":125,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"B1 REVIEW","fileName":"B1.json"},{"sort":126,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"B1 ZJ/","fileName":"SB2ZJ6.json"},{"sort":127,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"B1 ZJ/ 16.","fileName":"SB2ZJ7.json"},{"sort":128,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"B1 ZJ/ 16. <AR><SK><BT>","fileName":"SB2ZJ8.json"},{"sort":129,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"B1 ZJ/ 16. <AR><SK><BT> 73?","fileName":"SB2ZJ9.json"},{"sort":130,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"B1 ZJ/ 16. <AR><SK><BT> 73? QXV","fileName":"SB2ZJ10.json"},{"sort":131,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"B1 ZJ/ 16. <AR><SK><BT> 73? QXV 59,","fileName":"SB2ZJ11.json"},{"sort":132,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"B1 ZJ/ 16. <AR><SK><BT> 73? QXV 59, KMY","fileName":"SB2ZJ12.json"},{"sort":133,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"B1 ZJ/ 16. <AR><SK><BT> 73? QXV 59, KMY 40","fileName":"SB2ZJ13.json"},{"sort":134,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"B1 ZJ/ 16. <AR><SK><BT> 73? QXV 59, KMY 40 28BK","fileName":"B1B2.json"},{"sort":135,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"STATES","fileName":"SB2ZJ5.txt"},{"sort":136,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"SB2ZJ3.txt"},{"sort":137,"userTarget":"STUDENT","class":"B2","letterGroup":"ZJ/","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"SB2ZJ4.txt"},{"sort":138,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"28BK","fileName":"SB228BK2.json"},{"sort":139,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"B1 REVIEW","fileName":"B1.json"},{"sort":140,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"B1 28BK","fileName":"SB228BK7.json"},{"sort":141,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"B1 28BK ZJ/","fileName":"SB228BK8.json"},{"sort":142,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"B1 28BK ZJ/ 16.","fileName":"SB228BK9.json"},{"sort":143,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"B1 28BK ZJ/ 16. <AR><SK><BT>","fileName":"SB228BK10.json"},{"sort":144,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"B1 28BK ZJ/ 16. <AR><SK><BT> 73?","fileName":"SB228BK11.json"},{"sort":145,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"B1 28BK ZJ/ 16. <AR><SK><BT> 73? QXV","fileName":"SB228BK12.json"},{"sort":146,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"B1 28BK ZJ/ 16. <AR><SK><BT> 73? QXV 59,","fileName":"SB228BK13.json"},{"sort":147,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"B1 28BK ZJ/ 16. <AR><SK><BT> 73? QXV 59, KMY","fileName":"SB228BK14.json"},{"sort":148,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"B1 28BK ZJ/ 16. <AR><SK><BT> 73? QXV 59, KMY 40","fileName":"B1B2.json"},{"sort":149,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"CALLSIGNS","fileName":"SB228BK5.txt"},{"sort":150,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"STATES","fileName":"SB228BK6.txt"},{"sort":151,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"SB228BK3.txt"},{"sort":152,"userTarget":"STUDENT","class":"B2","letterGroup":"28BK","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"SB228BK4.txt"},{"sort":153,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"40","fileName":"SB2402.json"},{"sort":154,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"B1 REVIEW","fileName":"B1.json"},{"sort":155,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"B1 40","fileName":"SB2407.json"},{"sort":156,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"B1 40 28BK","fileName":"SB2408.json"},{"sort":157,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"B1 40 28BK ZJ/","fileName":"SB2409.json"},{"sort":158,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"B1 40 28BK ZJ/ 16.","fileName":"SB24010.json"},{"sort":159,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"B1 40 28BK ZJ/ 16. <AR><SK><BT>","fileName":"SB24011.json"},{"sort":160,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"B1 40 28BK ZJ/ 16. <AR><SK><BT> 73?","fileName":"SB24012.json"},{"sort":161,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"B1 40 28BK ZJ/ 16. <AR><SK><BT> 73? QXV","fileName":"SB24013.json"},{"sort":162,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"B1 40 28BK ZJ/ 16. <AR><SK><BT> 73? QXV 59,","fileName":"SB24014.json"},{"sort":163,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"B1 40 28BK ZJ/ 16. <AR><SK><BT> 73? QXV 59, KMY","fileName":"B1B2.json"},{"sort":164,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"CALLSIGNS","fileName":"SB2405.txt"},{"sort":165,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"STATES","fileName":"SB2406.txt"},{"sort":166,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"SB2403.txt"},{"sort":167,"userTarget":"STUDENT","class":"B2","letterGroup":"40","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"SB2404.txt"},{"sort":168,"userTarget":"STUDENT","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":false,"display":"B1B2 REVIEW","fileName":"SB2C1.json"},{"sort":169,"userTarget":"STUDENT","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"SB2C2.txt"},{"sort":170,"userTarget":"STUDENT","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":true,"display":"QSO PROTOCOL 1","fileName":"SB2C3.txt"},{"sort":171,"userTarget":"STUDENT","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":true,"display":"QSO PROTOCOL 2","fileName":"SB2C4.txt"},{"sort":172,"userTarget":"STUDENT","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":true,"display":"QSO PROTOCOL 3","fileName":"SB2C5.txt"},{"sort":173,"userTarget":"STUDENT","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":true,"display":"QSO PROTOCOL 4","fileName":"SB2C6.txt"},{"sort":174,"userTarget":"STUDENT","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":false,"display":"CALLSIGNS","fileName":"SB2C7.txt"},{"sort":175,"userTarget":"STUDENT","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":false,"display":"STATES","fileName":"SB2C8.txt"},{"sort":176,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"R","fileName":"IB1REA1.json"},{"sort":177,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"E","fileName":"IB1REA2.json"},{"sort":178,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"RE","fileName":"IB1REA3.json"},{"sort":179,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"A","fileName":"IB1REA4.json"},{"sort":180,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA","fileName":"IB1REA5.json"},{"sort":181,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"UWB HOF ","fileName":"IB1REA6.json"},{"sort":182,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA UWB HOF","fileName":"IB1REA7.json"},{"sort":183,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"T","fileName":"IB1TIN1.json"},{"sort":184,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"I","fileName":"IB1TIN2.json"},{"sort":185,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TI","fileName":"IB1TIN3.json"},{"sort":186,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"N","fileName":"IB1TIN4.json"},{"sort":187,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN","fileName":"IB1TIN5.json"},{"sort":188,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"REA UWB","fileName":"IB1TIN6.json"},{"sort":189,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN REA UWB","fileName":"IB1TIN7.json"},{"sort":190,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"P","fileName":"IB1PGS1.json"},{"sort":191,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"G","fileName":"IB1PGS2.json"},{"sort":192,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PG","fileName":"IB1PGS3.json"},{"sort":193,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"S","fileName":"IB1PGS4.json"},{"sort":194,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS","fileName":"IB1PGS5.json"},{"sort":195,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"TIN REA","fileName":"IB1PGS6.json"},{"sort":196,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS TIN REA","fileName":"IB1PGS7.json"},{"sort":197,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"L","fileName":"IB1LCD1.json"},{"sort":198,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"C","fileName":"IB1LCD2.json"},{"sort":199,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LC","fileName":"IB1LCD3.json"},{"sort":200,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"D","fileName":"IB1LCD4.json"},{"sort":201,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD","fileName":"IB1LCD5.json"},{"sort":202,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"PGS TIN","fileName":"IB1LCD6.json"},{"sort":203,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD PGS TIN","fileName":"IB1LCD7.json"},{"sort":204,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"H","fileName":"IB1HOF1.json"},{"sort":205,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"O","fileName":"IB1HOF2.json"},{"sort":206,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HO","fileName":"IB1HOF3.json"},{"sort":207,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"F","fileName":"IB1HOF4.json"},{"sort":208,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF","fileName":"IB1HOF5.json"},{"sort":209,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"LCD PGS  ","fileName":"IB1HOF6.json"},{"sort":210,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF LCD PGS","fileName":"IB1HOF7.json"},{"sort":211,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"U ","fileName":"IB1UWB1.json"},{"sort":212,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"W","fileName":"IB1UWB2.json"},{"sort":213,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UW ","fileName":"IB1UWB3.json"},{"sort":214,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"B ","fileName":"IB1UWB4.json"},{"sort":215,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB  ","fileName":"IB1UWB5.json"},{"sort":216,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"HOF LCD  ","fileName":"IB1UWB6.json"},{"sort":217,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB HOF LCD","fileName":"IB1UWB7.json"},{"sort":218,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"K","fileName":"IB2KMY1.json"},{"sort":219,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"M","fileName":"IB2KMY2.json"},{"sort":220,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"KM","fileName":"IB2KMY3.json"},{"sort":221,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"Y","fileName":"IB2KMY4.json"},{"sort":222,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"KMY","fileName":"IB2KMY5.json"},{"sort":223,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"B1 KMY","fileName":"SB2KMY6.json"},{"sort":224,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"STATES","fileName":"IB2KMY8.txt"},{"sort":225,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"IB2KMY6.txt"},{"sort":226,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"KMY","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"IB2KMY7.txt"},{"sort":227,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"KMY","newlineChunking":false,"display":"SPEED DRILL","fileName":"IB2KMY9.json"},{"sort":228,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"5","fileName":"IB2591.json"},{"sort":229,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"9","fileName":"IB2592.json"},{"sort":230,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"59","fileName":"IB2593.json"},{"sort":231,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"59,","newlineChunking":false,"display":",","fileName":"IB2594.json"},{"sort":232,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"59,","fileName":"IB2595.json"},{"sort":233,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"B1 59,","fileName":"SB2597.json"},{"sort":234,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"CALLSIGNS","fileName":"IB2598.txt"},{"sort":235,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"STATES","fileName":"IB2599.txt"},{"sort":236,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"IB2596.txt"},{"sort":237,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"59,","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"IB2597.txt"},{"sort":238,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"59,","newlineChunking":false,"display":"SPEED DRILL","fileName":"IB25910.json"},{"sort":239,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"Q","fileName":"IB2QXV1.json"},{"sort":240,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"X","fileName":"IB2QXV2.json"},{"sort":241,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"QX","fileName":"IB2QXV3.json"},{"sort":242,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":" V","fileName":"IB2QXV4.json"},{"sort":243,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"QXV","fileName":"IB2QXV5.json"},{"sort":244,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"B1 QXV","fileName":"SB2QXV6.json"},{"sort":245,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"STATES","fileName":"IB2QXV8.txt"},{"sort":246,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"IB2QXV6.txt"},{"sort":247,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"QXV","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"IB2QXV7.txt"},{"sort":248,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"QXV","newlineChunking":false,"display":"SPEED DRILL","fileName":"IB2QXV9.json"},{"sort":249,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"7","fileName":"IB2731.json"},{"sort":250,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"3","fileName":"IB2732.json"},{"sort":251,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"73","fileName":"IB2733.json"},{"sort":252,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"?","fileName":"IB2734.json"},{"sort":253,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"73?","fileName":"IB2735.json"},{"sort":254,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"B1 73?","fileName":"SB2737.json"},{"sort":255,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"CALLSIGNS","fileName":"IB2738.txt"},{"sort":256,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"STATES","fileName":"IB2739.txt"},{"sort":257,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"QSO ABREVIATIONS","fileName":"IB2736.txt"},{"sort":258,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"73?","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"IB2737.txt"},{"sort":259,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"73?","newlineChunking":false,"display":"SPEED DRILL","fileName":"IB27310.json"},{"sort":260,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"<AR>","fileName":"IB2ARSKBT1.json"},{"sort":261,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"<SK>","fileName":"IB2ARSKBT2.json"},{"sort":262,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"<AR><SK>","fileName":"IB2ARSKBT3.json"},{"sort":263,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"<BT>","fileName":"IB2ARSKBT4.json"},{"sort":264,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"<AR><SK><BT>","fileName":"IB2ARSKBT5.json"},{"sort":265,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"B1 <AR><SK><BT>","fileName":"SB2ARSKBT6.json"},{"sort":266,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"STATES","fileName":"IB2ARSKBT8.txt"},{"sort":267,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"QSO ABREVIATIONS","fileName":"IB2ARSKBT6.txt"},{"sort":268,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"IB2ARSKBT7.txt"},{"sort":269,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"<AR><SK><BT>","newlineChunking":false,"display":"SPEED DRILL","fileName":"IB2ARSKBT9.json"},{"sort":270,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"1","fileName":"IB2161.json"},{"sort":271,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"6","fileName":"IB2162.json"},{"sort":272,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"16","fileName":"IB2163.json"},{"sort":273,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"16.","newlineChunking":false,"display":".","fileName":"IB2164.json"},{"sort":274,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"16.","fileName":"IB2165.json"},{"sort":275,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"B1 16.","fileName":"SB2167.json"},{"sort":276,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"CALLSIGNS","fileName":"IB2168.txt"},{"sort":277,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"STATES","fileName":"IB2169.txt"},{"sort":278,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"IB2166.txt"},{"sort":279,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"16.","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"IB2167.txt"},{"sort":280,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"16.","newlineChunking":false,"display":"SPEED DRILL","fileName":"IB21610.json"},{"sort":281,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"Z ","fileName":"IB2ZJ1.json"},{"sort":282,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"J","fileName":"IB2ZJ2.json"},{"sort":283,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"ZJ ","fileName":"IB2ZJ3.json"},{"sort":284,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"/","fileName":"IB2ZJ4.json"},{"sort":285,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"ZJ/","fileName":"IB2ZJ5.json"},{"sort":286,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"B1 ZJ/","fileName":"SB2ZJ6.json"},{"sort":287,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"STATES","fileName":"IB2ZJ8.txt"},{"sort":288,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"IB2ZJ6.txt"},{"sort":289,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"ZJ/","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"IB2ZJ7.txt"},{"sort":290,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"ZJ/","newlineChunking":false,"display":"SPEED DRILL","fileName":"IB2ZJ9.json"},{"sort":291,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"2","fileName":"IB228BK1.json"},{"sort":292,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"8","fileName":"IB228BK2.json"},{"sort":293,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"28","fileName":"IB228BK3.json"},{"sort":294,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"BK","fileName":"IB228BK4.json"},{"sort":295,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"28BK","fileName":"IB228BK5.json"},{"sort":296,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"B1 28BK","fileName":"SB228BK7.json"},{"sort":297,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"CALLSIGNS","fileName":"IB228BK8.txt"},{"sort":298,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"STATES","fileName":"IB228BK9.txt"},{"sort":299,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"QSO ABBREVIATIONS","fileName":"IB228BK6.txt"},{"sort":300,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"28BK","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"IB228BK7.txt"},{"sort":301,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"28BK","newlineChunking":false,"display":"SPEED DRILL","fileName":"IB228BK10.json"},{"sort":302,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"40","newlineChunking":false,"display":"4","fileName":"IB2401.json"},{"sort":303,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"40","newlineChunking":false,"display":"0","fileName":"IB2402.json"},{"sort":304,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"40","newlineChunking":false,"display":"40","fileName":"IB2403.json"},{"sort":305,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"40","newlineChunking":false,"display":"B1 40","fileName":"SB2407.json"},{"sort":306,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"40","newlineChunking":false,"display":"CALLSIGNS","fileName":"IB2406.txt"},{"sort":307,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"40","newlineChunking":false,"display":"STATES","fileName":"IB2407.txt"},{"sort":308,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"40","newlineChunking":false,"display":"QSO ABBREVIATIONS ","fileName":"IB2404.txt"},{"sort":309,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"40","newlineChunking":true,"display":"QSO PROTOCOL","fileName":"IB2405.txt"},{"sort":310,"userTarget":"INSTRUCTOR","class":"B2","letterGroup":"40","newlineChunking":false,"display":"SPEED DRILL","fileName":"IB2408.json"},{"sort":311,"userTarget":"INSTRUCTOR","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":false,"display":"B1B2 REVIEW","fileName":"IB2C1.json"},{"sort":312,"userTarget":"INSTRUCTOR","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":false,"display":"QSO ABBREVIATIONS ","fileName":"IB2C2.txt"},{"sort":313,"userTarget":"INSTRUCTOR","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":true,"display":"QSO PROTOCOL 1","fileName":"IB2C3.txt"},{"sort":314,"userTarget":"INSTRUCTOR","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":true,"display":"QSO PROTOCOL 2","fileName":"IB2C4.txt"},{"sort":315,"userTarget":"INSTRUCTOR","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":true,"display":"QSO PROTOCOL 3","fileName":"IB2C5.txt"},{"sort":316,"userTarget":"INSTRUCTOR","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":true,"display":"QSO PROTOCOL 4","fileName":"IB2C6.txt"},{"sort":317,"userTarget":"INSTRUCTOR","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":false,"display":"CALLSIGNS","fileName":"IB2C7.txt"},{"sort":318,"userTarget":"INSTRUCTOR","class":"CAPSTONE","letterGroup":"CAPSTONE","newlineChunking":false,"display":"STATES","fileName":"IB2C8.txt"},{"sort":319,"userTarget":"STUDENT","class":"ICR","letterGroup":"LETTERS","newlineChunking":false,"display":"LETTERS","fileName":"ICR1.json"},{"sort":320,"userTarget":"STUDENT","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"STATE ABBREVIATIONS","fileName":"ICR2.txt"},{"sort":321,"userTarget":"STUDENT","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"2 LETTER","fileName":"ICR3.txt"},{"sort":322,"userTarget":"STUDENT","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"1-3 LETTER","fileName":"ICR4.txt"},{"sort":323,"userTarget":"STUDENT","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"1-4 LETTER","fileName":"ICR5.txt"},{"sort":324,"userTarget":"STUDENT","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"1-5 LETTER","fileName":"ICR6.txt"},{"sort":325,"userTarget":"STUDENT","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"1-6 LETTER","fileName":"ICR7.txt"},{"sort":326,"userTarget":"STUDENT","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"ALL","fileName":"ICR8.txt"},{"sort":327,"userTarget":"STUDENT","class":"ICR","letterGroup":"PHRASES","newlineChunking":true,"display":"1-4 LETTER","fileName":"ICR9.txt"},{"sort":328,"userTarget":"STUDENT","class":"ICR","letterGroup":"PHRASES","newlineChunking":true,"display":"1-5 LETTER","fileName":"ICR10.txt"},{"sort":329,"userTarget":"STUDENT","class":"ICR","letterGroup":"PHRASES","newlineChunking":true,"display":"1-6 LETTER","fileName":"ICR11.txt"},{"sort":330,"userTarget":"STUDENT","class":"ICR","letterGroup":"PHRASES","newlineChunking":true,"display":"ALL","fileName":"ICR12.txt"},{"sort":331,"userTarget":"INSTRUCTOR","class":"ICR","letterGroup":"LETTERS","newlineChunking":false,"display":"LETTERS","fileName":"ICR1.json"},{"sort":332,"userTarget":"INSTRUCTOR","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"STATE ABBREVIATIONS","fileName":"ICR2.txt"},{"sort":333,"userTarget":"INSTRUCTOR","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"2 LETTER","fileName":"ICR3.txt"},{"sort":334,"userTarget":"INSTRUCTOR","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"1-3 LETTER","fileName":"ICR4.txt"},{"sort":335,"userTarget":"INSTRUCTOR","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"1-4 LETTER","fileName":"ICR5.txt"},{"sort":336,"userTarget":"INSTRUCTOR","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"1-5 LETTER","fileName":"ICR6.txt"},{"sort":337,"userTarget":"INSTRUCTOR","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"1-6 LETTER","fileName":"ICR7.txt"},{"sort":338,"userTarget":"INSTRUCTOR","class":"ICR","letterGroup":"WORDS","newlineChunking":true,"display":"ALL","fileName":"ICR8.txt"},{"sort":339,"userTarget":"INSTRUCTOR","class":"ICR","letterGroup":"PHRASES","newlineChunking":true,"display":"1-4 LETTER","fileName":"ICR9.txt"},{"sort":340,"userTarget":"INSTRUCTOR","class":"ICR","letterGroup":"PHRASES","newlineChunking":true,"display":"1-5 LETTER","fileName":"ICR10.txt"},{"sort":341,"userTarget":"INSTRUCTOR","class":"ICR","letterGroup":"PHRASES","newlineChunking":true,"display":"1-6 LETTER","fileName":"ICR11.txt"},{"sort":342,"userTarget":"INSTRUCTOR","class":"ICR","letterGroup":"PHRASES","newlineChunking":true,"display":"ALL","fileName":"ICR12.txt"},{"sort":343,"userTarget":"STUDENT","class":"VAR SPEED","letterGroup":"LETTER","newlineChunking":false,"display":"3 X 3","fileName":"per1.txt"},{"sort":344,"userTarget":"STUDENT","class":"VAR SPEED","letterGroup":"LETTER","newlineChunking":false,"display":"4 X 4","fileName":"per2.txt"},{"sort":345,"userTarget":"STUDENT","class":"VAR SPEED","letterGroup":"LETTER","newlineChunking":false,"display":"5 X 5","fileName":"per3.txt"},{"sort":346,"userTarget":"STUDENT","class":"VAR SPEED","letterGroup":"FOCUS","newlineChunking":false,"display":"FOCUS","fileName":"per4.txt"},{"sort":347,"userTarget":"STUDENT","class":"VAR SPEED","letterGroup":"SENTENCE","newlineChunking":false,"display":"ONE","fileName":"per5.txt"},{"sort":348,"userTarget":"STUDENT","class":"VAR SPEED","letterGroup":"SENTENCE","newlineChunking":false,"display":"TWO","fileName":"per6.txt"},{"sort":349,"userTarget":"STUDENT","class":"VAR SPEED","letterGroup":"SENTENCE","newlineChunking":false,"display":"THREE","fileName":"per7.txt"},{"sort":350,"userTarget":"STUDENT","class":"VAR SPEED","letterGroup":"SENTENCE","newlineChunking":false,"display":"FOUR","fileName":"per8.txt"},{"sort":351,"userTarget":"INSTRUCTOR","class":"VAR SPEED","letterGroup":"LETTER","newlineChunking":false,"display":"3 X 3","fileName":"per1.txt"},{"sort":352,"userTarget":"INSTRUCTOR","class":"VAR SPEED","letterGroup":"LETTER","newlineChunking":false,"display":"4 X 4","fileName":"per2.txt"},{"sort":353,"userTarget":"INSTRUCTOR","class":"VAR SPEED","letterGroup":"LETTER","newlineChunking":false,"display":"5 X 5","fileName":"per3.txt"},{"sort":354,"userTarget":"INSTRUCTOR","class":"VAR SPEED","letterGroup":"FOCUS","newlineChunking":false,"display":"FOCUS","fileName":"per4.txt"},{"sort":355,"userTarget":"INSTRUCTOR","class":"VAR SPEED","letterGroup":"SENTENCE","newlineChunking":false,"display":"ONE","fileName":"per5.txt"},{"sort":356,"userTarget":"INSTRUCTOR","class":"VAR SPEED","letterGroup":"SENTENCE","newlineChunking":false,"display":"TWO","fileName":"per6.txt"},{"sort":357,"userTarget":"INSTRUCTOR","class":"VAR SPEED","letterGroup":"SENTENCE","newlineChunking":false,"display":"THREE","fileName":"per7.txt"},{"sort":358,"userTarget":"INSTRUCTOR","class":"VAR SPEED","letterGroup":"SENTENCE","newlineChunking":false,"display":"FOUR","fileName":"per8.txt"},{"sort":359,"userTarget":"STUDENT","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA UWB HOF STATES","fileName":"REA8.txt"},{"sort":360,"userTarget":"STUDENT","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA UWB HOF    QSO ABBREVIATIONS","fileName":"REA9.txt"},{"sort":361,"userTarget":"STUDENT","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA UWB HOF WORDS","fileName":"REA10.txt"},{"sort":362,"userTarget":"STUDENT","class":"B1","letterGroup":"REA","newlineChunking":true,"display":"REA UWB HOF PHRASES","fileName":"REA11.txt"},{"sort":363,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA UWB HOF STATES","fileName":"REA8.txt"},{"sort":364,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA UWB HOF    QSO ABBREVIATIONS","fileName":"REA9.txt"},{"sort":365,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"REA","newlineChunking":false,"display":"REA UWB HOF WORDS","fileName":"REA10.txt"},{"sort":366,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"REA","newlineChunking":true,"display":"REA UWB HOF PHRASES","fileName":"REA11.txt"},{"sort":367,"userTarget":"STUDENT","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN REA UWB STATES","fileName":"TIN8.txt"},{"sort":368,"userTarget":"STUDENT","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN REA UWB    QSO ABBREVIATIONS","fileName":"TIN9.txt"},{"sort":369,"userTarget":"STUDENT","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN REA UWB WORDS","fileName":"TIN10.txt"},{"sort":370,"userTarget":"STUDENT","class":"B1","letterGroup":"TIN","newlineChunking":true,"display":"TIN REA UWB PHRASES","fileName":"TIN11.txt"},{"sort":371,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN REA UWB STATES","fileName":"TIN8.txt"},{"sort":372,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN REA UWB    QSO ABBREVIATIONS","fileName":"TIN9.txt"},{"sort":373,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"TIN","newlineChunking":false,"display":"TIN REA UWB WORDS","fileName":"TIN10.txt"},{"sort":374,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"TIN","newlineChunking":true,"display":"TIN REA UWB PHRASES","fileName":"TIN11.txt"},{"sort":375,"userTarget":"STUDENT","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS TIN REA STATES","fileName":"PGS8.txt"},{"sort":376,"userTarget":"STUDENT","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS TIN REA    QSO ABBREVIATIONS","fileName":"PGS9.txt"},{"sort":377,"userTarget":"STUDENT","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS TIN REA WORDS","fileName":"PGS10.txt"},{"sort":378,"userTarget":"STUDENT","class":"B1","letterGroup":"PGS","newlineChunking":true,"display":"PGS TIN REA PHRASES","fileName":"PGS11.txt"},{"sort":379,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS TIN REA STATES","fileName":"PGS8.txt"},{"sort":380,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS TIN REA    QSO ABBREVIATIONS","fileName":"PGS9.txt"},{"sort":381,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"PGS","newlineChunking":false,"display":"PGS TIN REA WORDS","fileName":"PGS10.txt"},{"sort":382,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"PGS","newlineChunking":true,"display":"PGS TIN REA PHRASES","fileName":"PGS11.txt"},{"sort":383,"userTarget":"STUDENT","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD PGS TIN STATES","fileName":"LCD8.txt"},{"sort":384,"userTarget":"STUDENT","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD PGS TIN    QSO ABBREVIATIONS","fileName":"LCD9.txt"},{"sort":385,"userTarget":"STUDENT","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD PGS TIN WORDS","fileName":"LCD10.txt"},{"sort":386,"userTarget":"STUDENT","class":"B1","letterGroup":"LCD","newlineChunking":true,"display":"LCD PGS TIN PHRASES","fileName":"LCD11.txt"},{"sort":387,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD PGS TIN STATES","fileName":"LCD8.txt"},{"sort":388,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD PGS TIN    QSO ABBREVIATIONS","fileName":"LCD9.txt"},{"sort":389,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"LCD","newlineChunking":false,"display":"LCD PGS TIN WORDS","fileName":"LCD10.txt"},{"sort":390,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"LCD","newlineChunking":true,"display":"LCD PGS TIN PHRASES","fileName":"LCD11.txt"},{"sort":391,"userTarget":"STUDENT","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF LCD PGS STATES","fileName":"HOF8.txt"},{"sort":392,"userTarget":"STUDENT","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF LCD PGS    QSO ABBREVIATIONS","fileName":"HOF9.txt"},{"sort":393,"userTarget":"STUDENT","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF LCD PGS WORDS","fileName":"HOF10.txt"},{"sort":394,"userTarget":"STUDENT","class":"B1","letterGroup":"HOF","newlineChunking":true,"display":"HOF LCD PGS PHRASES","fileName":"HOF11.txt"},{"sort":395,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF LCD PGS STATES","fileName":"HOF8.txt"},{"sort":396,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF LCD PGS    QSO ABBREVIATIONS","fileName":"HOF9.txt"},{"sort":397,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"HOF","newlineChunking":false,"display":"HOF LCD PGS WORDS","fileName":"HOF10.txt"},{"sort":398,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"HOF","newlineChunking":true,"display":"HOF LCD PGS PHRASES","fileName":"HOF11.txt"},{"sort":399,"userTarget":"STUDENT","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB HOF LCD STATES","fileName":"UWB8.txt"},{"sort":400,"userTarget":"STUDENT","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB HOF LCD    QSO ABBREVIATIONS","fileName":"UWB9.txt"},{"sort":401,"userTarget":"STUDENT","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB HOF LCD WORDS","fileName":"UWB10.txt"},{"sort":402,"userTarget":"STUDENT","class":"B1","letterGroup":"UWB","newlineChunking":true,"display":"UWB HOF LCD PHRASES","fileName":"UWB11.txt"},{"sort":403,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB HOF LCD STATES","fileName":"UWB8.txt"},{"sort":404,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB HOF LCD    QSO ABBREVIATIONS","fileName":"UWB9.txt"},{"sort":405,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"UWB","newlineChunking":false,"display":"UWB HOF LCD WORDS","fileName":"UWB10.txt"},{"sort":406,"userTarget":"INSTRUCTOR","class":"B1","letterGroup":"UWB","newlineChunking":true,"display":"UWB HOF LCD PHRASES","fileName":"UWB11.txt"}]}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + "" + {"node_modules_white-noise-node_index_js":"8f7211d8dbf839594ec8","node_modules_brown-noise-node_index_js":"48020e170357a54e2db8","node_modules_pink-noise-node_index_js":"66d191406f6888a7dd66","src_wordfiles_B1_json":"f7c6772f7425362be84a","src_wordfiles_B1B2_json":"d67a42299502d7ae8d53","src_wordfiles_B2_json":"85544f12aac07d7c6be6","src_wordfiles_HOF10_txt":"3de2155fa132652e5151","src_wordfiles_HOF11_txt":"a4d36fc5137dec633f10","src_wordfiles_HOF8_txt":"bab310227ad4510aa36e","src_wordfiles_HOF9_txt":"f8ddb3cf6c199a805247","src_wordfiles_IB1HOF1_json":"a366e8fd785157338088","src_wordfiles_IB1HOF2_json":"7301f73b4edb7ed60915","src_wordfiles_IB1HOF3_json":"1742e5e7f8e7928045ce","src_wordfiles_IB1HOF4_json":"68651861f929618cb9f0","src_wordfiles_IB1HOF5_json":"7a6f47bfa0880d87f6b0","src_wordfiles_IB1HOF6_json":"f75ffad8c4e8614fd1b4","src_wordfiles_IB1HOF7_json":"da76867cd4bd058362c9","src_wordfiles_IB1LCD1_json":"55c076fe0c60fa28acb8","src_wordfiles_IB1LCD2_json":"92d823481474a2a24c5a","src_wordfiles_IB1LCD3_json":"9b3d8fd7104a08386931","src_wordfiles_IB1LCD4_json":"91647338f7bf3194b1de","src_wordfiles_IB1LCD5_json":"2157edf057efedc4a05e","src_wordfiles_IB1LCD6_json":"c7c7f6b32496b5e98c9f","src_wordfiles_IB1LCD7_json":"963fe64509d1aad90ac7","src_wordfiles_IB1PGS1_json":"f6c304163d3104bd633a","src_wordfiles_IB1PGS2_json":"f654d302aef948c5d8be","src_wordfiles_IB1PGS3_json":"a4ffa058d84029733acf","src_wordfiles_IB1PGS4_json":"67d29828d3430cb011b5","src_wordfiles_IB1PGS5_json":"7bb27a3e074f36e8fc27","src_wordfiles_IB1PGS6_json":"f5c725f676dfa3eb9d91","src_wordfiles_IB1PGS7_json":"25386808ad49a222621b","src_wordfiles_IB1REA1_json":"71c27a61eba0bbaa6fc9","src_wordfiles_IB1REA2_json":"d0547f6c93ed855f5282","src_wordfiles_IB1REA3_json":"0351c98f8764357f43cb","src_wordfiles_IB1REA4_json":"63de93631c94e8a9db3d","src_wordfiles_IB1REA5_json":"a8c7fee71a0c99197e4b","src_wordfiles_IB1REA6_json":"13265b49131f95bf1e75","src_wordfiles_IB1REA7_json":"4651e311e9a11f671e33","src_wordfiles_IB1TIN1_json":"76e859a113fcaa160621","src_wordfiles_IB1TIN2_json":"19176bc409f4c239aa10","src_wordfiles_IB1TIN3_json":"535125fd3a13e1147f5b","src_wordfiles_IB1TIN4_json":"f9e3fd78dba652ef7321","src_wordfiles_IB1TIN5_json":"4ed95acacdd3df80b90d","src_wordfiles_IB1TIN6_json":"ad596b838ecac78cde77","src_wordfiles_IB1TIN7_json":"a6484e5640cc148eb962","src_wordfiles_IB1UWB1_json":"a1074cd179118026a3d9","src_wordfiles_IB1UWB2_json":"a9367b7ec7858cff9722","src_wordfiles_IB1UWB3_json":"273788ac7e2601786aba","src_wordfiles_IB1UWB4_json":"b353f1bf1028de6126e4","src_wordfiles_IB1UWB5_json":"110fb972dec3677cfd5b","src_wordfiles_IB1UWB6_json":"78153a3e96d9067c3087","src_wordfiles_IB1UWB7_json":"3c7117581ea4702a56ed","src_wordfiles_IB2161_json":"aa1f47cd72558c355e3d","src_wordfiles_IB21610_json":"90dfedda444f810b83e2","src_wordfiles_IB2162_json":"648b8dc20568d12d529d","src_wordfiles_IB2163_json":"2bf7ae0825a7f416101c","src_wordfiles_IB2164_json":"fea3eb394a9a20bd1b2b","src_wordfiles_IB2165_json":"6c4e0b6e753cf273aa23","src_wordfiles_IB2166_txt":"37eb47345e9bbd34967d","src_wordfiles_IB2167_txt":"bb50684df556847f482b","src_wordfiles_IB2168_txt":"df676ca93ea29b615440","src_wordfiles_IB2169_txt":"4b415510d1ef582e5480","src_wordfiles_IB228BK1_json":"cfaa64d3099c5d0fac19","src_wordfiles_IB228BK10_json":"73d2d25e4155deb832ae","src_wordfiles_IB228BK2_json":"5685f8fa5ac6a8be7451","src_wordfiles_IB228BK3_json":"9c686fb3de6d24c91a43","src_wordfiles_IB228BK4_json":"36f4c007c255e0403c5f","src_wordfiles_IB228BK5_json":"c1c8608e21aea68b9f0d","src_wordfiles_IB228BK6_txt":"6362047ee0a201679dd1","src_wordfiles_IB228BK7_txt":"db0db69795ef89a342aa","src_wordfiles_IB228BK8_txt":"868b802a25059a806bd0","src_wordfiles_IB228BK9_txt":"68d367d90ef3a223aea5","src_wordfiles_IB2401_json":"3f65c6d3e47d12184bd3","src_wordfiles_IB2402_json":"fa05da2e6c8562843ede","src_wordfiles_IB2403_json":"59a468194bfdc4cad0d3","src_wordfiles_IB2404_txt":"a12f4f2b54e70d6befdf","src_wordfiles_IB2405_txt":"3dca1783d3624027a4a0","src_wordfiles_IB2406_txt":"4934b81fe0c10e3030c3","src_wordfiles_IB2407_txt":"b85fdaee4e0487065667","src_wordfiles_IB2408_json":"e5ca0193e8c64b70981e","src_wordfiles_IB2591_json":"7d8053c994ad9fa0a40d","src_wordfiles_IB25910_json":"2bac8765e9782c565a63","src_wordfiles_IB2592_json":"bf932f695f5cd170dc58","src_wordfiles_IB2593_json":"c8a86ef297177e2a8cf6","src_wordfiles_IB2594_json":"dd7469332fd67ccedd2c","src_wordfiles_IB2595_json":"c1f30a3deb620eba149e","src_wordfiles_IB2596_txt":"c3c314b46f80081e8e81","src_wordfiles_IB2597_txt":"8d116a55de5f24bc618f","src_wordfiles_IB2598_txt":"ce4c16e7ebd774dce5c1","src_wordfiles_IB2599_txt":"fb7e0dab8438cae66109","src_wordfiles_IB2731_json":"53f6287367a3bead9ebe","src_wordfiles_IB27310_json":"3bedb6b19327986776af","src_wordfiles_IB2732_json":"f44661964bdbe9a60874","src_wordfiles_IB2733_json":"c98fe0e63766c3b5a618","src_wordfiles_IB2734_json":"c79406a56e9347cd2470","src_wordfiles_IB2735_json":"282283d210d7a78469a2","src_wordfiles_IB2736_txt":"3417f9ca2071b4c28546","src_wordfiles_IB2737_txt":"58aa1f079346b1fe50ec","src_wordfiles_IB2738_txt":"b73c79237339b5e103a7","src_wordfiles_IB2739_txt":"1e6047628ebd6bb62e3b","src_wordfiles_IB2ARSKBT1_json":"9f0890331d42e1989332","src_wordfiles_IB2ARSKBT2_json":"5e3eda642ae6cda00cdc","src_wordfiles_IB2ARSKBT3_json":"cc8d01cb156a29002e6a","src_wordfiles_IB2ARSKBT4_json":"a3109374636e937d2154","src_wordfiles_IB2ARSKBT5_json":"25160b78273528e568da","src_wordfiles_IB2ARSKBT6_txt":"d83ee2a3df1288bc1f0c","src_wordfiles_IB2ARSKBT7_txt":"14f2ca17a0dbfe57b706","src_wordfiles_IB2ARSKBT8_txt":"8786394bdd04fb21d3ab","src_wordfiles_IB2ARSKBT9_json":"75a5a4db34ae851d045a","src_wordfiles_IB2C1_json":"e050c9ab941a9197abea","src_wordfiles_IB2C2_txt":"cfe5f3bc0bf710b46f53","src_wordfiles_IB2C3_txt":"f69c763bd8f65618bdec","src_wordfiles_IB2C4_txt":"8fa9c7044cca1df58ca5","src_wordfiles_IB2C5_txt":"9d054fa5c53e24ab35b0","src_wordfiles_IB2C6_txt":"9d8eefb51c40b9436067","src_wordfiles_IB2C7_txt":"f11b6518a6123437b74a","src_wordfiles_IB2C8_txt":"d77dcf773847421a31ca","src_wordfiles_IB2KMY1_json":"67365b747adb847f982d","src_wordfiles_IB2KMY2_json":"aefed79aef445aba2da7","src_wordfiles_IB2KMY3_json":"5eb75329a097cf124056","src_wordfiles_IB2KMY4_json":"eb93bd4c4edf8268d703","src_wordfiles_IB2KMY5_json":"6ceedebe9ef762a3a778","src_wordfiles_IB2KMY6_txt":"1e5f040acac2149fd7c0","src_wordfiles_IB2KMY7_txt":"7dc9f392521614783c59","src_wordfiles_IB2KMY8_txt":"fe05166673f36487e496","src_wordfiles_IB2KMY9_json":"09a2b36e9ef3884c215a","src_wordfiles_IB2QXV1_json":"45fc0188887c8a241fd5","src_wordfiles_IB2QXV2_json":"f3fef709fa474cfae53e","src_wordfiles_IB2QXV3_json":"0bdacda6fdf56ddb80e3","src_wordfiles_IB2QXV4_json":"143d759b17b96ce4f1d4","src_wordfiles_IB2QXV5_json":"27028a7abc536e04eaec","src_wordfiles_IB2QXV6_txt":"9904a2463fc5205b1591","src_wordfiles_IB2QXV7_txt":"b2603a35df2442c39855","src_wordfiles_IB2QXV8_txt":"77701dc3ff01e25e37f7","src_wordfiles_IB2QXV9_json":"7e888bc13e4dcb6324e9","src_wordfiles_IB2ZJ1_json":"4e603f868588d6ae3599","src_wordfiles_IB2ZJ2_json":"5d172b12137f0f86267b","src_wordfiles_IB2ZJ3_json":"b3a40eeb7051a017615e","src_wordfiles_IB2ZJ4_json":"623c0424495fa3d8e691","src_wordfiles_IB2ZJ5_json":"9a1f59f721d06f325f89","src_wordfiles_IB2ZJ6_txt":"60ae2396f51d4002dc3e","src_wordfiles_IB2ZJ7_txt":"0bdcbf8f416d83147b4f","src_wordfiles_IB2ZJ8_txt":"d444e5482c5ab745f890","src_wordfiles_IB2ZJ9_json":"70214cb9a624396e3af4","src_wordfiles_ICR1_json":"7ad89bb2cdf9fa321b2a","src_wordfiles_ICR1_txt":"292acf3f92177937e122","src_wordfiles_ICR10_txt":"ef1d610c42eac5a697fa","src_wordfiles_ICR11_txt":"b39aefc0329a4ae3b49a","src_wordfiles_ICR12_txt":"0cd4b58587a4a2412ede","src_wordfiles_ICR2_txt":"74e58e65f6c6a7eb4f11","src_wordfiles_ICR3_txt":"5da8a51891d482178c77","src_wordfiles_ICR4_txt":"c4d177a3914a78f811fe","src_wordfiles_ICR5_txt":"253345160e7bf05cc7f2","src_wordfiles_ICR6_txt":"ee355ffc2021a3f51495","src_wordfiles_ICR7_txt":"eea37b3ce68ab98b6e84","src_wordfiles_ICR8_txt":"7a252bc38751dfb1ef86","src_wordfiles_ICR9_txt":"c19b23b4ac5fbc83829d","src_wordfiles_LCD10_txt":"a0b98f6eae1d508fa267","src_wordfiles_LCD11_txt":"5fe7953cde6d31d1b528","src_wordfiles_LCD8_txt":"5f305930faedcb997234","src_wordfiles_LCD9_txt":"b06f018906f27f661397","src_wordfiles_PGS10_txt":"68c46affee84a1e3e1ed","src_wordfiles_PGS11_txt":"a2c529841a6e10c139b0","src_wordfiles_PGS8_txt":"8fb51eb6b9c94e1bfd53","src_wordfiles_PGS9_txt":"187a24db98cdff4b57cd","src_wordfiles_REA10_txt":"cecb9c6540c5519bd466","src_wordfiles_REA11_txt":"6ebfd679760b8aab2c9a","src_wordfiles_REA8_txt":"f776e8a225c08c6bba9c","src_wordfiles_REA9_txt":"98297af6225b1fc8dabd","src_wordfiles_SB1HOF1_json":"6d732e2f1c4645a2c3e6","src_wordfiles_SB1HOF2_json":"56418a1adc291c38d9b8","src_wordfiles_SB1HOF3_json":"617516b0ecc6cd410ae3","src_wordfiles_SB1HOF4_json":"c8a981ba7730af9be987","src_wordfiles_SB1HOF5_json":"8e15d9b419250bf048a2","src_wordfiles_SB1HOF6_json":"e4d2b6f16bcea6698c92","src_wordfiles_SB1LCD1_json":"b1c72ded36b521f35bbb","src_wordfiles_SB1LCD2_json":"898415e00372d93cf637","src_wordfiles_SB1LCD3_json":"e941a2ed6d52ed1d95c1","src_wordfiles_SB1LCD4_json":"3bca1c40a23ce6a7ccf3","src_wordfiles_SB1LCD5_json":"c56d0d019c3309aca87f","src_wordfiles_SB1LCD6_json":"6047b4ea5442243fbf20","src_wordfiles_SB1PGS1_json":"fb49dc7379de8f3a35bc","src_wordfiles_SB1PGS2_json":"e9b56b07f2a6cd00429f","src_wordfiles_SB1PGS3_json":"ff3e585152eac60eb737","src_wordfiles_SB1PGS4_json":"73fe4f410e4386e58ad8","src_wordfiles_SB1PGS5_json":"38622a55d5774117bbe9","src_wordfiles_SB1PGS6_json":"90209262818a636c82ea","src_wordfiles_SB1REA1_json":"c8f294a163deac94eac8","src_wordfiles_SB1REA2_json":"fa823af45fc4deeb0e57","src_wordfiles_SB1REA3_json":"22b134435f70bf8a9211","src_wordfiles_SB1REA4_json":"4db593b5caee454747f3","src_wordfiles_SB1REA5_json":"dfd8d7ee907ae00b3693","src_wordfiles_SB1REA6_json":"205cbf23fe7de7204214","src_wordfiles_SB1TIN1_json":"0d97d16c4d6e95360855","src_wordfiles_SB1TIN2_json":"4044147e964332e1d82c","src_wordfiles_SB1TIN3_json":"0d99a695601fa4302b38","src_wordfiles_SB1TIN4_json":"4a6b913ef418a3e4ed69","src_wordfiles_SB1TIN5_json":"36ddad4febd5fc9b787e","src_wordfiles_SB1TIN6_json":"f936aa0eaa75a0e34162","src_wordfiles_SB1UWB1_json":"3bd480bef5a44e5f2692","src_wordfiles_SB1UWB2_json":"a9629c9322a8d41cd966","src_wordfiles_SB1UWB3_json":"5bc8d64099ed95a1dc28","src_wordfiles_SB1UWB4_json":"21e513e3865e1116215a","src_wordfiles_SB1UWB5_json":"ac2a51fc2d965de12877","src_wordfiles_SB1UWB6_json":"d681ec4a0a9b2b9705dd","src_wordfiles_SB21610_json":"73b6fb148ec80b7578e7","src_wordfiles_SB21611_json":"6e2a4cfc664de8a49c9e","src_wordfiles_SB21612_json":"03e0087c91e7fc0438ed","src_wordfiles_SB21613_json":"1ca7e972cd92c963732e","src_wordfiles_SB21614_json":"a3694071d90c5e1d250f","src_wordfiles_SB2162_json":"b46b5f40f787989b5c75","src_wordfiles_SB2163_txt":"590d2c5ff0db5d9bb0eb","src_wordfiles_SB2164_txt":"286f0c20515b0a75f6b6","src_wordfiles_SB2165_txt":"9900c3b6c8aeb78bd8a0","src_wordfiles_SB2166_txt":"d0bc3b0365e4b37f6463","src_wordfiles_SB2167_json":"500945e98ac0b96c80e6","src_wordfiles_SB2168_json":"57495c6f81706a87d3be","src_wordfiles_SB2169_json":"497020ec4621fa381d8b","src_wordfiles_SB228BK10_json":"8a6bf436746660e09c8c","src_wordfiles_SB228BK11_json":"7fdf182c994ebfe79c6c","src_wordfiles_SB228BK12_json":"569c2235ac58bf711592","src_wordfiles_SB228BK13_json":"6c671760c425cbf9d81e","src_wordfiles_SB228BK14_json":"c8f53e57ebbe8e3eb9e6","src_wordfiles_SB228BK2_json":"1842a56edc6d70b1ee90","src_wordfiles_SB228BK3_txt":"8ee42af614540dd3aa62","src_wordfiles_SB228BK4_txt":"6eebfc882341408821cf","src_wordfiles_SB228BK5_txt":"d86a13cb073ea1756887","src_wordfiles_SB228BK6_txt":"5f3f1816907832675796","src_wordfiles_SB228BK7_json":"2b479eb4226a5eb12e24","src_wordfiles_SB228BK8_json":"4ab47dd7aec12df143fc","src_wordfiles_SB228BK9_json":"df9ca849f52a06fd9df2","src_wordfiles_SB24010_json":"2d452de2776abdc641cf","src_wordfiles_SB24011_json":"7e2c60787caf819ac1d5","src_wordfiles_SB24012_json":"82c21b007024133c5802","src_wordfiles_SB24013_json":"4c73481a502cc9bf1fa8","src_wordfiles_SB24014_json":"f559d8c18aaabd54f352","src_wordfiles_SB2402_json":"655d79abaf024c2d1dba","src_wordfiles_SB2403_txt":"470a2308176fe96c1b0e","src_wordfiles_SB2404_txt":"0752bcbe558d672fa929","src_wordfiles_SB2405_txt":"1a7718a294d4e7916489","src_wordfiles_SB2406_txt":"82e5a46126e2478c93bc","src_wordfiles_SB2407_json":"971736e09b26c4d71d8a","src_wordfiles_SB2408_json":"d1ed82eaf88fcf8a7e69","src_wordfiles_SB2409_json":"dde551ea5cc05427f018","src_wordfiles_SB25910_json":"f0aac635f2b19b575fd5","src_wordfiles_SB25911_json":"a36119ce41feee2a2df7","src_wordfiles_SB25912_json":"2ce5da953590d4393313","src_wordfiles_SB25913_json":"94674feba20d8dd35ee7","src_wordfiles_SB25914_json":"ec6c092e0e65f9087bc6","src_wordfiles_SB2592_json":"38cb635167b2303b0399","src_wordfiles_SB2593_txt":"8db69722c07d6662cd02","src_wordfiles_SB2594_txt":"eb939193c9a1ab8d381c","src_wordfiles_SB2595_txt":"478f59b81bc06a36be7e","src_wordfiles_SB2596_txt":"1402cd4a2dc1e96892b6","src_wordfiles_SB2597_json":"3e3c6a87a3e10a4fd54d","src_wordfiles_SB2598_json":"5ed647df330a08029d08","src_wordfiles_SB2599_json":"4a76f6a7d544b402b2bf","src_wordfiles_SB27310_json":"d4ff2f57af0f295199f7","src_wordfiles_SB27311_json":"2361d2416543cc2750cd","src_wordfiles_SB27312_json":"b8a4179ab5a26d287595","src_wordfiles_SB27313_json":"cc1b23da9e6ccd3005e5","src_wordfiles_SB27314_json":"b2fd1fee44f04bdf4d56","src_wordfiles_SB2732_json":"a2cb75ff0fc045483d5c","src_wordfiles_SB2733_txt":"1dfb0c4f4140a2271238","src_wordfiles_SB2734_txt":"dd7f8688e83ad5a4b41d","src_wordfiles_SB2735_txt":"031a9475005f98eb7185","src_wordfiles_SB2736_txt":"52c634d9c8636bd0ded9","src_wordfiles_SB2737_json":"29915123c38a9d15b311","src_wordfiles_SB2738_json":"21aeabd6f028ef03681d","src_wordfiles_SB2739_json":"655230e40a5e78233eeb","src_wordfiles_SB2ARSKBT10_json":"f5d0f7e46370570862a6","src_wordfiles_SB2ARSKBT11_json":"a17e908597c631757ef7","src_wordfiles_SB2ARSKBT12_json":"4621c09ba5e005ed3eed","src_wordfiles_SB2ARSKBT13_json":"4a47579c786085b3413e","src_wordfiles_SB2ARSKBT2_json":"cadabe577d1bb9f22025","src_wordfiles_SB2ARSKBT3_txt":"96bd5ff03bf62b3175ff","src_wordfiles_SB2ARSKBT4_txt":"30aec58f759be9ba5e76","src_wordfiles_SB2ARSKBT5_txt":"f30216ec1a236849e9d1","src_wordfiles_SB2ARSKBT6_json":"3d3da3e70acfb7e8a7d6","src_wordfiles_SB2ARSKBT7_json":"2464b29622bd987681b9","src_wordfiles_SB2ARSKBT8_json":"e2b1b98513a64db4b3e8","src_wordfiles_SB2ARSKBT9_json":"a90401bad53e2a7bda73","src_wordfiles_SB2C1_json":"25e59dc1d7f53c1c8af9","src_wordfiles_SB2C2_txt":"1fbbd9fa3c2c71e16333","src_wordfiles_SB2C3_txt":"dd80655e8acf3e0ea34b","src_wordfiles_SB2C4_txt":"d0706194e4d56cc4a220","src_wordfiles_SB2C5_txt":"e5a76eb280da000902e0","src_wordfiles_SB2C6_txt":"29ee271cd6835732b591","src_wordfiles_SB2C7_txt":"1d2f183305db7b00d40f","src_wordfiles_SB2C8_txt":"e867f4a856ca59e03b9e","src_wordfiles_SB2KMY10_json":"af6540115c33b645a944","src_wordfiles_SB2KMY11_json":"861336361aa9383e02ce","src_wordfiles_SB2KMY12_json":"1b17e32672bb724c5a96","src_wordfiles_SB2KMY13_json":"328b59b263ff777fbe8a","src_wordfiles_SB2KMY2_json":"3a890d8c71b96d20d756","src_wordfiles_SB2KMY3_txt":"ed5717a6e72e23929ade","src_wordfiles_SB2KMY4_txt":"142df1e242e099ab81d9","src_wordfiles_SB2KMY5_txt":"9e04f500b37557775cff","src_wordfiles_SB2KMY6_json":"fe412a878c3f58191d2c","src_wordfiles_SB2KMY7_json":"312ca5544d12bb0a6b86","src_wordfiles_SB2KMY8_json":"e60606b8a71525420860","src_wordfiles_SB2KMY9_json":"fcac7c6850e50d1be601","src_wordfiles_SB2QXV10_json":"36bffa30040c1e56b17e","src_wordfiles_SB2QXV11_json":"196b4672ad991736cd60","src_wordfiles_SB2QXV12_json":"0221c235a828d31a3314","src_wordfiles_SB2QXV13_json":"65b8147a7bbcf2d255ce","src_wordfiles_SB2QXV2_json":"47a5b08891588d35ec5e","src_wordfiles_SB2QXV3_txt":"bc3455008f680f2e95bf","src_wordfiles_SB2QXV4_txt":"59b231620b69569daf95","src_wordfiles_SB2QXV5_txt":"6daad13501b83e7b4308","src_wordfiles_SB2QXV6_json":"d79a4bade950388e61b0","src_wordfiles_SB2QXV7_json":"02405ec6ba1141f9291d","src_wordfiles_SB2QXV8_json":"8b5e7b3edaf67be7587e","src_wordfiles_SB2QXV9_json":"8af9f16b87c5f545f495","src_wordfiles_SB2ZJ10_json":"872ae9aeb62f0584ce98","src_wordfiles_SB2ZJ11_json":"8497e4f2d4bae1b88cde","src_wordfiles_SB2ZJ12_json":"e70aa340a220aed901c8","src_wordfiles_SB2ZJ13_json":"5e16937dbffa5cfb9085","src_wordfiles_SB2ZJ2_json":"a846ba08fc4a138c757d","src_wordfiles_SB2ZJ3_txt":"dd1b9f725ceb8b5d4d8c","src_wordfiles_SB2ZJ4_txt":"2a3f3412a093d7ec0156","src_wordfiles_SB2ZJ5_txt":"a5e6ab9019675ce81a4f","src_wordfiles_SB2ZJ6_json":"bcc919ba5721d5370087","src_wordfiles_SB2ZJ7_json":"4974a1228a7426d24469","src_wordfiles_SB2ZJ8_json":"c2d74c29cd322d3c1027","src_wordfiles_SB2ZJ9_json":"b7385302e45ec389d3db","src_wordfiles_TIN10_txt":"eab37b3b56433b935516","src_wordfiles_TIN11_txt":"ead7be8997d08382801b","src_wordfiles_TIN8_txt":"49425e7d97e5958cc2c2","src_wordfiles_TIN9_txt":"c628860221849717c4aa","src_wordfiles_UWB10_txt":"91e6f00b6844e2960f10","src_wordfiles_UWB11_txt":"191d68dabdacc23dfd99","src_wordfiles_UWB8_txt":"40f04bfe7544e96c2131","src_wordfiles_UWB9_txt":"e32b704be09037d9f971","src_wordfiles_per1_txt":"d1f1f6afc7a25fe68e97","src_wordfiles_per10_txt":"719d0992635929106c35","src_wordfiles_per11_txt":"9cae2b3c516665ef4afd","src_wordfiles_per2_txt":"9177b8b9f6bb548d2076","src_wordfiles_per3_txt":"6c93d10a432fc994a05e","src_wordfiles_per4_txt":"93838554fb441b2f5778","src_wordfiles_per5_txt":"99911da05008e32edc00","src_wordfiles_per6_txt":"dfd854e72d5b26435a13","src_wordfiles_per7_txt":"15d8c702305b416381f8","src_wordfiles_per8_txt":"8e9d7cd8377a7c0cdf7a","src_wordfiles_per9_txt":"b3d699ffdddf0e8afc0d","vendors-node_modules_rss-parser_index_js":"620d1ab3bb69d62f7b1e","rss-parser":"f0efaf0e7fe3e6a65b70"}[chunkId] + ".js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		// data-webpack is not used as build has no uniqueName
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"bundle": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var bootstrap_dist_css_bootstrap_min_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bootstrap/dist/css/bootstrap.min.css */ "./node_modules/bootstrap/dist/css/bootstrap.min.css");
/* harmony import */ var bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bootstrap */ "./node_modules/bootstrap/dist/js/bootstrap.esm.js");
/* harmony import */ var _morse_morse_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./morse/morse.ts */ "./src/morse/morse.ts");
 // see https://getbootstrap.com/docs/5.0/getting-started/webpack/

 // You can specify which plugins you need
// Note that even though these don't seem to be used directly,
// they are used by the accordian.
// eslint-disable-next-line no-unused-vars



knockout__WEBPACK_IMPORTED_MODULE_0___default().applyBindings(new _morse_morse_ts__WEBPACK_IMPORTED_MODULE_3__.MorseViewModel());
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,